start cypress-mochawesome-reporter 3.8.2
cwd: /Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation
cypress.json: {"configFile":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress.config.js","testingType":"e2e","projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/reports/html"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","projectRoot":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation","projectName":"bootcampshub-portal-api-automation","repoRoot":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation","rawJson":{"projectId":"8axud3","reporter":"cypress-mochawesome-reporter","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"e2e":{"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]"},"baseUrl":"https://staging-api.bootcampshub.ai/api","setupNodeEvents":"[Function setupNodeEvents]","envFile":{},"projectRoot":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation","projectName":"bootcampshub-portal-api-automation","repoRoot":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation"},"morgan":false,"isTextTerminal":true,"socketId":"8lk2pcro5o","report":true,"animationDistanceThreshold":5,"arch":"x64","blockHosts":null,"chromeWebSecurity":true,"clientCertificates":[],"defaultCommandTimeout":4000,"downloadsFolder":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/downloads","env":{},"execTimeout":60000,"experimentalCspAllowList":false,"experimentalFetchPolyfill":false,"experimentalInteractiveRunEvents":false,"experimentalRunAllSpecs":false,"experimentalMemoryManagement":false,"experimentalModifyObstructiveThirdPartyCode":false,"experimentalSkipDomainInjection":null,"experimentalJustInTimeCompile":false,"experimentalOriginDependencies":false,"experimentalSourceRewriting":false,"experimentalSingleTabRunMode":false,"experimentalStudio":false,"experimentalWebKitSupport":false,"fileServerFolder":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation","fixturesFolder":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/fixtures","excludeSpecPattern":"*.hot-update.js","includeShadowDom":false,"keystrokeDelay":0,"modifyObstructiveCode":true,"numTestsKeptInMemory":0,"platform":"darwin","pageLoadTimeout":60000,"port":62055,"redirectionLimit":20,"requestTimeout":5000,"resolvedNodePath":"/usr/local/bin/node","resolvedNodeVersion":"20.18.0","responseTimeout":30000,"retries":{"runMode":0,"openMode":0},"screenshotOnRunFailure":true,"screenshotsFolder":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/screenshots","slowTestThreshold":10000,"scrollBehavior":"top","supportFile":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/support/e2e.js","supportFolder":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/support","taskTimeout":60000,"testIsolation":true,"trashAssetsBeforeRuns":true,"userAgent":null,"video":false,"videoCompression":false,"videosFolder":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/videos","viewportHeight":660,"viewportWidth":1000,"waitForAnimations":true,"watchForFileChanges":false,"specPattern":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","additionalIgnorePattern":[],"autoOpen":false,"browsers":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.205","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118}],"clientRoute":"/__/","cypressBinaryRoot":"/Users/anonno/Library/Caches/Cypress/13.15.2/Cypress.app/Contents/Resources/app","devServerPublicPathRoute":"/__cypress/src","hosts":null,"isInteractive":true,"namespace":"__cypress","reporterRoute":"/__cypress/reporter","socketIoCookie":"__socket","socketIoRoute":"/__socket","version":"13.15.2","protocolEnabled":false,"hideCommandLog":false,"hideRunnerUi":false,"cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"arch":{"value":"x64","from":"default"},"baseUrl":{"value":"https://staging-api.bootcampshub.ai/api","from":"config"},"blockHosts":{"value":null,"from":"default"},"chromeWebSecurity":{"value":true,"from":"default"},"clientCertificates":{"value":[],"from":"default"},"defaultCommandTimeout":{"value":4000,"from":"default"},"downloadsFolder":{"value":"cypress/downloads","from":"default"},"env":{},"execTimeout":{"value":60000,"from":"default"},"experimentalCspAllowList":{"value":false,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalInteractiveRunEvents":{"value":false,"from":"default"},"experimentalRunAllSpecs":{"value":false,"from":"default"},"experimentalMemoryManagement":{"value":false,"from":"default"},"experimentalModifyObstructiveThirdPartyCode":{"value":false,"from":"default"},"experimentalSkipDomainInjection":{"value":null,"from":"default"},"experimentalJustInTimeCompile":{"value":false,"from":"default"},"experimentalOriginDependencies":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"experimentalSingleTabRunMode":{"value":false,"from":"default"},"experimentalStudio":{"value":false,"from":"default"},"experimentalWebKitSupport":{"value":false,"from":"default"},"fileServerFolder":{"value":"","from":"default"},"fixturesFolder":{"value":"cypress/fixtures","from":"default"},"excludeSpecPattern":{"value":"*.hot-update.js","from":"default"},"includeShadowDom":{"value":false,"from":"default"},"keystrokeDelay":{"value":0,"from":"default"},"modifyObstructiveCode":{"value":true,"from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"platform":{"value":"darwin","from":"default"},"pageLoadTimeout":{"value":60000,"from":"default"},"port":{"value":null,"from":"default"},"projectId":{"value":"8axud3","from":"config"},"redirectionLimit":{"value":20,"from":"default"},"reporter":{"value":"cypress-mochawesome-reporter","from":"config"},"reporterOptions":{"value":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"resolvedNodePath":{"value":null,"from":"default"},"resolvedNodeVersion":{"value":null,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":0,"openMode":0},"from":"default"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"cypress/screenshots","from":"default"},"slowTestThreshold":{"value":10000,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"supportFile":{"value":"cypress/support/e2e.{js,jsx,ts,tsx}","from":"default"},"supportFolder":{"value":false,"from":"default"},"taskTimeout":{"value":60000,"from":"default"},"testIsolation":{"value":true,"from":"default"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"default"},"videoCompression":{"value":false,"from":"default"},"videosFolder":{"value":"cypress/videos","from":"default"},"viewportHeight":{"value":660,"from":"default"},"viewportWidth":{"value":1000,"from":"default"},"waitForAnimations":{"value":true,"from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"specPattern":{"value":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","from":"default"},"browsers":{"value":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"131.0.6778.205","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"131"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"118.0.5993.159","path":"","majorVersion":118,"isHeadless":true,"isHeaded":false}],"from":"runtime"},"hosts":{"value":null,"from":"default"},"isInteractive":{"value":true,"from":"default"},"configFile":{"value":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress.config.js","from":"plugin"},"testingType":{"value":"e2e","from":"plugin"}},"remote":{"origin":"https://staging-api.bootcampshub.ai","strategy":"http","fileServer":null,"domainName":"bootcampshub.ai","props":{"port":"443","protocol":"https:","subdomain":"staging-api","domain":"bootcampshub","tld":"ai"}},"browser":null,"specs":[],"proxyUrl":"http://localhost:62055","browserUrl":"https://staging-api.bootcampshub.ai/__/","reporterUrl":"https://staging-api.bootcampshub.ai/__cypress/reporter","proxyServer":"http://localhost:62055","state":{}}
simple config: {"jsonDir":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/reports/html/.jsons","reporterOptions":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"reportDir":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/reports/html"},"screenshotsDir":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/screenshots","videosFolder":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/videos","outputDir":"/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/reports/html","removeJsonsFolderAfterMerge":true}
report before enhance: {"stats":{"suites":145,"tests":145,"passes":140,"pending":5,"failures":0,"testsRegistered":145,"passPercent":96.55172413793103,"pendingPercent":3.4482758620689653,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-12-24T10:41:01.345Z","end":"2024-12-24T10:52:05.955Z","duration":664610},"results":[{"uuid":"612f7453-c462-4f31-9376-9101a0f72e4a","title":"","fullFile":"cypress/e2e/01. User Service/03. Update User/1.03.1 updateUser.cy.js","file":"cypress/e2e/01. User Service/03. Update User/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"de3d7ba5-6376-4abe-a14e-c05378932f2b","title":"Update user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":537,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Md\",\n    lastName: \"Shimul\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Dhaka\",\n        postalCode: \"1216\",\n        state: \"Dhaka\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"648bd45c-6042-4c79-a12a-559f5bf56d90","parentUUID":"de3d7ba5-6376-4abe-a14e-c05378932f2b","isHook":false,"skipped":false}],"suites":[],"passes":["648bd45c-6042-4c79-a12a-559f5bf56d90"],"failures":[],"pending":[],"skipped":[],"duration":537,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6c3a436e-7b64-4c59-b38c-5640f33e9577","title":"","fullFile":"cypress/e2e/01. User Service/05. Remove Push Token/1.05.1 removePushToken.cy.js","file":"cypress/e2e/01. User Service/05. Remove Push Token/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"808a2ed2-fbb5-4f81-b2b2-191fd039ad9c","title":"Remove push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":524,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"69319f9f-19c6-433c-b30a-7b282a2a010c","parentUUID":"808a2ed2-fbb5-4f81-b2b2-191fd039ad9c","isHook":false,"skipped":false}],"suites":[],"passes":["69319f9f-19c6-433c-b30a-7b282a2a010c"],"failures":[],"pending":[],"skipped":[],"duration":524,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e886a205-75d2-452b-8e84-824103bbbef8","title":"","fullFile":"cypress/e2e/01. User Service/04. Sync Push Token/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/01. User Service/04. Sync Push Token/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"26de07ce-c31f-4ed4-a1ae-31572a139891","title":"sync push token successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":478,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7b857840-a1a0-4b37-a9e2-70bd61e22710","parentUUID":"26de07ce-c31f-4ed4-a1ae-31572a139891","isHook":false,"skipped":false}],"suites":[],"passes":["7b857840-a1a0-4b37-a9e2-70bd61e22710"],"failures":[],"pending":[],"skipped":[],"duration":478,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a49637e5-6f5b-44a6-8377-6a0f03eca987","title":"","fullFile":"cypress/e2e/01. User Service/06. Filter User/1.06.1 FilterUser.cy.js","file":"cypress/e2e/01. User Service/06. Filter User/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f4560749-4a82-49c5-8678-a8cb4ad56e65","title":"User filtering successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":493,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c79017c5-b9d4-43a2-9a10-7450963c5fee","parentUUID":"f4560749-4a82-49c5-8678-a8cb4ad56e65","isHook":false,"skipped":false}],"suites":[],"passes":["c79017c5-b9d4-43a2-9a10-7450963c5fee"],"failures":[],"pending":[],"skipped":[],"duration":493,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f3a89c58-e281-419d-89a8-14fa22fe5888","title":"","fullFile":"cypress/e2e/01. User Service/08. Family Invite/01.08.01 familyInvite.cy.js","file":"cypress/e2e/01. User Service/08. Family Invite/01.08.01 familyInvite.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"361d4368-2c24-4c33-a4f5-1b55b78c1070","title":"Send family invite successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to send family invite or not","fullTitle":"Send family invite successfully with status code 200 Checking if should be able to send family invite or not","timedOut":null,"duration":735,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/family/invite\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    relation: \"Brother\",\n    image: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Invite sent successfully\");\n    console.log(\"Invite sent successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Invite sent failed with status code:\", response.status);\n    console.log(`Invite sent failed with status code ${response.status}`);\n    cy.log(`Invite sent failed  ${response.body.error}`);\n    console.log(`Invite sent failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"8f2a9c08-5cb6-4c2b-a6d6-545a76687cce","parentUUID":"361d4368-2c24-4c33-a4f5-1b55b78c1070","isHook":false,"skipped":false}],"suites":[],"passes":["8f2a9c08-5cb6-4c2b-a6d6-545a76687cce"],"failures":[],"pending":[],"skipped":[],"duration":735,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"eb96c60f-441f-404f-a116-e64d662161e4","title":"","fullFile":"cypress/e2e/01. User Service/07. Update User Status/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/01. User Service/07. Update User Status/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d4fc9afa-125c-41e1-866d-627757ba5818","title":"Update User Status successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":584,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"968ad54d-093d-4613-b10d-535f6353d642","parentUUID":"d4fc9afa-125c-41e1-866d-627757ba5818","isHook":false,"skipped":false}],"suites":[],"passes":["968ad54d-093d-4613-b10d-535f6353d642"],"failures":[],"pending":[],"skipped":[],"duration":584,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f40cefca-1bba-4ba0-b1b7-70ba07fd8515","title":"","fullFile":"cypress/e2e/01. User Service/10. My Templates/01.10.01 myTemplates.cy.js","file":"cypress/e2e/01. User Service/10. My Templates/01.10.01 myTemplates.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"204b9c35-ce70-4c51-b2c8-5d838ccde0c9","title":"Get my templates successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get my templates or not","fullTitle":"Get my templates successfully with status code 200 Checking if should be able to Get my templates or not","timedOut":null,"duration":822,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/template/mytemplates\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get my templates successfully\");\n    console.log(\"Get my templates successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get my templates failed with status code:\", response.status);\n    console.log(`Get my templates failed with status code ${response.status}`);\n    cy.log(`Get my templates failed  ${response.body.error}`);\n    console.log(`Get my templates failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"29d24bc1-a589-4fae-b22c-e7a4a39624e4","parentUUID":"204b9c35-ce70-4c51-b2c8-5d838ccde0c9","isHook":false,"skipped":false}],"suites":[],"passes":["29d24bc1-a589-4fae-b22c-e7a4a39624e4"],"failures":[],"pending":[],"skipped":[],"duration":822,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0513ad28-02a0-4576-af86-fc961b942463","title":"","fullFile":"cypress/e2e/01. User Service/09. My Family Invitation/01.08.01 myFamilyInvitation.cy.js","file":"cypress/e2e/01. User Service/09. My Family Invitation/01.08.01 myFamilyInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3f5371c6-28e4-4346-9be8-3d34d603ae8e","title":"Get my family invitations successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to get my family invitations or not","fullTitle":"Get my family invitations successfully with status code 200 Checking if should be able to get my family invitations or not","timedOut":null,"duration":908,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/family/myinvitations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get invitations successfully\");\n    console.log(\"Get invitations successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get invitations failed with status code:\", response.status);\n    console.log(`Get invitations failed with status code ${response.status}`);\n    cy.log(`Get invitations failed  ${response.body.error}`);\n    console.log(`Get invitations failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"cb3797b0-67dc-43f5-9b3b-08a756d2eb25","parentUUID":"3f5371c6-28e4-4346-9be8-3d34d603ae8e","isHook":false,"skipped":false}],"suites":[],"passes":["cb3797b0-67dc-43f5-9b3b-08a756d2eb25"],"failures":[],"pending":[],"skipped":[],"duration":908,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4be86620-7570-46e7-8231-98ac847fb41d","title":"","fullFile":"cypress/e2e/01. User Service/12. Online Users/01.12.01 getOnlineUsers.cy.js","file":"cypress/e2e/01. User Service/12. Online Users/01.12.01 getOnlineUsers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2fc75f60-cf4c-4a8d-8163-4d3ca9d753dd","title":"Get online users successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get online users or not","fullTitle":"Get online users successfully with status code 200 Checking if should be able to Get online users or not","timedOut":null,"duration":536,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/user/online\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get online users successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get online users failed with status code:\", response.status);\n    cy.log(`Get online users failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"7f93f674-6afe-4e59-af79-9d1e797a5970","parentUUID":"2fc75f60-cf4c-4a8d-8163-4d3ca9d753dd","isHook":false,"skipped":false}],"suites":[],"passes":["7f93f674-6afe-4e59-af79-9d1e797a5970"],"failures":[],"pending":[],"skipped":[],"duration":536,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7172c9e5-845b-4c07-8879-436e2e060264","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.1 createComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.1 createComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"05c7d1c9-9322-4cf7-98e2-2094e5bc0dff","title":"Create community post comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create community post comment or not","fullTitle":"Create community post comment successfully with status code 200 Checking if should be able Create community post comment or not","timedOut":null,"duration":806,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/comment/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    comment: \"Nice work bro 3\",\n    contentId: \"673905dc92731d9ad8c78e37\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 201) {\n    const {\n      comment\n    } = response.body;\n    cy.writeFile(\"cypress/fixtures/deleteCommentId.json\", {\n      commentId: comment._id\n    });\n    // Assertions\n    expect(response.status).to.eq(201);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post comment Response:\", response.body);\n    console.log(\"Create community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Create community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a16cba9f-0c43-4f2b-9de1-e88492996d13","parentUUID":"05c7d1c9-9322-4cf7-98e2-2094e5bc0dff","isHook":false,"skipped":false}],"suites":[],"passes":["a16cba9f-0c43-4f2b-9de1-e88492996d13"],"failures":[],"pending":[],"skipped":[],"duration":806,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"42f2eed0-6902-4d4a-afc9-cf50c24ffd5f","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.2 replyComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.2 replyComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0a092b9d-e879-4e7b-9c9b-14eca03fd3fe","title":"Reply community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Reply community post or not","fullTitle":"Reply community post successfully with status code 200 Checking if should be able Reply community post or not","timedOut":null,"duration":930,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/comment/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    contentId: \"673905dc92731d9ad8c78e37\",\n    comment: \"Thank you\",\n    parentId: \"674835d5b419790019bb0f5a\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Reply community post Response:\", response.body);\n    console.log(\"Reply community post Response:\", response.body);\n  } else {\n    cy.log(\"Reply community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"26021645-86dc-45ca-89a5-661728e20952","parentUUID":"0a092b9d-e879-4e7b-9c9b-14eca03fd3fe","isHook":false,"skipped":false}],"suites":[],"passes":["26021645-86dc-45ca-89a5-661728e20952"],"failures":[],"pending":[],"skipped":[],"duration":930,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c117d12f-6394-40c4-96be-336c9521ecb4","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.3 updateComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.3 updateComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bef41bb6-969d-4105-8931-b89b416115ec","title":"Update community post comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update community post comment or not","fullTitle":"Update community post comment successfully with status code 200 Checking if should be able Update community post comment or not","timedOut":null,"duration":1029,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/content/comment/update/674835d5b419790019bb0f5a`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    comment: \"Updated comment again\",\n    contentId: \"673905dc92731d9ad8c78e37\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update community post comment Response:\", response.body);\n    console.log(\"Update community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Update community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"413a0ce8-3202-437b-b685-17ac298bb0c8","parentUUID":"bef41bb6-969d-4105-8931-b89b416115ec","isHook":false,"skipped":false}],"suites":[],"passes":["413a0ce8-3202-437b-b685-17ac298bb0c8"],"failures":[],"pending":[],"skipped":[],"duration":1029,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0bf0eab8-e219-4bb3-bc91-27cd5e1e64eb","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.4 getComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.4 getComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bd1e249e-ad09-412e-b84b-dd0dbd2016d7","title":"Get community comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get community comment or not","fullTitle":"Get community comment successfully with status code 200 Checking if should be able Get community comment or not","timedOut":null,"duration":743,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/comment/get/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get community comment Response:\", response.body);\n    console.log(\"Get community comment Response:\", response.body);\n  } else {\n    cy.log(\"Get community comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"57c26d16-1e51-4e08-ace3-bce6df1f04d3","parentUUID":"bd1e249e-ad09-412e-b84b-dd0dbd2016d7","isHook":false,"skipped":false}],"suites":[],"passes":["57c26d16-1e51-4e08-ace3-bce6df1f04d3"],"failures":[],"pending":[],"skipped":[],"duration":743,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ee9eaba7-c225-4ab8-be31-f6039c0c5903","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.5 getReplies.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.5 getReplies.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"81a15a29-eaf9-4513-ae98-795feb5387d1","title":"Get community comment reply successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get community comment reply or not","fullTitle":"Get community comment reply successfully with status code 200 Checking if should be able Get community comment reply or not","timedOut":null,"duration":781,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/comment/get/673905dc92731d9ad8c78e37?parentId=674835d5b419790019bb0f5a\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get community comment reply Response:\", response.body);\n    console.log(\"Get community comment reply Response:\", response.body);\n  } else {\n    cy.log(\"Get community comment reply failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fe85f02b-2c60-4469-8617-f098703f808c","parentUUID":"81a15a29-eaf9-4513-ae98-795feb5387d1","isHook":false,"skipped":false}],"suites":[],"passes":["fe85f02b-2c60-4469-8617-f098703f808c"],"failures":[],"pending":[],"skipped":[],"duration":781,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e574babb-fe99-4d3a-af89-ad623094abe4","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.6 deleteComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.6 deleteComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2ec353ab-6bec-45fb-9d56-cf7eb01d8ba7","title":"Delete community post comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete community post comment or not","fullTitle":"Delete community post comment successfully with status code 200 Checking if should be able Delete community post comment or not","timedOut":null,"duration":602,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/content/comment/delete/${delete_commentId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete community post comment Response:\", response.body);\n    console.log(\"Delete community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Delete community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c43428e3-8f67-4491-9e74-38dfb43c1eee","parentUUID":"2ec353ab-6bec-45fb-9d56-cf7eb01d8ba7","isHook":false,"skipped":false}],"suites":[],"passes":["c43428e3-8f67-4491-9e74-38dfb43c1eee"],"failures":[],"pending":[],"skipped":[],"duration":602,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f9ebf5cb-a217-46ad-9c68-3684a745cccd","title":"","fullFile":"cypress/e2e/02. Organization Service/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/02. Organization Service/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5cb92625-8dc1-49ed-a9b0-d1695d04a34e","title":"Get user organization successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get user organization or not","fullTitle":"Get user organization successfully with status code 200 Checking if should be able get user organization or not","timedOut":null,"duration":605,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/organization/user-organizations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get user organization  Response:\", response.body);\n    console.log(\"Get user organization  Response:\", response.body);\n  } else {\n    cy.log(\"Get user organization failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1992bb64-7d78-4571-80e3-e6999ef111e1","parentUUID":"5cb92625-8dc1-49ed-a9b0-d1695d04a34e","isHook":false,"skipped":false}],"suites":[],"passes":["1992bb64-7d78-4571-80e3-e6999ef111e1"],"failures":[],"pending":[],"skipped":[],"duration":605,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7665ee50-dc39-461b-813a-c236be9669a8","title":"","fullFile":"cypress/e2e/02. Organization Service/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/02. Organization Service/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fb440ea6-d7a7-4d2c-a78f-e7462d984c40","title":"Get Company Details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Company Details or not","fullTitle":"Get Company Details successfully with status code 200 Checking if should be able get Company Details or not","timedOut":null,"duration":632,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/organization/details/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Company Details  Response:\", response.body);\n    console.log(\"Get Company Details  Response:\", response.body);\n  } else {\n    cy.log(\"Get Company Details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b9d53bbd-29ac-4a9c-adbf-5ab6af174b33","parentUUID":"fb440ea6-d7a7-4d2c-a78f-e7462d984c40","isHook":false,"skipped":false}],"suites":[],"passes":["b9d53bbd-29ac-4a9c-adbf-5ab6af174b33"],"failures":[],"pending":[],"skipped":[],"duration":632,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c717565a-84c1-495f-8a53-eed66fdda84d","title":"","fullFile":"cypress/e2e/02. Organization Service/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/02. Organization Service/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b5572be4-a9b6-4f13-a648-e315eb257ebd","title":"Generate Text successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able generate text or not","fullTitle":"Generate Text successfully with status code 200 Checking if should be able generate text or not","timedOut":null,"duration":7682,"state":"passed","speed":"medium","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/organization/integration/generate-text\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId,\n    Enrollment: enrollmentId\n  },\n  body: {\n    prompt: \"How to make money?\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    // expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Generate text  Response:\", response.body);\n    console.log(\"Generate text  Response:\", response.body);\n  } else {\n    cy.log(\"Generate text failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1d143329-7c01-4f7b-8f0d-c9d8e64ec1ef","parentUUID":"b5572be4-a9b6-4f13-a648-e315eb257ebd","isHook":false,"skipped":false}],"suites":[],"passes":["1d143329-7c01-4f7b-8f0d-c9d8e64ec1ef"],"failures":[],"pending":[],"skipped":[],"duration":7682,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"effd9f26-44eb-46f6-95e2-b5e43fdf4123","title":"","fullFile":"cypress/e2e/04. Program Service/04. Media/4.04.1 myMedia.cy.js","file":"cypress/e2e/04. Program Service/04. Media/4.04.1 myMedia.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ad220e6a-80db-4c71-ae1d-1e2619cd6b03","title":"Get my media successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my media or not","fullTitle":"Get my media successfully with status code 200 Checking if should be able Get my media or not","timedOut":null,"duration":917,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/media/mymedia\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my media Response:\", response.body);\n    console.log(\"Get my media Response:\", response.body);\n  } else {\n    cy.log(\"Get my media failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4a948432-f2dc-4232-931a-6ec4e3778fce","parentUUID":"ad220e6a-80db-4c71-ae1d-1e2619cd6b03","isHook":false,"skipped":false}],"suites":[],"passes":["4a948432-f2dc-4232-931a-6ec4e3778fce"],"failures":[],"pending":[],"skipped":[],"duration":917,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"829cd3af-9eb9-42c7-9881-a46fc6f78a9b","title":"","fullFile":"cypress/e2e/04. Program Service/07. Upload Audio And Video/4.07.1 uploadAudioAndVideo.cy.js","file":"cypress/e2e/04. Program Service/07. Upload Audio And Video/4.07.1 uploadAudioAndVideo.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"00326564-7de0-4b3c-8df6-3d6fb38ff873","title":"Upload video and audio with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the audio and video","fullTitle":"Upload video and audio with status code 200 Should successfully update the audio and video","timedOut":null,"duration":853,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const filePath = \"/example-people.csv\";\ncy.fixture(filePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"file\", blob, \"example-people.csv\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"POST\",\n    url: \"/settings/video-audio-upload\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Upload audio and video file successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Upload video and audio file failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"441b1b74-b4ba-4ac0-9d95-d4d10450558a","parentUUID":"00326564-7de0-4b3c-8df6-3d6fb38ff873","isHook":false,"skipped":false}],"suites":[],"passes":["441b1b74-b4ba-4ac0-9d95-d4d10450558a"],"failures":[],"pending":[],"skipped":[],"duration":853,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"dfb80ef9-096c-4504-ad39-ddaf7db87f87","title":"","fullFile":"cypress/e2e/05. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/05. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"56cf38f1-5727-4698-b3a4-74089a2f02df","title":"Get my navigation successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my navigation or not","fullTitle":"Get my navigation successfully with status code 200 Checking if should be able get my navigation or not","timedOut":null,"duration":494,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/navigation/mynavigations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my navigation Response:\", response.body);\n    console.log(\"get may navigation post Response:\", response.body);\n  } else {\n    cy.log(\"Get my navigation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"6ebd20cf-c63d-49fa-8499-44bc0798a3f6","parentUUID":"56cf38f1-5727-4698-b3a4-74089a2f02df","isHook":false,"skipped":false}],"suites":[],"passes":["6ebd20cf-c63d-49fa-8499-44bc0798a3f6"],"failures":[],"pending":[],"skipped":[],"duration":494,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c95b7210-7b13-4c6f-84fb-80113433b22a","title":"","fullFile":"cypress/e2e/05. CommonService/02. Upload User Document/5.02.1 uploadUserDocument.cy.js","file":"cypress/e2e/05. CommonService/02. Upload User Document/5.02.1 uploadUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"dd6a8c8d-59aa-43fe-b3f2-d4a800e108e3","title":"Upload user document file with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully upload user document file","fullTitle":"Upload user document file with status code 200 Should successfully upload user document file","timedOut":null,"duration":831,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const filePath = \"/image1.png\";\ncy.fixture(filePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"file\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"POST\",\n    url: \"/document/userdocumentfile\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Upload user document file successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Upload user document file file failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"5ba8ceb4-61d2-4c4d-b1e0-2d70a24ed725","parentUUID":"dd6a8c8d-59aa-43fe-b3f2-d4a800e108e3","isHook":false,"skipped":false}],"suites":[],"passes":["5ba8ceb4-61d2-4c4d-b1e0-2d70a24ed725"],"failures":[],"pending":[],"skipped":[],"duration":831,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b0904811-fedf-4020-9f10-c6c49459cff8","title":"","fullFile":"cypress/e2e/05. CommonService/03. User Documents/05.03.01 getUserDocuments.cy.js","file":"cypress/e2e/05. CommonService/03. User Documents/05.03.01 getUserDocuments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9d278e44-1d79-495e-aa32-f37cb31d41c5","title":"Get user documents successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get user documents or not","fullTitle":"Get user documents successfully with status code 200 Checking if should be able to Get user documents or not","timedOut":null,"duration":820,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/document/userdocument/get\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get user documents successfully\");\n    console.log(\"Get user documents successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get user documents failed with status code:\", response.status);\n    console.log(`Get user documents failed with status code ${response.status}`);\n    cy.log(`Get user documents failed  ${response.body.error}`);\n    console.log(`Get user documents failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"a15dfe0b-1894-4a9d-98b4-8db89ed6d923","parentUUID":"9d278e44-1d79-495e-aa32-f37cb31d41c5","isHook":false,"skipped":false}],"suites":[],"passes":["a15dfe0b-1894-4a9d-98b4-8db89ed6d923"],"failures":[],"pending":[],"skipped":[],"duration":820,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e346ed6d-daab-4b95-903d-582a147aa07a","title":"","fullFile":"cypress/e2e/05. CommonService/04. Add User Document/05.04.01 addUserDocument.cy.js","file":"cypress/e2e/05. CommonService/04. Add User Document/05.04.01 addUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"515f259b-715d-4399-9446-11cd271d4ad9","title":"Add user document successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Add user document or not","fullTitle":"Add user document successfully with status code 200 Checking if should be able to Add user document or not","timedOut":null,"duration":753,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/document/userdocument/add\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    name: faker.person.fullName(),\n    description: \"Random description text\",\n    attachment: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/documentId.json\", {\n      documentId: response.body.document._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Add user document successfully\");\n    console.log(\"Add user document successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Add user document failed with status code:\", response.status);\n    console.log(`Add user document failed with status code ${response.status}`);\n    cy.log(`Add user document failed  ${response.body.error}`);\n    console.log(`Add user document failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"38dba7a3-9db9-4609-a73a-c2e724ffbf1f","parentUUID":"515f259b-715d-4399-9446-11cd271d4ad9","isHook":false,"skipped":false}],"suites":[],"passes":["38dba7a3-9db9-4609-a73a-c2e724ffbf1f"],"failures":[],"pending":[],"skipped":[],"duration":753,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b20abe98-1ef4-455a-9487-8db0bd1b405f","title":"","fullFile":"cypress/e2e/05. CommonService/05. Update User Document/05.05.01 updateUserDocument.cy.js","file":"cypress/e2e/05. CommonService/05. Update User Document/05.05.01 updateUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ee719e6f-bd54-4077-8f89-938da4b00caf","title":"Update user document successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Update user document or not","fullTitle":"Update user document successfully with status code 200 Checking if should be able to Update user document or not","timedOut":null,"duration":693,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/document/userdocument/update/${documentId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    name: faker.person.fullName(),\n    description: \"Random description text\",\n    attachment: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Update user document successfully\");\n    console.log(\"Update user document successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Update user document failed with status code:\", response.status);\n    console.log(`Update user document failed with status code ${response.status}`);\n    cy.log(`Update user document failed  ${response.body.error}`);\n    console.log(`Update user document failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"35f95046-53a8-4f60-83b7-143c1b64685a","parentUUID":"ee719e6f-bd54-4077-8f89-938da4b00caf","isHook":false,"skipped":false}],"suites":[],"passes":["35f95046-53a8-4f60-83b7-143c1b64685a"],"failures":[],"pending":[],"skipped":[],"duration":693,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1475ec5f-b495-40ed-8c0a-321ff185aace","title":"","fullFile":"cypress/e2e/05. CommonService/06. My Diagrams/05.06.01 getMyDiagrams.cy.js","file":"cypress/e2e/05. CommonService/06. My Diagrams/05.06.01 getMyDiagrams.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"60a7ab49-1657-42a8-93ea-6ffa3830f5cb","title":"Get my diagrams successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get my diagrams or not","fullTitle":"Get my diagrams successfully with status code 200 Checking if should be able to Get my diagrams or not","timedOut":null,"duration":819,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/diagram/mydiagrams?page=${page}&limit=${limit}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get my diagrams successfully\");\n    console.log(\"Get my diagrams successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get my diagrams failed with status code:\", response.status);\n    console.log(`Get my diagrams failed with status code ${response.status}`);\n    cy.log(`Get my diagrams failed  ${response.body.error}`);\n    console.log(`Get my diagrams failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"6cebb6f1-53f2-40a6-a4a5-014e41726372","parentUUID":"60a7ab49-1657-42a8-93ea-6ffa3830f5cb","isHook":false,"skipped":false}],"suites":[],"passes":["6cebb6f1-53f2-40a6-a4a5-014e41726372"],"failures":[],"pending":[],"skipped":[],"duration":819,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6fb714a7-80dd-4afb-abc6-d2ec29be8cf1","title":"","fullFile":"cypress/e2e/05. CommonService/07. Portal Documents/05.07.01 getPortalDocuments.cy.js","file":"cypress/e2e/05. CommonService/07. Portal Documents/05.07.01 getPortalDocuments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8ee7865c-1eb5-42e3-9f98-d434e7d23a98","title":"Get portal documents successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get portal documents or not","fullTitle":"Get portal documents successfully with status code 200 Checking if should be able to Get portal documents or not","timedOut":null,"duration":894,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/docs/portal\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get portal documents successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get portal documents failed with status code:\", response.status);\n    cy.log(`Get portal documents failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"ca671bf6-7dfa-462c-862f-863942c6e59f","parentUUID":"8ee7865c-1eb5-42e3-9f98-d434e7d23a98","isHook":false,"skipped":false}],"suites":[],"passes":["ca671bf6-7dfa-462c-862f-863942c6e59f"],"failures":[],"pending":[],"skipped":[],"duration":894,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4458b367-0a36-41bb-b30b-b5c1bc504f5e","title":"","fullFile":"cypress/e2e/05. CommonService/08. Terms and Conditions/05.08.01 termsAndCondition.cy.js","file":"cypress/e2e/05. CommonService/08. Terms and Conditions/05.08.01 termsAndCondition.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"de130443-db36-4bac-ab4f-44324e058355","title":"Terms and Conditions successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Terms and Conditions or not","fullTitle":"Terms and Conditions successfully with status code 200 Checking if should be able to Terms and Conditions or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/terms-conditions/myterm\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    branch: {\n      data: {\n        address: {\n          street: \"Street\",\n          city: \"City\",\n          zip: \"8700\",\n          country: \"Bangladesh\",\n          state: \"State\"\n        },\n        firstContact: {\n          email: \"first@gmail.com\",\n          name: \"First name\",\n          phone: \"11728068200\"\n        },\n        secondContact: {\n          email: \"second@gmail.com\",\n          name: \"First name\",\n          phone: \"8801647760872\"\n        },\n        socialLinks: {\n          facebook: \"facebook\",\n          github: \"github\",\n          instagram: \"instagram\"\n        },\n        branchUrl: \"http://localhost:3003/newUI/branch-setting\",\n        faxNumber: \"1245758454\",\n        taxNumber: \"25458758454\",\n        branchLogo: \"https://ts4uportal-all-files-upload.nyc3.digitaloceanspaces.com/document-sending/1722570757127-SchoolHubs-logo-final-white.png\",\n        branchDocument: \"\",\n        otherDocument: \"https://ts4uportal-all-files-upload.nyc3.digitaloceanspaces.com/document-sending/1720431819679-dog2.jpeg\",\n        about: \"about\",\n        phone: \"11735590775\"\n      },\n      _id: \"64fcb4e8944cf215d8d32f95\",\n      name: \"first-branch\",\n      slug: \"first-branch-pgbr\"\n    },\n    program: \"64fcb957b0cf6e9ae43d126d\",\n    session: \"66491689e44f020019e08e4f\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Terms and Conditions successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Terms and Conditions failed with status code:\", response.status);\n    cy.log(`Terms and Conditions failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"7a3263ee-03d9-4aa3-85f4-f0e3f40589ae","parentUUID":"de130443-db36-4bac-ab4f-44324e058355","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["7a3263ee-03d9-4aa3-85f4-f0e3f40589ae"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"573eea28-f59e-4f40-af30-526451b9e088","title":"","fullFile":"cypress/e2e/06. Chat Service/01. My Chats/6.01.1 myChats.cy.js","file":"cypress/e2e/06. Chat Service/01. My Chats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"890758a5-b881-4a3a-9fe4-1d5b1f8b921a","title":"My all chats with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my all chats or not","fullTitle":"My all chats with status code 200 Checking if should be able get my all chats or not","timedOut":null,"duration":2078,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/chat/mychats\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"get my chats Response:\", response.body);\n  } else {\n    cy.log(\"Get my chats failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9ebe2591-9b1b-4f7e-bd1a-942c4698638b","parentUUID":"890758a5-b881-4a3a-9fe4-1d5b1f8b921a","isHook":false,"skipped":false}],"suites":[],"passes":["9ebe2591-9b1b-4f7e-bd1a-942c4698638b"],"failures":[],"pending":[],"skipped":[],"duration":2078,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"906fd12e-b0a0-4f6e-9535-9afb9805f326","title":"","fullFile":"cypress/e2e/06. Chat Service/02. Find Or Create Chats By User/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/06. Chat Service/02. Find Or Create Chats By User/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"741e8406-6291-4afd-a986-568c93a51ac5","title":"Find or Create chats by user with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Find or Create chats by user or not","fullTitle":"Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not","timedOut":null,"duration":627,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/findorcreate/${userId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Find or Create chats by user Response:\", response.body);\n  } else {\n    cy.log(\"Find or Create chats by user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ba520496-fc19-4499-81a2-da4561a02579","parentUUID":"741e8406-6291-4afd-a986-568c93a51ac5","isHook":false,"skipped":false}],"suites":[],"passes":["ba520496-fc19-4499-81a2-da4561a02579"],"failures":[],"pending":[],"skipped":[],"duration":627,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d70818a5-d738-45a9-aff4-5f70374b1ca3","title":"","fullFile":"cypress/e2e/06. Chat Service/04. Search Users/6.04.1 searchUsers.cy.js","file":"cypress/e2e/06. Chat Service/04. Search Users/6.04.1 searchUsers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5b22ddee-e54c-4f50-ac8e-2d561c4c6230","title":"Search Users successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search Users or not","fullTitle":"Search Users successfully with status code 200 Checking if should be able Search Users or not","timedOut":null,"duration":443,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/chat/searchuser?query=${query}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Search Users Response:\", response.body);\n    console.log(\"Search Users Response:\", response.body);\n  } else {\n    cy.log(\"Search Users failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e2f02580-6736-490f-a368-c87e4dac7513","parentUUID":"5b22ddee-e54c-4f50-ac8e-2d561c4c6230","isHook":false,"skipped":false}],"suites":[],"passes":["e2f02580-6736-490f-a368-c87e4dac7513"],"failures":[],"pending":[],"skipped":[],"duration":443,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"afe7a902-b274-4185-ab76-3022618f8ad5","title":"","fullFile":"cypress/e2e/06. Chat Service/05. Thread Message/6.05.1 threadMessage.cy.js","file":"cypress/e2e/06. Chat Service/05. Thread Message/6.05.1 threadMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"97c2725f-825c-40fb-abac-40ad1f09172e","title":"Get thread messages successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get thread messages or not","fullTitle":"Get thread messages successfully with status code 200 Checking if should be able Get thread messages or not","timedOut":null,"duration":670,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/messages\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    parentMessage: parentMessageId,\n    chat: chatId,\n    page: 1\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get thread messages Response:\", response.body);\n    console.log(\"Get thread messages Response:\", response.body);\n  } else {\n    cy.log(\"Get thread messages failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fe2142d1-0bf1-4ccb-af61-50979888ae19","parentUUID":"97c2725f-825c-40fb-abac-40ad1f09172e","isHook":false,"skipped":false}],"suites":[],"passes":["fe2142d1-0bf1-4ccb-af61-50979888ae19"],"failures":[],"pending":[],"skipped":[],"duration":670,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"38dd5a99-d8ae-4bab-a329-1f5621c49c23","title":"","fullFile":"cypress/e2e/06. Chat Service/06 Upload File/6.06.1 uploadFile.cy.js","file":"cypress/e2e/06. Chat Service/06 Upload File/6.06.1 uploadFile.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"62da98aa-c364-4503-a2d1-3e28910effa0","title":"Upload chat file with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the audio and video","fullTitle":"Upload chat file with status code 200 Should successfully update the audio and video","timedOut":null,"duration":521,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const filePath = \"/example-people.csv\";\ncy.fixture(filePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"file\", blob, \"example-people.csv\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"POST\",\n    url: \"/chat/file\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Upload file successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Upload chat file failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"30094fdc-d18e-4da5-9396-4738b2d1fcd7","parentUUID":"62da98aa-c364-4503-a2d1-3e28910effa0","isHook":false,"skipped":false}],"suites":[],"passes":["30094fdc-d18e-4da5-9396-4738b2d1fcd7"],"failures":[],"pending":[],"skipped":[],"duration":521,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d57b719b-ea26-4d17-87a3-d182366b428a","title":"","fullFile":"cypress/e2e/07. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","file":"cypress/e2e/07. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6bc9902e-900f-448a-8a86-1459c7a2fae2","title":"Get all notification successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all notification or not","fullTitle":"Get all notification successfully with status code 200 Checking if should be able Get all notification or not","timedOut":null,"duration":751,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/notification/mynotifications\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all notification Response:\", response.body);\n    console.log(\"Get all notification Response:\", response.body);\n  } else {\n    cy.log(\"Get all notification failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b9283f8e-fc5a-4bfa-bdb0-cc876e8fcd7f","parentUUID":"6bc9902e-900f-448a-8a86-1459c7a2fae2","isHook":false,"skipped":false}],"suites":[],"passes":["b9283f8e-fc5a-4bfa-bdb0-cc876e8fcd7f"],"failures":[],"pending":[],"skipped":[],"duration":751,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1b9e8421-a314-4173-91fb-4600f83d6b37","title":"","fullFile":"cypress/e2e/07. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","file":"cypress/e2e/07. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"156af1e6-9c1e-4a38-a01b-b972e3124767","title":"Mark notification as Read successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mark notification as Read or not","fullTitle":"Mark notification as Read successfully with status code 200 Checking if should be able Mark notification as Read or not","timedOut":null,"duration":538,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/notification/markread/${notificationId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Mark notification as Read Response:\", response.body);\n    console.log(\"Mark notification as Read Response:\", response.body);\n  } else {\n    cy.log(\"Mark notification as Read failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"de75a11a-4320-4f32-b0d6-6cc96ba0ba10","parentUUID":"156af1e6-9c1e-4a38-a01b-b972e3124767","isHook":false,"skipped":false}],"suites":[],"passes":["de75a11a-4320-4f32-b0d6-6cc96ba0ba10"],"failures":[],"pending":[],"skipped":[],"duration":538,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9e6132cc-6294-4542-a97e-cfaa8c6e4481","title":"","fullFile":"cypress/e2e/07. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","file":"cypress/e2e/07. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8a3a603f-cb75-4bfe-b622-57b43716cb45","title":"Mark all notification as read successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mark all notification as read or not","fullTitle":"Mark all notification as read successfully with status code 200 Checking if should be able Mark all notification as read or not","timedOut":null,"duration":532,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/notification/markreadall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Mark all notification as read Response:\", response.body);\n    console.log(\"Mark all notification as read Response:\", response.body);\n  } else {\n    cy.log(\"Mark all notification as read failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9cb8eb0c-9777-45b9-8aad-bda3fd98a683","parentUUID":"8a3a603f-cb75-4bfe-b622-57b43716cb45","isHook":false,"skipped":false}],"suites":[],"passes":["9cb8eb0c-9777-45b9-8aad-bda3fd98a683"],"failures":[],"pending":[],"skipped":[],"duration":532,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"45dbd8f1-c877-46a3-a05b-a157df957f10","title":"","fullFile":"cypress/e2e/07. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","file":"cypress/e2e/07. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"032464a0-fcf7-44e4-b463-20780d8b58c5","title":"Get active notification successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get active notification or not","fullTitle":"Get active notification successfully with status code 200 Checking if should be able Get active notification or not","timedOut":null,"duration":491,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/notification/job/getactive/${id}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get active notification Response:\", response.body);\n    console.log(\"Get active notification Response:\", response.body);\n  } else {\n    cy.log(\"Get active notification failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"81274e10-d4aa-4c3c-bd4b-1490fd6514c7","parentUUID":"032464a0-fcf7-44e4-b463-20780d8b58c5","isHook":false,"skipped":false}],"suites":[],"passes":["81274e10-d4aa-4c3c-bd4b-1490fd6514c7"],"failures":[],"pending":[],"skipped":[],"duration":491,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"252b4a3f-c10f-4c1a-8eb1-1b9e0d2b5f12","title":"","fullFile":"cypress/e2e/07. Notification Service/05. Notification Preference/07.05.01 getNotificationPreference.cy.js","file":"cypress/e2e/07. Notification Service/05. Notification Preference/07.05.01 getNotificationPreference.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"68d3b646-08e1-4a7d-a316-09b91ff248cc","title":"Get notification preference successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get notification preference or not","fullTitle":"Get notification preference successfully with status code 200 Checking if should be able to Get notification preference or not","timedOut":null,"duration":587,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/notification/preference/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get notification preference successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get notification preference failed with status code:\", response.status);\n    cy.log(`Get notification preference failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"2bb2a572-661f-45c2-a940-11be96704637","parentUUID":"68d3b646-08e1-4a7d-a316-09b91ff248cc","isHook":false,"skipped":false}],"suites":[],"passes":["2bb2a572-661f-45c2-a940-11be96704637"],"failures":[],"pending":[],"skipped":[],"duration":587,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"086750bf-0253-400c-8037-13a2a8fafd01","title":"","fullFile":"cypress/e2e/07. Notification Service/06. Update Notification Preference/07.06.01 updateNotificationPreference.cy.js","file":"cypress/e2e/07. Notification Service/06. Update Notification Preference/07.06.01 updateNotificationPreference.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"92a50a72-3a35-449d-8503-a85d3b073a30","title":"Update notification preference successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get notification preference or not","fullTitle":"Update notification preference successfully with status code 200 Checking if should be able to Get notification preference or not","timedOut":null,"duration":456,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/notification/preference/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    preferences: [{\n      id: \"changePassword\",\n      channels: [\"push\", \"web\", \"chat\", \"email\", \"sms\"],\n      _id: \"66cb3bc324e209cf61f1a4bd\"\n    }, {\n      id: \"updateProfile\",\n      channels: [\"push\", \"web\", \"chat\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4be\"\n    }, {\n      id: \"changeStatusShowAndTell\",\n      channels: [\"web\", \"chat\", \"push\"],\n      _id: \"66cb3bc324e209cf61f1a4bf\"\n    }, {\n      id: \"createMyDocument\",\n      channels: [\"web\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c0\"\n    }, {\n      id: \"mediaSendingToUser\",\n      channels: [\"web\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c1\"\n    }, {\n      id: \"createSlide\",\n      channels: [\"web\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c2\"\n    }, {\n      id: \"createCalendarEvent\",\n      channels: [\"web\", \"chat\", \"push\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4c3\"\n    }, {\n      id: \"rescheduleCalendarEvent\",\n      channels: [\"web\", \"chat\", \"push\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4c4\"\n    }, {\n      id: \"invitationCalendarEvent\",\n      channels: [\"web\", \"chat\", \"push\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4c5\"\n    }, {\n      id: \"createImportantLink\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c6\"\n    }, {\n      id: \"createContent\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c7\"\n    }, {\n      id: \"createTemplate\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c8\"\n    }, {\n      id: \"createDiagram\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c9\"\n    }, {\n      id: \"createMockInterview\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4ca\"\n    }, {\n      id: \"updateTransactionStatus\",\n      channels: [\"web\", \"push\", \"chat\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4cb\"\n    }, {\n      id: \"organizationStatusChange\",\n      channels: [\"web\", \"push\", \"chat\", \"email\", \"sms\"],\n      _id: \"66cb3bc324e209cf61f1a4cc\"\n    }, {\n      id: \"enrollmentStatusChange\",\n      channels: [\"web\", \"push\", \"chat\", \"email\", \"sms\"],\n      _id: \"66cb3bc324e209cf61f1a4cd\"\n    }, {\n      id: \"orderStatusChange\",\n      channels: [\"web\", \"push\", \"chat\", \"email\", \"sms\"],\n      _id: \"66cb3bc324e209cf61f1a4ce\"\n    }, {\n      id: \"orderTransactionStatusChange\",\n      channels: [\"web\", \"push\", \"chat\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4cf\"\n    }, {\n      id: \"newLessonAdd\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4d0\"\n    }, {\n      id: \"sendInvoice\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4d1\"\n    }, {\n      id: \"certificateGenerate\",\n      channels: [\"web\", \"push\", \"chat\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4d2\"\n    }, {\n      id: \"calendarReminder\",\n      channels: [\"sms\", \"email\", \"web\", \"push\", \"groups\", \"chat\"]\n    }]\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get notification preference successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get notification preference failed with status code:\", response.status);\n    cy.log(`Get notification preference failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"86f6dd3c-5301-4285-8513-ad2de446924a","parentUUID":"92a50a72-3a35-449d-8503-a85d3b073a30","isHook":false,"skipped":false}],"suites":[],"passes":["86f6dd3c-5301-4285-8513-ad2de446924a"],"failures":[],"pending":[],"skipped":[],"duration":456,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7f956aeb-b837-4f1b-a741-c0911e9158fb","title":"","fullFile":"cypress/e2e/09. Account Service/01. My Transaction/9.01.1 myTransaction.cy.js","file":"cypress/e2e/09. Account Service/01. My Transaction/9.01.1 myTransaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5f1bb5f5-7d61-40d3-ba3a-dffc3cff09f4","title":"Get my transaction successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my transaction or not","fullTitle":"Get my transaction successfully with status code 200 Checking if should be able Get my transaction or not","timedOut":null,"duration":668,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/transaction/myTransaction\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my transaction Response:\", response.body);\n    console.log(\"Get my transaction Response:\", response.body);\n  } else {\n    cy.log(\"Get my transaction failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"208f9003-241a-47dd-9ab9-fc1fe14c72c1","parentUUID":"5f1bb5f5-7d61-40d3-ba3a-dffc3cff09f4","isHook":false,"skipped":false}],"suites":[],"passes":["208f9003-241a-47dd-9ab9-fc1fe14c72c1"],"failures":[],"pending":[],"skipped":[],"duration":668,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6a676e0b-583a-43e5-b0f6-a885a03ff05f","title":"","fullFile":"cypress/e2e/09. Account Service/02. Add User Transaction/9.02.1 addUserTransaction.cy.js","file":"cypress/e2e/09. Account Service/02. Add User Transaction/9.02.1 addUserTransaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bdb13ff3-2404-43b1-9302-3809df98c568","title":"Add user transaction successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add user transaction or not","fullTitle":"Add user transaction successfully with status code 200 Checking if should be able Add user transaction or not","timedOut":null,"duration":632,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/transaction/addbyuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    method: \"Bank Transfer\",\n    amount: 100,\n    date: \"2024-11-20\",\n    note: \"Payment note\",\n    attachment: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Add user transaction Response:\", response.body);\n    console.log(\"Add user transaction Response:\", response.body);\n  } else {\n    cy.log(\"Add user transaction failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c8e9288a-7346-430b-bfbe-d9f0fd980bfb","parentUUID":"bdb13ff3-2404-43b1-9302-3809df98c568","isHook":false,"skipped":false}],"suites":[],"passes":["c8e9288a-7346-430b-bfbe-d9f0fd980bfb"],"failures":[],"pending":[],"skipped":[],"duration":632,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4a26adf1-ec51-491b-b05d-f7cc8349e9fb","title":"","fullFile":"cypress/e2e/09. Account Service/03. Add Payment To Order/9.03.1 addPaymentToOrder.cy.js","file":"cypress/e2e/09. Account Service/03. Add Payment To Order/9.03.1 addPaymentToOrder.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8a3868a2-3b12-4d71-a048-4890ea8bcffc","title":"Add payment to order successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add payment to order or not","fullTitle":"Add payment to order successfully with status code 200 Checking if should be able Add payment to order or not","timedOut":null,"duration":615,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/order/addpayment/${orderId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    method: \"Card\",\n    amount: 50,\n    date: \"2024-11-20\",\n    note: \"Payment for course\",\n    attachment: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Add payment to order Response:\", response.body);\n    console.log(\"Add payment to order Response:\", response.body);\n  } else {\n    cy.log(\"Add payment to order failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"81aa5c13-3b71-4da3-a470-4275714becad","parentUUID":"8a3868a2-3b12-4d71-a048-4890ea8bcffc","isHook":false,"skipped":false}],"suites":[],"passes":["81aa5c13-3b71-4da3-a470-4275714becad"],"failures":[],"pending":[],"skipped":[],"duration":615,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"55134b05-c1ab-4da1-ac0b-59e1352ed24d","title":"","fullFile":"cypress/e2e/09. Account Service/04. Get Order Details/9.04.1 getOrderDetails.cy.js","file":"cypress/e2e/09. Account Service/04. Get Order Details/9.04.1 getOrderDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bacf8d46-8399-410a-b403-b62a681179a6","title":"Get order details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get order details or not","fullTitle":"Get order details successfully with status code 200 Checking if should be able Get order details or not","timedOut":null,"duration":633,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/order/details/${orderId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get order details Response:\", response.body);\n    console.log(\"Get order details Response:\", response.body);\n  } else {\n    cy.log(\"Get order details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"466e466e-9f21-472b-9372-98357ce5a4b3","parentUUID":"bacf8d46-8399-410a-b403-b62a681179a6","isHook":false,"skipped":false}],"suites":[],"passes":["466e466e-9f21-472b-9372-98357ce5a4b3"],"failures":[],"pending":[],"skipped":[],"duration":633,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ee4180f7-1b1f-4acb-a06c-f87c6537c9b6","title":"","fullFile":"cypress/e2e/10. Enrollment Service/01. My Progress/10.01.1 myProgress.cy.js","file":"cypress/e2e/10. Enrollment Service/01. My Progress/10.01.1 myProgress.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a365e2a9-debc-4aec-bb78-657020a23ae5","title":"Get my progress successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my progress or not","fullTitle":"Get my progress successfully with status code 200 Checking if should be able Get my progress or not","timedOut":null,"duration":777,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/progress/myprogress\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my progress Response:\", response.body);\n    console.log(\"Get my progress Response:\", response.body);\n  } else {\n    cy.log(\"Get my progress failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"441ee7a8-84a9-4ad4-b6a1-23b1574cc3d8","parentUUID":"a365e2a9-debc-4aec-bb78-657020a23ae5","isHook":false,"skipped":false}],"suites":[],"passes":["441ee7a8-84a9-4ad4-b6a1-23b1574cc3d8"],"failures":[],"pending":[],"skipped":[],"duration":777,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"25e19204-9d18-4cf4-bb31-ffc6ee295d8b","title":"","fullFile":"cypress/e2e/10. Enrollment Service/02. My Programs/10.2.1 myPrograms.cy.js","file":"cypress/e2e/10. Enrollment Service/02. My Programs/10.2.1 myPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2ff1436c-6dbd-4639-8897-6f0165addc3b","title":"Get my progress successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my progress or not","fullTitle":"Get my progress successfully with status code 200 Checking if should be able Get my progress or not","timedOut":null,"duration":997,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/enrollment/myprogram\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my progress Response:\", response.body);\n    console.log(\"Get my progress Response:\", response.body);\n  } else {\n    cy.log(\"Get my progress failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8bbd4a65-beb7-4d04-b3fd-4cb41151f126","parentUUID":"2ff1436c-6dbd-4639-8897-6f0165addc3b","isHook":false,"skipped":false}],"suites":[],"passes":["8bbd4a65-beb7-4d04-b3fd-4cb41151f126"],"failures":[],"pending":[],"skipped":[],"duration":997,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"087f801a-cfca-48aa-bb77-5f63918a010e","title":"","fullFile":"cypress/e2e/10. Enrollment Service/03. My Assignments/10.03.3 myAssignments.cy.js","file":"cypress/e2e/10. Enrollment Service/03. My Assignments/10.03.3 myAssignments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2510361c-cf75-4692-b91c-26582fde5334","title":"Get my assignments successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my assignments or not","fullTitle":"Get my assignments successfully with status code 200 Checking if should be able Get my assignments or not","timedOut":null,"duration":1099,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/assignment/myassignments\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my assignments Response:\", response.body);\n    console.log(\"Get my assignments Response:\", response.body);\n  } else {\n    cy.log(\"Get my assignments failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"31cb8975-ebdf-42e0-baa9-10b51d73a4ca","parentUUID":"2510361c-cf75-4692-b91c-26582fde5334","isHook":false,"skipped":false}],"suites":[],"passes":["31cb8975-ebdf-42e0-baa9-10b51d73a4ca"],"failures":[],"pending":[],"skipped":[],"duration":1099,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e998ca13-ef9a-42d3-8cd8-c4f785e70bd4","title":"","fullFile":"cypress/e2e/10. Enrollment Service/04. Search My Assignment/10.04.1 searchMyAssignment.cy.js","file":"cypress/e2e/10. Enrollment Service/04. Search My Assignment/10.04.1 searchMyAssignment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a3a621cd-65f3-4ed5-a12d-59f6d11692a2","title":"Search my assignment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search my assignment or not","fullTitle":"Search my assignment successfully with status code 200 Checking if should be able Search my assignment or not","timedOut":null,"duration":1171,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/assignment/myassignments\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    category: \"\",\n    limit: 50,\n    page: 1,\n    query: \"\",\n    status: \"pending\",\n    type: \"\",\n    workshop: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2500);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Search my assignment Response:\", response.body);\n    console.log(\"Search my assignment Response:\", response.body);\n  } else {\n    cy.log(\"Search my assignment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"40ed8623-07bd-47ba-a284-6632f66aadd7","parentUUID":"a3a621cd-65f3-4ed5-a12d-59f6d11692a2","isHook":false,"skipped":false}],"suites":[],"passes":["40ed8623-07bd-47ba-a284-6632f66aadd7"],"failures":[],"pending":[],"skipped":[],"duration":1171,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"06f0d882-4e93-4aee-a50e-3cee80b878c3","title":"","fullFile":"cypress/e2e/10. Enrollment Service/05. My Enrollment Test/10.05.1 myEnrollmentTest.cy.js","file":"cypress/e2e/10. Enrollment Service/05. My Enrollment Test/10.05.1 myEnrollmentTest.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c55fac9e-3cfd-40de-8a2b-c0f2e126025d","title":"Get enrollment test successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get enrollment test or not","fullTitle":"Get enrollment test successfully with status code 200 Checking if should be able Get enrollment test or not","timedOut":null,"duration":630,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/enrollment/enrollment-test/mytests\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get enrollment test Response:\", response.body);\n    console.log(\"Get enrollment test Response:\", response.body);\n  } else {\n    cy.log(\"Get enrollment test failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fdea6535-d8a5-4d9c-950d-d79e85db7022","parentUUID":"c55fac9e-3cfd-40de-8a2b-c0f2e126025d","isHook":false,"skipped":false}],"suites":[],"passes":["fdea6535-d8a5-4d9c-950d-d79e85db7022"],"failures":[],"pending":[],"skipped":[],"duration":630,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"cc3114b8-8006-4fa2-ad5f-8d1292fa22e6","title":"","fullFile":"cypress/e2e/10. Enrollment Service/06. My Order Course/10.06.1 myOrderCourse.cy.js","file":"cypress/e2e/10. Enrollment Service/06. My Order Course/10.06.1 myOrderCourse.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"133639e6-a8b5-4eed-ab49-127283e39014","title":"Get my order course successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my order course or not","fullTitle":"Get my order course successfully with status code 200 Checking if should be able Get my order course or not","timedOut":null,"duration":587,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/order/myorder/course\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my order course Response:\", response.body);\n    console.log(\"Get my order course Response:\", response.body);\n  } else {\n    cy.log(\"Get my order course failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4852b630-1ab1-4721-a042-aaa88f86ddce","parentUUID":"133639e6-a8b5-4eed-ab49-127283e39014","isHook":false,"skipped":false}],"suites":[],"passes":["4852b630-1ab1-4721-a042-aaa88f86ddce"],"failures":[],"pending":[],"skipped":[],"duration":587,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"dd428425-2704-4e1d-8520-5d32e414614d","title":"","fullFile":"cypress/e2e/10. Enrollment Service/07. Dashboard/10.07.1 dashboardPortalData.cy.js","file":"cypress/e2e/10. Enrollment Service/07. Dashboard/10.07.1 dashboardPortalData.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"53ff70f5-dc2a-49a1-a699-653c78849a20","title":"Get dashboard data successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get dashboard data or not","fullTitle":"Get dashboard data successfully with status code 200 Checking if should be able Get dashboard data or not","timedOut":null,"duration":524,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/dashboard/portal\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    familyMember: {},\n    lastPasswordUpdate: {},\n    review: {},\n    bootcamp: {}\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get dashboard data Response:\", response.body);\n    console.log(\"Get dashboard data Response:\", response.body);\n  } else {\n    cy.log(\"Get dashboard data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"6fc17cac-e372-420b-a06b-2f82eabb861b","parentUUID":"53ff70f5-dc2a-49a1-a699-653c78849a20","isHook":false,"skipped":false}],"suites":[],"passes":["6fc17cac-e372-420b-a06b-2f82eabb861b"],"failures":[],"pending":[],"skipped":[],"duration":524,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6a51615f-2518-449c-9365-a8bbb062b95c","title":"","fullFile":"cypress/e2e/10. Enrollment Service/08. Leaderboard/10.08.1 leaderboardData.cy.js","file":"cypress/e2e/10. Enrollment Service/08. Leaderboard/10.08.1 leaderboardData.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"88b19943-2b82-404f-b798-e2d6b32c782c","title":"Get leaderboard data successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get leaderboard data or not","fullTitle":"Get leaderboard data successfully with status code 200 Checking if should be able Get leaderboard data or not","timedOut":null,"duration":682,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/progress/leaderboard\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get leaderboard data Response:\", response.body);\n    console.log(\"Get leaderboard data Response:\", response.body);\n  } else {\n    cy.log(\"Get leaderboard data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c4f59cb9-57cb-459e-9a19-58eda80bde54","parentUUID":"88b19943-2b82-404f-b798-e2d6b32c782c","isHook":false,"skipped":false}],"suites":[],"passes":["c4f59cb9-57cb-459e-9a19-58eda80bde54"],"failures":[],"pending":[],"skipped":[],"duration":682,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"99418acb-bcd8-42c1-a2ca-fdcf9476300d","title":"","fullFile":"cypress/e2e/10. Enrollment Service/09. Test Question/10.09.01 getTestQuestion.cy.js","file":"cypress/e2e/10. Enrollment Service/09. Test Question/10.09.01 getTestQuestion.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2796b642-782a-4060-8a0b-f40eb87d4b47","title":"Get test question successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get test question or not","fullTitle":"Get test question successfully with status code 200 Checking if should be able to Get test question or not","timedOut":null,"duration":915,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/enrollment/enrollment-test/getquestions/${questionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get test question successfully\");\n    console.log(\"Get test question successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get test question failed with status code:\", response.status);\n    console.log(`Get test question failed with status code ${response.status}`);\n    cy.log(`Get test question failed  ${response.body.error}`);\n    console.log(`Get test question failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"589921a4-ca89-4655-8411-2bfb3376c8c7","parentUUID":"2796b642-782a-4060-8a0b-f40eb87d4b47","isHook":false,"skipped":false}],"suites":[],"passes":["589921a4-ca89-4655-8411-2bfb3376c8c7"],"failures":[],"pending":[],"skipped":[],"duration":915,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5f304697-dcdd-40a7-9aa9-962c9acf033c","title":"","fullFile":"cypress/e2e/10. Enrollment Service/10. Submit Test Answer/10.10.01 submitTestAnswer.cy.js","file":"cypress/e2e/10. Enrollment Service/10. Submit Test Answer/10.10.01 submitTestAnswer.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"315c1fb0-542b-4c10-9199-765b56487745","title":"Submit test answer successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Submit test answer or not","fullTitle":"Submit test answer successfully with status code 200 Checking if should be able to Submit test answer or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/enrollment/enrollment-test/submit-answer/${questionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Submit test answer successfully\");\n    console.log(\"Submit test answer successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Submit test answer failed with status code:\", response.status);\n    console.log(`Submit test answer failed with status code ${response.status}`);\n    cy.log(`Submit test answer failed  ${response.body.error}`);\n    console.log(`Submit test answer failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"92e25f84-f318-45d5-9474-6b3fa3463c06","parentUUID":"315c1fb0-542b-4c10-9199-765b56487745","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["92e25f84-f318-45d5-9474-6b3fa3463c06"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e2abefbc-58fb-4de2-bd79-21d6ab85ac9c","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.1 User Register/1.01.1 userRegistration.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.1 User Register/1.01.1 userRegistration.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6acebaf9-b2a9-46db-838b-aff9caafaa80","title":"Register user to the portal with valid credential and get stats code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to register user or not","fullTitle":"Register user to the portal with valid credential and get stats code 200 Checking if should be able to register user or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/register\",\n  body: {\n    firstName: faker.person.firstName(\"male\"),\n    lastName: faker.person.lastName(\"male\"),\n    phone: faker.phone.number(),\n    email: faker.internet.email(),\n    confirm: \"Ashraful186@\",\n    password: \"Ashraful186@\",\n    referredBy: null\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User register successfully\");\n    console.log(\"User register successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Register failed with status code:\", response.status);\n    console.log(`Register failed with status code ${response.status}`);\n    cy.log(`Register failed  ${response.body.error}`);\n    console.log(`Register failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"cd8700e9-5c52-4f88-9242-224fd9326d0a","parentUUID":"6acebaf9-b2a9-46db-838b-aff9caafaa80","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["cd8700e9-5c52-4f88-9242-224fd9326d0a"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9b8089ff-c4fd-4328-b991-b2d010163d4c","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.2 User Login/1.01.2 userLogin.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.2 User Login/1.01.2 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"979ec2dd-7488-4f94-803b-1173c447c39c","title":"Login to the portal with valid credential and get stats code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to login user","fullTitle":"Login to the portal with valid credential and get stats code 200 Checking if should be able to login user","timedOut":null,"duration":827,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    // cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n    //   userId: studentLoginID,\n    // });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"b29145df-d1f5-4b21-bff7-e992aab14430","parentUUID":"979ec2dd-7488-4f94-803b-1173c447c39c","isHook":false,"skipped":false}],"suites":[],"passes":["b29145df-d1f5-4b21-bff7-e992aab14430"],"failures":[],"pending":[],"skipped":[],"duration":827,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"24c76dca-e394-4311-aec2-a626429834ff","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.3 Verify User/1.01.3 verifyUser.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.3 Verify User/1.01.3 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0e904695-d65a-4645-be9f-1c90ae23a30a","title":"Verify user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to verify user","fullTitle":"Verify user successfully with status code 200 Checking if should be able to verify user","timedOut":null,"duration":1150,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {}\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"User verified successfully\");\n    console.log(\"User verified successfully\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"6357b0f7-50a2-4d6a-b588-272e38fa8398","parentUUID":"0e904695-d65a-4645-be9f-1c90ae23a30a","isHook":false,"skipped":false}],"suites":[],"passes":["6357b0f7-50a2-4d6a-b588-272e38fa8398"],"failures":[],"pending":[],"skipped":[],"duration":1150,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"757f7ed7-1fd8-4903-ab64-4d0b1a308d90","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.4 Send OTP/1.01.4 sendOtp.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.4 Send OTP/1.01.4 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c1eee981-74f5-463b-9fe6-7f55e6a58587","title":"Send OTP to email successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to send OTP to email","fullTitle":"Send OTP to email successfully with status code 200 Checking if should be able to send OTP to email","timedOut":null,"duration":878,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"dcf4b7be-0700-4517-9e55-2b33ddcfb229","parentUUID":"c1eee981-74f5-463b-9fe6-7f55e6a58587","isHook":false,"skipped":false}],"suites":[],"passes":["dcf4b7be-0700-4517-9e55-2b33ddcfb229"],"failures":[],"pending":[],"skipped":[],"duration":878,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ffa6648c-5742-4422-8c09-c53419950dc1","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.5 Verify OTP/1.01.5 verifyOtp.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.5 Verify OTP/1.01.5 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"01ece8e8-cd97-497d-8778-6e617eed9d34","title":"Verify OTP with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"a7333752-75ee-4b85-8078-1b40c7c75e56","parentUUID":"01ece8e8-cd97-497d-8778-6e617eed9d34","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["a7333752-75ee-4b85-8078-1b40c7c75e56"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f1397ff5-b6f0-4551-a7e8-eadfb850f4bb","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.6 Forgot Password/1.01.6 forgotPassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.6 Forgot Password/1.01.6 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3058e63b-73fc-470c-aef7-59115aad3690","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":824,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"6947ed00-d911-4100-9f1a-20885a55bd23","parentUUID":"3058e63b-73fc-470c-aef7-59115aad3690","isHook":false,"skipped":false}],"suites":[],"passes":["6947ed00-d911-4100-9f1a-20885a55bd23"],"failures":[],"pending":[],"skipped":[],"duration":824,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"26f251dd-88e6-4628-8d4d-f6da348a4d3a","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.7 Reset Password/1.01.7 resetPassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.7 Reset Password/1.01.7 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8c37a563-b7e8-4011-92e3-66cb4e3d9357","title":"Reset my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":632,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"59401a35-6672-421c-a193-a207068b5a20","parentUUID":"8c37a563-b7e8-4011-92e3-66cb4e3d9357","isHook":false,"skipped":false}],"suites":[],"passes":["59401a35-6672-421c-a193-a207068b5a20"],"failures":[],"pending":[],"skipped":[],"duration":632,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b313e062-c86c-45fc-847d-d38966f03e96","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.8 Change Password/1.01.8 changePassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.8 Change Password/1.01.8 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"00bbbb50-7757-491a-87f6-d9f259edff13","title":"Change my password successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":802,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Ashraful186@\",\n    newPassword: \"Ashraful186@\",\n    confirmPassword: \"Ashraful186@\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7b41dffd-7d86-4eef-9969-502483352abc","parentUUID":"00bbbb50-7757-491a-87f6-d9f259edff13","isHook":false,"skipped":false}],"suites":[],"passes":["7b41dffd-7d86-4eef-9969-502483352abc"],"failures":[],"pending":[],"skipped":[],"duration":802,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"87f37980-0d24-4000-b3d3-48581903f0ac","title":"","fullFile":"cypress/e2e/01. User Service/11. PresentationSlide/01 My Slides/01.11.01 getMySlides.cy.js","file":"cypress/e2e/01. User Service/11. PresentationSlide/01 My Slides/01.11.01 getMySlides.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"28bad33b-9bc9-4a30-8cf7-93d4d45432c9","title":"Get my slides successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get my slides or not","fullTitle":"Get my slides successfully with status code 200 Checking if should be able to Get my slides or not","timedOut":null,"duration":781,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/slide/myslides?page=${page}&limit=${limit}&query=${query}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get my slides successfully\");\n    console.log(\"Get my slides successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get my slides failed with status code:\", response.status);\n    console.log(`Get my slides failed with status code ${response.status}`);\n    cy.log(`Get my slides failed  ${response.body.error}`);\n    console.log(`Get my slides failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"c37569d4-9f88-4fef-b477-5a345678c19e","parentUUID":"28bad33b-9bc9-4a30-8cf7-93d4d45432c9","isHook":false,"skipped":false}],"suites":[],"passes":["c37569d4-9f88-4fef-b477-5a345678c19e"],"failures":[],"pending":[],"skipped":[],"duration":781,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"48d4f78f-2f56-478a-81fe-5477b4dd43e6","title":"","fullFile":"cypress/e2e/01. User Service/11. PresentationSlide/02. Single Slide/01.11.02 getSingleSlide.cy.js","file":"cypress/e2e/01. User Service/11. PresentationSlide/02. Single Slide/01.11.02 getSingleSlide.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2da3367a-cc9b-408d-9cfd-aaffdf85ee71","title":"Get single slide successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get single slide or not","fullTitle":"Get single slide successfully with status code 200 Checking if should be able to Get single slide or not","timedOut":null,"duration":576,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/slide/single/${slideId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get single slide successfully\");\n    console.log(\"Get single slide successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get single slide failed with status code:\", response.status);\n    console.log(`Get single slide failed with status code ${response.status}`);\n    cy.log(`Get single slide failed  ${response.body.error}`);\n    console.log(`Get single slide failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"f4a1a11e-adce-4402-a788-d81a62c0f090","parentUUID":"2da3367a-cc9b-408d-9cfd-aaffdf85ee71","isHook":false,"skipped":false}],"suites":[],"passes":["f4a1a11e-adce-4402-a788-d81a62c0f090"],"failures":[],"pending":[],"skipped":[],"duration":576,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"faef7d41-38b9-4608-928e-7d174d1419bd","title":"","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.1 Course Content/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.1 Course Content/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d7f04292-3150-4d8b-9460-fed57624fbe0","title":"Get course content by category successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get course data or not","fullTitle":"Get course content by category successfully with status code 200 Checking if should be able get course data or not","timedOut":null,"duration":1107,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getbycourse/${category}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course data Response:\", response.body);\n    console.log(\"Get course data Response:\", response.body);\n  } else {\n    cy.log(\"Get course data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7e816f3f-9b02-4569-aedd-949d233e6fe7","parentUUID":"d7f04292-3150-4d8b-9460-fed57624fbe0","isHook":false,"skipped":false}],"suites":[],"passes":["7e816f3f-9b02-4569-aedd-949d233e6fe7"],"failures":[],"pending":[],"skipped":[],"duration":1107,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"15aaceba-fa7c-4930-abf2-cd9d02d318ec","title":"","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.2 Content By Id/3.01.2 getContentById.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.2 Content By Id/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8a00740a-2f62-4a0b-bf91-90d18cb216d5","title":"Get content by content Id successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get content by content Id or not","fullTitle":"Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not","timedOut":null,"duration":707,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getcontent/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course by course Id Response:\", response.body);\n    console.log(\"Get course data by course id Response:\", response.body);\n  } else {\n    cy.log(\"Get content by content Id failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"bd513225-1342-4e6a-8039-f04a723cb153","parentUUID":"8a00740a-2f62-4a0b-bf91-90d18cb216d5","isHook":false,"skipped":false}],"suites":[],"passes":["bd513225-1342-4e6a-8039-f04a723cb153"],"failures":[],"pending":[],"skipped":[],"duration":707,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3c4f5276-c554-4a01-af9d-b26d71614277","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.1 All Community Post/3.02.1 getAllCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.1 All Community Post/3.02.1 getAllCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a4def71a-0569-45e1-9e2e-5e329299427e","title":"Get all community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get all community post or not","fullTitle":"Get all community post successfully with status code 200 Checking if should be able get all community post or not","timedOut":null,"duration":732,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    // \"page\": \"1\",\n    // \"limit\": \"10\",\n    // \"query\": \"\",\n    // \"tags\": [],\n    // \"user\": \"\",\n    // \"filterBy\": \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all community post Response:\", response.body);\n    console.log(\"Get all community post Response:\", response.body);\n  } else {\n    cy.log(\"Get all community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cc25bcf3-a6fc-4723-964a-34428fd969d7","parentUUID":"a4def71a-0569-45e1-9e2e-5e329299427e","isHook":false,"skipped":false}],"suites":[],"passes":["cc25bcf3-a6fc-4723-964a-34428fd969d7"],"failures":[],"pending":[],"skipped":[],"duration":732,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"984e6daa-8abf-4c07-a5f6-2f03bedae0ec","title":"","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.3 Lab Content/3.01.3 getLabContent.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.3 Lab Content/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d88edd29-6c23-42a1-b651-ea13b76c7e26","title":"Get Lab Content successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":1202,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/labcontent\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d352c89b-84fd-41e8-9323-15e0b423cab7","parentUUID":"d88edd29-6c23-42a1-b651-ea13b76c7e26","isHook":false,"skipped":false}],"suites":[],"passes":["d352c89b-84fd-41e8-9323-15e0b423cab7"],"failures":[],"pending":[],"skipped":[],"duration":1202,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"30e430b9-8348-4fca-8eca-9d992b0d35a6","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.2 Create Community Post/3.02.2 createCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.2 Create Community Post/3.02.2 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7cb40562-822e-407e-a3e9-c4f89d9b4a8f","title":"Create community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able create community post or not","fullTitle":"Create community post successfully with status code 200 Checking if should be able create community post or not","timedOut":null,"duration":965,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    title: \"Mobile App Api Testing\",\n    description: \"community post for mobile app api testing\",\n    attachments: [],\n    tags: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/communityPostId.json\", {\n      community_postId: response.body.post._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post Response:\", response.body);\n    console.log(\"Create community post Response:\", response.body);\n  } else {\n    cy.log(\"Create community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c7cc313f-e37b-4b4d-b258-e9a2ccd62bf7","parentUUID":"7cb40562-822e-407e-a3e9-c4f89d9b4a8f","isHook":false,"skipped":false}],"suites":[],"passes":["c7cc313f-e37b-4b4d-b258-e9a2ccd62bf7"],"failures":[],"pending":[],"skipped":[],"duration":965,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a3bf271d-a0a7-484f-b1bc-e05a27a9f5f1","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.3 Single Community Post/3.02.3 getSingleCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.3 Single Community Post/3.02.3 getSingleCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6798226d-c3ae-4e62-bd1f-e8f13bdb1d1e","title":"Get single community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get single community post or not","fullTitle":"Get single community post successfully with status code 200 Checking if should be able get single community post or not","timedOut":null,"duration":616,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/community/post/${communityPostId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get single community post Response:\", response.body);\n    console.log(\"Get single community post Response:\", response.body);\n  } else {\n    cy.log(\"Get single community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cc18d67b-0301-471a-b205-ba309d8db096","parentUUID":"6798226d-c3ae-4e62-bd1f-e8f13bdb1d1e","isHook":false,"skipped":false}],"suites":[],"passes":["cc18d67b-0301-471a-b205-ba309d8db096"],"failures":[],"pending":[],"skipped":[],"duration":616,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6f65a779-1745-4b34-b819-a8cd6182e097","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.4 Edit Community Post/3.02.4 editCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.4 Edit Community Post/3.02.4 editCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8ea070c3-3862-41d3-b664-ebd5aa91c40d","title":"Edit community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Edit community post or not","fullTitle":"Edit community post successfully with status code 200 Checking if should be able Edit community post or not","timedOut":null,"duration":683,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/content/community/post/edit/${communityPostId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    title: \"Community post testing for edit\",\n    description: \"Description text\",\n    tags: \"#app\",\n    attachments: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Edit community post Response:\", response.body);\n    console.log(\"Edit community post Response:\", response.body);\n  } else {\n    cy.log(\"Edit community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c68fafa8-2559-498f-95ab-00cff6cb7f58","parentUUID":"8ea070c3-3862-41d3-b664-ebd5aa91c40d","isHook":false,"skipped":false}],"suites":[],"passes":["c68fafa8-2559-498f-95ab-00cff6cb7f58"],"failures":[],"pending":[],"skipped":[],"duration":683,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1dab3daf-8cb7-452a-9113-f1f6fc213768","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.5 Save Community Post/3.02.5 saveCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.5 Save Community Post/3.02.5 saveCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"977f9608-83b6-415a-861a-c2aee4c00ce3","title":"Save community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Save community post or not","fullTitle":"Save community post successfully with status code 200 Checking if should be able Save community post or not","timedOut":null,"duration":581,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/option/save\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    post: communityPostId,\n    action: \"save\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Save community post Response:\", response.body);\n    console.log(\"Save community post Response:\", response.body);\n  } else {\n    cy.log(\"Save community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e2bf971d-1d67-4a2d-9fa8-07900ff686be","parentUUID":"977f9608-83b6-415a-861a-c2aee4c00ce3","isHook":false,"skipped":false}],"suites":[],"passes":["e2bf971d-1d67-4a2d-9fa8-07900ff686be"],"failures":[],"pending":[],"skipped":[],"duration":581,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"05d83e20-3438-4a52-ad64-b7adcc0d1f14","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.6 Community Post Reaction/3.02.6 communityPostReaction.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.6 Community Post Reaction/3.02.6 communityPostReaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7e051cbb-5fe2-4e36-9a68-69c07a6fa89a","title":"Community post reaction successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Community post reaction or not","fullTitle":"Community post reaction successfully with status code 200 Checking if should be able Community post reaction or not","timedOut":null,"duration":634,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/content/community/post/react/${communityPostId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    symbol: \"😀\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Community post reaction Response:\", response.body);\n    console.log(\"Community post reaction Response:\", response.body);\n  } else {\n    cy.log(\"Community post reaction failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a22924a1-ec2e-45b0-8de3-f02cd55ad3d1","parentUUID":"7e051cbb-5fe2-4e36-9a68-69c07a6fa89a","isHook":false,"skipped":false}],"suites":[],"passes":["a22924a1-ec2e-45b0-8de3-f02cd55ad3d1"],"failures":[],"pending":[],"skipped":[],"duration":634,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e1c62daf-886c-4039-ab24-11579e384975","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.7 Report Community Post/3.02.7 reportCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.7 Report Community Post/3.02.7 reportCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7976a422-0eeb-4188-ba89-2a9b3f954239","title":"Report community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Report community post or not","fullTitle":"Report community post successfully with status code 200 Checking if should be able Report community post or not","timedOut":null,"duration":606,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/option/save\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    post: communityPostId,\n    action: \"report\",\n    reportReason: \"spam\",\n    note: \"note\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Report community post Response:\", response.body);\n    console.log(\"Report community post Response:\", response.body);\n  } else {\n    cy.log(\"Report community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c3113853-09b3-4a72-9f19-ea5fa325a695","parentUUID":"7976a422-0eeb-4188-ba89-2a9b3f954239","isHook":false,"skipped":false}],"suites":[],"passes":["c3113853-09b3-4a72-9f19-ea5fa325a695"],"failures":[],"pending":[],"skipped":[],"duration":606,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"aa334bf2-2633-48e1-b206-154cd0ac3a3b","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.8 Community Top Contributor/3.02.8 communityTopContributor.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.8 Community Top Contributor/3.02.8 communityTopContributor.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b10dee06-880f-4396-bd72-93f1d58cc616","title":"Get Community top contribute successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get Community top contribute or not","fullTitle":"Get Community top contribute successfully with status code 200 Checking if should be able Get Community top contribute or not","timedOut":null,"duration":568,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/community/top-users\",\n  headers: {\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Community top contribute Response:\", response.body);\n    console.log(\"Get Community top contribute Response:\", response.body);\n  } else {\n    cy.log(\"Get Community top contribute failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"67cafdaf-7202-4527-b4ab-efb500b476ed","parentUUID":"b10dee06-880f-4396-bd72-93f1d58cc616","isHook":false,"skipped":false}],"suites":[],"passes":["67cafdaf-7202-4527-b4ab-efb500b476ed"],"failures":[],"pending":[],"skipped":[],"duration":568,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"15722938-62e7-4270-8ab9-6aea8eaf8499","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.9 Delete Community Post/3.02.9 deleteCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.9 Delete Community Post/3.02.9 deleteCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"31dfc2aa-4b49-4c1a-b3cd-d13ceeb3669b","title":"Delete community post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete community post or not","fullTitle":"Delete community post successfully with status code 200 Checking if should be able Delete community post or not","timedOut":null,"duration":632,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/content/community/post/delete/${communityPostId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete community post Response:\", response.body);\n    console.log(\"Delete community post Response:\", response.body);\n  } else {\n    cy.log(\"Delete community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"62f5f644-c1d3-4514-8e0e-f015877efe93","parentUUID":"31dfc2aa-4b49-4c1a-b3cd-d13ceeb3669b","isHook":false,"skipped":false}],"suites":[],"passes":["62f5f644-c1d3-4514-8e0e-f015877efe93"],"failures":[],"pending":[],"skipped":[],"duration":632,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0b670687-4378-47a9-a762-3c1e539c5703","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5154230b-6592-46d6-805f-b7ecdf04b423","title":"Get all programs successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all programs or not","fullTitle":"Get all programs successfully with status code 200 Checking if should be able Get all programs or not","timedOut":null,"duration":791,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/organization/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPage: \"1\",\n    limit: \"10\",\n    type: type\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all programs Response:\", response.body);\n    console.log(\"Get all programs Response:\", response.body);\n  } else {\n    cy.log(\"Get all programs failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7cdf4b33-6597-40ec-b966-b2729664b8df","parentUUID":"5154230b-6592-46d6-805f-b7ecdf04b423","isHook":false,"skipped":false}],"suites":[],"passes":["7cdf4b33-6597-40ec-b966-b2729664b8df"],"failures":[],"pending":[],"skipped":[],"duration":791,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f6aa2b80-0906-4cf2-a188-f5f1646e3090","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c0734fdc-b16a-41eb-b993-11fa5662f8b3","title":"Get all Courses successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all Courses or not","fullTitle":"Get all Courses successfully with status code 200 Checking if should be able Get all Courses or not","timedOut":null,"duration":717,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/organization/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPage: \"1\",\n    limit: \"10\",\n    type: type\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all Courses Response:\", response.body);\n    console.log(\"Get all Courses Response:\", response.body);\n  } else {\n    cy.log(\"Get all Courses failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2f7f23ce-f329-44e8-beb8-5716ccccac88","parentUUID":"c0734fdc-b16a-41eb-b993-11fa5662f8b3","isHook":false,"skipped":false}],"suites":[],"passes":["2f7f23ce-f329-44e8-beb8-5716ccccac88"],"failures":[],"pending":[],"skipped":[],"duration":717,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6b08b69a-d35f-4f44-89d7-fe6412cf0476","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2f5bcb51-a91d-453b-8da3-848b79bb93fa","title":"Get course content successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course content or not","fullTitle":"Get course content successfully with status code 200 Checking if should be able Get course content or not","timedOut":null,"duration":865,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/content/${programSlug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course content Response:\", response.body);\n    console.log(\"Get course content Response:\", response.body);\n  } else {\n    cy.log(\"Get course content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"29c9e04e-83d6-4d20-8068-821720424f1b","parentUUID":"2f5bcb51-a91d-453b-8da3-848b79bb93fa","isHook":false,"skipped":false}],"suites":[],"passes":["29c9e04e-83d6-4d20-8068-821720424f1b"],"failures":[],"pending":[],"skipped":[],"duration":865,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6e05ccab-4537-4182-9d6e-bff974324803","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3f642676-6b9d-47dd-8d37-0f2d0c8fd6a1","title":"Get single bootcamps details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get single bootcamps details or not","fullTitle":"Get single bootcamps details successfully with status code 200 Checking if should be able Get single bootcamps details or not","timedOut":null,"duration":975,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/single/${program_slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get single bootcamps details Response:\", response.body);\n    console.log(\"Get single bootcamps details Response:\", response.body);\n  } else {\n    cy.log(\"Get single bootcamps details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"78e15454-b880-49b1-bea7-b1857668333d","parentUUID":"3f642676-6b9d-47dd-8d37-0f2d0c8fd6a1","isHook":false,"skipped":false}],"suites":[],"passes":["78e15454-b880-49b1-bea7-b1857668333d"],"failures":[],"pending":[],"skipped":[],"duration":975,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"71c7528b-90dd-4db5-b7f1-4b1114892ec6","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"de1158fb-63f2-40e4-8754-8a646ec2d6af","title":"Get course details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course details or not","fullTitle":"Get course details successfully with status code 200 Checking if should be able Get course details or not","timedOut":null,"duration":753,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/contentv2/${program_slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course details Response:\", response.body);\n    console.log(\"Get course details Response:\", response.body);\n  } else {\n    cy.log(\"Get course details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"98cbc101-1598-4e94-b472-043cc8144ed3","parentUUID":"de1158fb-63f2-40e4-8754-8a646ec2d6af","isHook":false,"skipped":false}],"suites":[],"passes":["98cbc101-1598-4e94-b472-043cc8144ed3"],"failures":[],"pending":[],"skipped":[],"duration":753,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0781d32e-373f-4572-8ad3-f91858e09172","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e6e6fd10-df88-472f-9446-def1daa89ae2","title":"Get course roadmap data successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course roadmap data or not","fullTitle":"Get course roadmap data successfully with status code 200 Checking if should be able Get course roadmap data or not","timedOut":null,"duration":718,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/roadmap/find/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course roadmap data Response:\", response.body);\n    console.log(\"Get course roadmap data Response:\", response.body);\n  } else {\n    cy.log(\"Get course roadmap data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"56e3e1f5-0794-4828-a196-37e3979f9e3a","parentUUID":"e6e6fd10-df88-472f-9446-def1daa89ae2","isHook":false,"skipped":false}],"suites":[],"passes":["56e3e1f5-0794-4828-a196-37e3979f9e3a"],"failures":[],"pending":[],"skipped":[],"duration":718,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ee649624-6221-4c32-b414-9f3dbb952251","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7e2d8697-2282-41f9-a691-d3e3fb84ff9c","title":"Get reviews categories successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get reviews categories or not","fullTitle":"Get reviews categories successfully with status code 200 Checking if should be able Get reviews categories or not","timedOut":null,"duration":747,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/review/get/${course_id}?fields[]=categories&page=1&limit=10`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get reviews categories Response:\", response.body);\n    console.log(\"Get reviews categories Response:\", response.body);\n  } else {\n    cy.log(\"Get reviews categories failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"10571bf5-eda0-46cb-9567-8ac252bec7b9","parentUUID":"7e2d8697-2282-41f9-a691-d3e3fb84ff9c","isHook":false,"skipped":false}],"suites":[],"passes":["10571bf5-eda0-46cb-9567-8ac252bec7b9"],"failures":[],"pending":[],"skipped":[],"duration":747,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e9123a54-9eee-4f87-a68d-72b2c94ba9b8","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1271880c-89f0-47f3-bfb9-265f4ffb636a","title":"Get student reviews course successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Get student reviews course or not","fullTitle":"Get student reviews course successfully with status code 200 Checking if should be able get Get student reviews course or not","timedOut":null,"duration":705,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/review/get/${course_id}?fields[]=reviews&&page=1&limit=10&category=student`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get student reviews course Response:\", response.body);\n    console.log(\"Get student reviews course Response:\", response.body);\n  } else {\n    cy.log(\"Get student reviews course failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"55f5cbf5-5f6c-43de-8074-6f48987510d2","parentUUID":"1271880c-89f0-47f3-bfb9-265f4ffb636a","isHook":false,"skipped":false}],"suites":[],"passes":["55f5cbf5-5f6c-43de-8074-6f48987510d2"],"failures":[],"pending":[],"skipped":[],"duration":705,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6aa76635-aaf0-4b0d-a955-968afa33b8e4","title":"","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b246bfaf-6a4b-4180-840b-331da1c52d0d","title":"Get chapter by category successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get chapter by category or not","fullTitle":"Get chapter by category successfully with status code 200 Checking if should be able Get chapter by category or not","timedOut":null,"duration":938,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/chapterv2/get/${program_slug}/${categoryId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    parent: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get chapter by category Response:\", response.body);\n    console.log(\"Get chapter by category Response:\", response.body);\n  } else {\n    cy.log(\"Get chapter by category failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b8102cc5-5737-449b-ab22-76c54adf7856","parentUUID":"b246bfaf-6a4b-4180-840b-331da1c52d0d","isHook":false,"skipped":false}],"suites":[],"passes":["b8102cc5-5737-449b-ab22-76c54adf7856"],"failures":[],"pending":[],"skipped":[],"duration":938,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"eb1a3205-6a08-4c79-9d4c-ff11eccab85e","title":"","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"86a219d2-d35c-4c19-ad45-4a4f8e7d59d2","title":"Get preview chapter successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get preview chapter or not","fullTitle":"Get preview chapter successfully with status code 200 Checking if should be able Get preview chapter or not","timedOut":null,"duration":820,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/course/chapterv2/preview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    courseId: \"64fcb957b0cf6e9ae43d126d\",\n    fields: [\"chapters\", \"categories\", \"totalDuration\", \"totalChapter\", \"totalLesson\"]\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get preview chapter Response:\", response.body);\n    console.log(\"Get preview chapter Response:\", response.body);\n  } else {\n    cy.log(\"Get preview chapter failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"6bebe23d-61e7-4321-b480-632ac2e3d1c1","parentUUID":"86a219d2-d35c-4c19-ad45-4a4f8e7d59d2","isHook":false,"skipped":false}],"suites":[],"passes":["6bebe23d-61e7-4321-b480-632ac2e3d1c1"],"failures":[],"pending":[],"skipped":[],"duration":820,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e3fe0d7c-e45a-434e-9d0f-01de46f075c9","title":"","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6d4dbc61-d29f-4964-a800-4553219666a5","title":"Get preview chapter by category successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get preview chapter by category or not","fullTitle":"Get preview chapter by category successfully with status code 200 Checking if should be able Get preview chapter by category or not","timedOut":null,"duration":657,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/course/chapterv2/preview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    courseId: \"64fcb957b0cf6e9ae43d126d\",\n    fields: [\"chapters\"],\n    categoryId: \"65eb5eaff6d7cc3e14e90cd7\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get preview chapter by category Response:\", response.body);\n    console.log(\"Get preview chapter by category Response:\", response.body);\n  } else {\n    cy.log(\"Get preview chapter by category failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9f8c0417-dbc2-488c-bd34-e50d20a64a45","parentUUID":"6d4dbc61-d29f-4964-a800-4553219666a5","isHook":false,"skipped":false}],"suites":[],"passes":["9f8c0417-dbc2-488c-bd34-e50d20a64a45"],"failures":[],"pending":[],"skipped":[],"duration":657,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d37221a4-dc72-48de-ab9c-b334415e649b","title":"","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"276f9b44-ca1b-4fba-9a35-9bd0ec9d4b09","title":"Get my workshop successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my workshop or not","fullTitle":"Get my workshop successfully with status code 200 Checking if should be able Get my workshop or not","timedOut":null,"duration":890,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/workshop\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my workshop Response:\", response.body);\n    console.log(\"Get my workshop Response:\", response.body);\n  } else {\n    cy.log(\"Get my workshop failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"57156bf2-ad99-4482-9c47-167731cb4c64","parentUUID":"276f9b44-ca1b-4fba-9a35-9bd0ec9d4b09","isHook":false,"skipped":false}],"suites":[],"passes":["57156bf2-ad99-4482-9c47-167731cb4c64"],"failures":[],"pending":[],"skipped":[],"duration":890,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"45ae505e-b230-4d21-a9d9-03d6d3d5e56b","title":"","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"645dbc45-679b-4835-a28d-60098053eb1e","title":"Get my labs successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my labs or not","fullTitle":"Get my labs successfully with status code 200 Checking if should be able Get my labs or not","timedOut":null,"duration":917,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/lab\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my labs Response:\", response.body);\n    console.log(\"Get my labs Response:\", response.body);\n  } else {\n    cy.log(\"Get my labs failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"78a0a124-66cd-4911-91ee-d3b27dd37e50","parentUUID":"645dbc45-679b-4835-a28d-60098053eb1e","isHook":false,"skipped":false}],"suites":[],"passes":["78a0a124-66cd-4911-91ee-d3b27dd37e50"],"failures":[],"pending":[],"skipped":[],"duration":917,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5dc8da1f-0149-40a1-bb29-3e4bf0b2f410","title":"","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6a0cd3f4-1cee-4123-a341-c001544e75df","title":"Get my interviews successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my interviews or not","fullTitle":"Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not","timedOut":null,"duration":908,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/interview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my interviews Response:\", response.body);\n    console.log(\"Get my interviews Response:\", response.body);\n  } else {\n    cy.log(\"Get my interviews failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"16095949-a1a6-4d84-ba10-c2963abbfdc5","parentUUID":"6a0cd3f4-1cee-4123-a341-c001544e75df","isHook":false,"skipped":false}],"suites":[],"passes":["16095949-a1a6-4d84-ba10-c2963abbfdc5"],"failures":[],"pending":[],"skipped":[],"duration":908,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b81cd08d-0b9e-4558-898e-b0b9afb94ae8","title":"","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.1 Create Show N Tell/4.05.1 createShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.1 Create Show N Tell/4.05.1 createShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"4b3cb2bd-e0f8-4d28-9385-9628b40521f2","title":"Create show n tell successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create show n tell or not","fullTitle":"Create show n tell successfully with status code 200 Checking if should be able Create show n tell or not","timedOut":null,"duration":848,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/show-tell/add\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    title: \"Sample Title 2\",\n    agenda: \"Sample Agenda\",\n    date: \"2024-09-21T13:52:03+06:00\",\n    attachments: [\"\"],\n    users: [\"662882ef82d3120019fade53\", \"662776ef82d3120019fa94ec\"],\n    notifications: [{\n      timeBefore: 15,\n      methods: [\"inbox\"],\n      chatGroups: []\n    }],\n    creator: \"64ef676669eaf6370c11429c\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/showNTellID.json\", {\n      snt_id: response.body.item._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create show n tell Response:\", response.body);\n    console.log(\"Create show n tell Response:\", response.body);\n  } else {\n    cy.log(\"Create show n tell failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"dab38d83-2115-4824-96f8-0bbcc6822470","parentUUID":"4b3cb2bd-e0f8-4d28-9385-9628b40521f2","isHook":false,"skipped":false}],"suites":[],"passes":["dab38d83-2115-4824-96f8-0bbcc6822470"],"failures":[],"pending":[],"skipped":[],"duration":848,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"65802728-2c9a-4b62-81d6-24b8cdb5f2aa","title":"","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.2 Update Show N Tell/4.05.2 updateShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.2 Update Show N Tell/4.05.2 updateShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"25318c73-e1be-43eb-a805-ae0f2ae71d9f","title":"Update show n tell successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update show n tell or not","fullTitle":"Update show n tell successfully with status code 200 Checking if should be able Update show n tell or not","timedOut":null,"duration":914,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/show-tell/update/${snt_id}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    title: \"Updated Title 3\",\n    agenda: \"Updated Agenda\",\n    date: \"2024-09-21T13:52:03+06:00\",\n    users: [\"662882ef82d3120019fade53\", \"662776ef82d3120019fa94ec\"],\n    attachments: [\"\"],\n    notifications: [{\n      timeBefore: 15,\n      methods: [\"inbox\"],\n      chatGroups: []\n    }]\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update show n tell Response:\", response.body);\n    console.log(\"Update show n tell Response:\", response.body);\n  } else {\n    cy.log(\"Update show n tell failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ee3a6760-1042-49dc-8f55-2f66d2793443","parentUUID":"25318c73-e1be-43eb-a805-ae0f2ae71d9f","isHook":false,"skipped":false}],"suites":[],"passes":["ee3a6760-1042-49dc-8f55-2f66d2793443"],"failures":[],"pending":[],"skipped":[],"duration":914,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7751d296-d0c6-4554-b4e9-0e185cb85ef5","title":"","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.3 My Show N Tell/4.05.3 myShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.3 My Show N Tell/4.05.3 myShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"66acdc63-ee18-455e-a5ef-65bb70a93924","title":"Get my show n tell successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my show n tell or not","fullTitle":"Get my show n tell successfully with status code 200 Checking if should be able Get my show n tell or not","timedOut":null,"duration":830,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/show-tell/myshows\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my show n tell Response:\", response.body);\n    console.log(\"Get my show n tell Response:\", response.body);\n  } else {\n    cy.log(\"Get my show n tell failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a4e8b6be-9ee2-443c-bcbe-0423c0fdb3df","parentUUID":"66acdc63-ee18-455e-a5ef-65bb70a93924","isHook":false,"skipped":false}],"suites":[],"passes":["a4e8b6be-9ee2-443c-bcbe-0423c0fdb3df"],"failures":[],"pending":[],"skipped":[],"duration":830,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3875e6eb-b114-4a4b-9579-98695f65553d","title":"","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.4 Delete Show N Tell/4.05.4 deleteShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.4 Delete Show N Tell/4.05.4 deleteShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"38327a85-91e1-4afe-a95e-8fc601293e01","title":"Delete show n tell successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete show n tell or not","fullTitle":"Delete show n tell successfully with status code 200 Checking if should be able Delete show n tell or not","timedOut":null,"duration":832,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/show-tell/delete/${snt_id}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete show n tell Response:\", response.body);\n    console.log(\"Delete show n tell Response:\", response.body);\n  } else {\n    cy.log(\"Delete show n tell failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"746e4564-3226-4fb3-9b61-661f09aad59a","parentUUID":"38327a85-91e1-4afe-a95e-8fc601293e01","isHook":false,"skipped":false}],"suites":[],"passes":["746e4564-3226-4fb3-9b61-661f09aad59a"],"failures":[],"pending":[],"skipped":[],"duration":832,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c955a911-61bf-4cc9-95d0-384370255eca","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.1 My Interviews/4.06.1 myInterviews.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.1 My Interviews/4.06.1 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bc705b90-a496-4666-8207-1a09603ce002","title":"Get my interviews successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my interviews or not","fullTitle":"Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not","timedOut":null,"duration":925,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/interview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my interviews Response:\", response.body);\n    console.log(\"Get my interviews Response:\", response.body);\n  } else {\n    cy.log(\"Get my interviews failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a11833d1-a04f-438a-99a9-cc084ca10097","parentUUID":"bc705b90-a496-4666-8207-1a09603ce002","isHook":false,"skipped":false}],"suites":[],"passes":["a11833d1-a04f-438a-99a9-cc084ca10097"],"failures":[],"pending":[],"skipped":[],"duration":925,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5deb9e49-9ea1-4f82-b949-007cade46e9f","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.2 Submit Answer/4.06.2 submitAnswer.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.2 Submit Answer/4.06.2 submitAnswer.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0be69a99-9629-4c32-8649-a0695e1d5ac4","title":"Submit interview answer successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Submit interview answer or not","fullTitle":"Submit interview answer successfully with status code 200 Checking if should be able Submit interview answer or not","timedOut":null,"duration":798,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: \"/interview/submit-answer\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    interview: \"66bc64f18a5075001979c83e\",\n    video: \"Interview question answer testing\",\n    audio: \"\",\n    question: \"66a45d333992e3001996d0a9\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Submit interview answer Response:\", response.body);\n    console.log(\"Submit interview answer Response:\", response.body);\n  } else {\n    cy.log(\"Submit interview answer failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c6b517de-1220-4b96-b5be-a000a7797f8c","parentUUID":"0be69a99-9629-4c32-8649-a0695e1d5ac4","isHook":false,"skipped":false}],"suites":[],"passes":["c6b517de-1220-4b96-b5be-a000a7797f8c"],"failures":[],"pending":[],"skipped":[],"duration":798,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e43ffb84-f02c-45e2-b1db-5be808048460","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.3 Final Submission/4.06.3 finalSubmission.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.3 Final Submission/4.06.3 finalSubmission.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"31875cf7-f724-4346-81f5-8a328950c724","title":"Submit final submission successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Submit final submission or not","fullTitle":"Submit final submission successfully with status code 200 Checking if should be able Submit final submission or not","timedOut":null,"duration":685,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/interview/finalsubmission\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Submit final submission Response:\", response.body);\n    console.log(\"Submit final submission Response:\", response.body);\n  } else {\n    cy.log(\"Submit final submission failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"04884dda-d275-42b3-b670-782583c790d0","parentUUID":"31875cf7-f724-4346-81f5-8a328950c724","isHook":false,"skipped":false}],"suites":[],"passes":["04884dda-d275-42b3-b670-782583c790d0"],"failures":[],"pending":[],"skipped":[],"duration":685,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b7c0eec5-da3c-45e8-8129-4156bb6073c8","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.4 Interview Question/4.06.4 interviewQuestion.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.4 Interview Question/4.06.4 interviewQuestion.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bcff1957-f154-42df-a68e-cfd61a2bb4f0","title":"Get interview question successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get interview question or not","fullTitle":"Get interview question successfully with status code 200 Checking if should be able Get interview question or not","timedOut":null,"duration":676,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/interview/answer/${interviewId}/${questionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get interview question Response:\", response.body);\n    console.log(\"Get interview question Response:\", response.body);\n  } else {\n    cy.log(\"Get interview question failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4f91220f-b679-457e-8030-fd61160c79a7","parentUUID":"bcff1957-f154-42df-a68e-cfd61a2bb4f0","isHook":false,"skipped":false}],"suites":[],"passes":["4f91220f-b679-457e-8030-fd61160c79a7"],"failures":[],"pending":[],"skipped":[],"duration":676,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d771ab49-20ff-4936-9dca-4dd05930e5c6","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.5 Interview Comment/4.06.5 interviewComment.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.5 Interview Comment/4.06.5 interviewComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"02dd5773-0571-451e-9efe-8363473c450c","title":"Post interview comment successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Post interview comment or not","fullTitle":"Post interview comment successfully with status code 200 Checking if should be able Post interview comment or not","timedOut":null,"duration":1592,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/interview/review/comment/${submissionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Post interview comment Response:\", response.body);\n    console.log(\"Post interview comment Response:\", response.body);\n  } else {\n    cy.log(\"Post interview comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"978583b1-e6cb-4eb3-9b72-9bc75ae61546","parentUUID":"02dd5773-0571-451e-9efe-8363473c450c","isHook":false,"skipped":false}],"suites":[],"passes":["978583b1-e6cb-4eb3-9b72-9bc75ae61546"],"failures":[],"pending":[],"skipped":[],"duration":1592,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"022d9858-b148-406b-bf2d-b98479645308","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.6 Share Interview/4.06.6 shareInterview.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.6 Share Interview/4.06.6 shareInterview.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0873b4d1-abfe-4684-b776-d97bdae1d35f","title":"Share interview successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Share interview or not","fullTitle":"Share interview successfully with status code 200 Checking if should be able Share interview or not","timedOut":null,"duration":678,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/interview/share/${submissionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Share interview Response:\", response.body);\n    console.log(\"Share interview Response:\", response.body);\n  } else {\n    cy.log(\"Share interview failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"77a7275c-175d-4837-87a6-75cecae10398","parentUUID":"0873b4d1-abfe-4684-b776-d97bdae1d35f","isHook":false,"skipped":false}],"suites":[],"passes":["77a7275c-175d-4837-87a6-75cecae10398"],"failures":[],"pending":[],"skipped":[],"duration":678,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"784e2003-f032-4766-853b-7d86c53b8a2d","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.1 Create Activity/4.08.1 createActivity.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.1 Create Activity/4.08.1 createActivity.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5c9d90b3-ff94-48dd-a338-354bcc9bfb99","title":"Create activity successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create activity or not","fullTitle":"Create activity successfully with status code 200 Checking if should be able Create activity or not","timedOut":null,"duration":809,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/communication/shout\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    title: \"Title\",\n    category: \"day2day\",\n    description: \"nothing to hide\",\n    attachments: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 201) {\n    // Assertions\n    expect(response.status).to.eq(201);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create activity Response:\", response.body);\n    console.log(\"Create activity Response:\", response.body);\n  } else {\n    cy.log(\"Create activity failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8f7e70de-7c22-40a3-8376-dc05ebde6027","parentUUID":"5c9d90b3-ff94-48dd-a338-354bcc9bfb99","isHook":false,"skipped":false}],"suites":[],"passes":["8f7e70de-7c22-40a3-8376-dc05ebde6027"],"failures":[],"pending":[],"skipped":[],"duration":809,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"eee54105-cfd8-4538-a52a-5190025e941c","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.2 Update Activity/4.08.2 updateActivity.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.2 Update Activity/4.08.2 updateActivity.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2b9bc1a9-857d-404f-9f42-5862986d2c2b","title":"Update Activity successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update Activity or not","fullTitle":"Update Activity successfully with status code 200 Checking if should be able Update Activity or not","timedOut":null,"duration":619,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/communication/update/${activityId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    title: \"Update communication\",\n    category: \"day2day\",\n    description: \"No Change\",\n    attachments: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update Activity Response:\", response.body);\n    console.log(\"Update Activity Response:\", response.body);\n  } else {\n    cy.log(\"Update Activity failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"eed35b97-cf62-4e9f-b503-32f89e810bb1","parentUUID":"2b9bc1a9-857d-404f-9f42-5862986d2c2b","isHook":false,"skipped":false}],"suites":[],"passes":["eed35b97-cf62-4e9f-b503-32f89e810bb1"],"failures":[],"pending":[],"skipped":[],"duration":619,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"437b7f71-ddf6-490a-8334-bf80d84ba073","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.3 Day2day Activities/4.08.3 dayToDayActivities.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.3 Day2day Activities/4.08.3 dayToDayActivities.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cfb72e1c-1937-4572-aeb1-f428f56cf865","title":"Day to day activities successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Day to day activities or not","fullTitle":"Day to day activities successfully with status code 200 Checking if should be able Day to day activities or not","timedOut":null,"duration":836,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/communication/myshout/day2day?page=1&limit=8`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Day to day activities Response:\", response.body);\n    console.log(\"Day to day activities Response:\", response.body);\n  } else {\n    cy.log(\"Day to day activities failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b1977875-e147-4580-a44a-f65abf45c26c","parentUUID":"cfb72e1c-1937-4572-aeb1-f428f56cf865","isHook":false,"skipped":false}],"suites":[],"passes":["b1977875-e147-4580-a44a-f65abf45c26c"],"failures":[],"pending":[],"skipped":[],"duration":836,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c1aa5484-65c8-4662-9012-a50d107a8c38","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.4 My Issues/4.08.4 myIssues.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.4 My Issues/4.08.4 myIssues.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"acfc01da-6dad-4ec4-9e77-060e1b058e97","title":"Get my issues successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to get my issues or not","fullTitle":"Get my issues successfully with status code 200 Checking if should be able to get my issues or not","timedOut":null,"duration":1045,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/communication/mypost/issues\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get Issues successfully\");\n    console.log(\"Get Issues successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get my issues failed with status code:\", response.status);\n    console.log(`Get my issues failed with status code ${response.status}`);\n    cy.log(`Get my issues failed  ${response.body.error}`);\n    console.log(`Get my issues failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"45ee4824-148f-4bc8-ab07-0a4583b6b3d8","parentUUID":"acfc01da-6dad-4ec4-9e77-060e1b058e97","isHook":false,"skipped":false}],"suites":[],"passes":["45ee4824-148f-4bc8-ab07-0a4583b6b3d8"],"failures":[],"pending":[],"skipped":[],"duration":1045,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f6e1c27b-619a-4abc-8f52-7b13b423fc60","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.5 Post My Issue/4.08.5 postMyIssue.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.5 Post My Issue/4.08.5 postMyIssue.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"4989aa04-a0ee-47e9-b677-8580dc400d6d","title":"Create my issue post successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Create my issue post or not","fullTitle":"Create my issue post successfully with status code 200 Checking if should be able to Create my issue post or not","timedOut":null,"duration":815,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/communication/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    title: \"test\",\n    date: \"2024-12-20T18:00:00.000Z\",\n    description: \"fasdasd\",\n    category: \"issues\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Issue posted successfully\");\n    console.log(\"Issue posted successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Create my issue post failed with status code:\", response.status);\n    console.log(`Create my issue post failed with status code ${response.status}`);\n    cy.log(`Create my issue post failed  ${response.body.error}`);\n    console.log(`Create my issue post failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"c16c6785-d1b1-44b8-94e7-4360c3daa287","parentUUID":"4989aa04-a0ee-47e9-b677-8580dc400d6d","isHook":false,"skipped":false}],"suites":[],"passes":["c16c6785-d1b1-44b8-94e7-4360c3daa287"],"failures":[],"pending":[],"skipped":[],"duration":815,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4ca93ae9-ad1b-4efb-928c-2a9e8a533908","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.1 Send Message/6.03.1 sendMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.1 Send Message/6.03.1 sendMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d9735590-8e4d-49b9-bc26-9442c55799c8","title":"Send chat message with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Send chat message or not","fullTitle":"Send chat message with status code 200 Checking if should be able Send chat message or not","timedOut":null,"duration":872,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/chat/sendmessage/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    text: \"Your message here\",\n    files: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/messageId.json\", {\n      messageId: response.body.message._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Send chat message Response:\", response.body);\n  } else {\n    cy.log(\"Send chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3c2b2314-f9be-4cd2-bec0-d67b18fd6696","parentUUID":"d9735590-8e4d-49b9-bc26-9442c55799c8","isHook":false,"skipped":false}],"suites":[],"passes":["3c2b2314-f9be-4cd2-bec0-d67b18fd6696"],"failures":[],"pending":[],"skipped":[],"duration":872,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ccfe68be-3723-4c3f-9002-b8f8a30fec0d","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.2 Update Message/6.03.2 updateMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.2 Update Message/6.03.2 updateMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"47932f16-9388-4ca3-93a8-efe9c9195b5f","title":"Update chat message with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update chat message or not","fullTitle":"Update chat message with status code 200 Checking if should be able Update chat message or not","timedOut":null,"duration":831,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/update/message/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    text: \"Updated message text\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update chat message Response:\", response.body);\n  } else {\n    cy.log(\"Update chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"00045880-f37e-42b2-9445-215bc94f5f0c","parentUUID":"47932f16-9388-4ca3-93a8-efe9c9195b5f","isHook":false,"skipped":false}],"suites":[],"passes":["00045880-f37e-42b2-9445-215bc94f5f0c"],"failures":[],"pending":[],"skipped":[],"duration":831,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f3c0ade1-432d-4bd1-adf0-2faef02d1804","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.3 Fetch Chat Message/6.03.3 fetchChatMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.3 Fetch Chat Message/6.03.3 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bc6704e5-0c98-48bb-85fc-4c7a0a063816","title":"Fetch the chat message with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch the chat message or not","fullTitle":"Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not","timedOut":null,"duration":680,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/messages`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    page: 1,\n    chat: chatId,\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch the chat message Response:\", response.body);\n  } else {\n    cy.log(\"Fetch the chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"88735457-0595-43fd-9697-c652a6f51aa8","parentUUID":"bc6704e5-0c98-48bb-85fc-4c7a0a063816","isHook":false,"skipped":false}],"suites":[],"passes":["88735457-0595-43fd-9697-c652a6f51aa8"],"failures":[],"pending":[],"skipped":[],"duration":680,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"54e2da0c-f89d-477c-89ff-d21609cc36c9","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.4 Fetch Chat Image/6.03.4 fetchChatImage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.4 Fetch Chat Image/6.03.4 fetchChatImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fb2e4b48-8a81-4f5c-bba2-68a27958c73f","title":"Fetch chat image with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch chat image or not","fullTitle":"Fetch chat image with status code 200 Checking if should be able Fetch chat image or not","timedOut":null,"duration":658,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/media/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    limit: 1,\n    type: \"image\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch chat image Response:\", response.body);\n  } else {\n    cy.log(\"Fetch chat image failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"869bdca4-afab-4670-a796-71e49d6e3ff9","parentUUID":"fb2e4b48-8a81-4f5c-bba2-68a27958c73f","isHook":false,"skipped":false}],"suites":[],"passes":["869bdca4-afab-4670-a796-71e49d6e3ff9"],"failures":[],"pending":[],"skipped":[],"duration":658,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2c320326-60bc-47c4-8053-21d3220661f8","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.5 Emoji Reaction Toggle/6.03.5 emojiReactionToggle.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.5 Emoji Reaction Toggle/6.03.5 emojiReactionToggle.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"30ddad95-f4ea-4603-a310-547ea6738289","title":"Emoji reaction toggle with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Emoji reaction toggle or not","fullTitle":"Emoji reaction toggle with status code 200 Checking if should be able Emoji reaction toggle or not","timedOut":null,"duration":676,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/chat/react/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    symbol: \"😍\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Emoji reaction toggle Response:\", response.body);\n  } else {\n    cy.log(\"Emoji reaction toggle failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1b02550c-7e4a-41be-b824-f3a8f5ccd6ec","parentUUID":"30ddad95-f4ea-4603-a310-547ea6738289","isHook":false,"skipped":false}],"suites":[],"passes":["1b02550c-7e4a-41be-b824-f3a8f5ccd6ec"],"failures":[],"pending":[],"skipped":[],"duration":676,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7c5aaffe-d23a-4678-a3bc-134ff311a381","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.6 Fetch Chat Voice/6.03.6 fetchChatVoice.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.6 Fetch Chat Voice/6.03.6 fetchChatVoice.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"75d88f87-5648-4b74-882c-4642f7b50d5e","title":"Fetch chat image with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch chat image or not","fullTitle":"Fetch chat image with status code 200 Checking if should be able Fetch chat image or not","timedOut":null,"duration":652,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/media/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    limit: 1,\n    type: \"voice\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch chat image Response:\", response.body);\n  } else {\n    cy.log(\"Fetch chat image failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"30709f5c-7ac8-48cc-ae1b-d2012d51ce3f","parentUUID":"75d88f87-5648-4b74-882c-4642f7b50d5e","isHook":false,"skipped":false}],"suites":[],"passes":["30709f5c-7ac8-48cc-ae1b-d2012d51ce3f"],"failures":[],"pending":[],"skipped":[],"duration":652,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"aa55b449-a64d-4c19-9bf7-2178a6e876f1","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.7 Update Message Status/6.03.7 updateMessageStatus.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.7 Update Message Status/6.03.7 updateMessageStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e2159b16-8039-48cf-a895-e828ba0f3acc","title":"Update message status with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update message status or not","fullTitle":"Update message status with status code 200 Checking if should be able Update message status or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/update-status/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    status: \"delivered\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update message status Response:\", response.body);\n  } else {\n    cy.log(\"Update message status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"223f90b7-3e44-462f-8065-31da7660a3b0","parentUUID":"e2159b16-8039-48cf-a895-e828ba0f3acc","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["223f90b7-3e44-462f-8065-31da7660a3b0"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4fcf8467-d7f0-4b43-bb63-6a53c9208000","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.8 Delete Message/6.03.8 deleteMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.8 Delete Message/6.03.8 deleteMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e6df4946-f10d-4530-8597-8a04125927bb","title":"Delete chat message with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete chat message or not","fullTitle":"Delete chat message with status code 200 Checking if should be able Delete chat message or not","timedOut":null,"duration":638,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/chat/delete/message/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    symbol: \"😍\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Delete chat message Response:\", response.body);\n  } else {\n    cy.log(\"Delete chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e02247f5-b770-48b9-ae2d-b4719cfc2a24","parentUUID":"e6df4946-f10d-4530-8597-8a04125927bb","isHook":false,"skipped":false}],"suites":[],"passes":["e02247f5-b770-48b9-ae2d-b4719cfc2a24"],"failures":[],"pending":[],"skipped":[],"duration":638,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e0cd93cf-ba36-46d0-82f8-c659b087df4d","title":"","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.1 Pin or Unpin Message/6.07.1 pinOrUnpinMessage.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.1 Pin or Unpin Message/6.07.1 pinOrUnpinMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"96abe669-c3f9-4bcd-b8f7-c1c3b0bdab5e","title":"Pin or Unpin message successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Pin or Unpin message or not","fullTitle":"Pin or Unpin message successfully with status code 200 Checking if should be able Pin or Unpin message or not","timedOut":null,"duration":673,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/pin/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Pin or Unpin message Response:\", response.body);\n    console.log(\"Pin or Unpin message Response:\", response.body);\n  } else {\n    cy.log(\"Pin or Unpin message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5c05dc6a-15da-44c0-b0bc-b1065bffa3cc","parentUUID":"96abe669-c3f9-4bcd-b8f7-c1c3b0bdab5e","isHook":false,"skipped":false}],"suites":[],"passes":["5c05dc6a-15da-44c0-b0bc-b1065bffa3cc"],"failures":[],"pending":[],"skipped":[],"duration":673,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"71faca69-3014-466e-ade9-5152f841b0fa","title":"","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.2 Pinned Message/6.07.2 pinnedMessage.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.2 Pinned Message/6.07.2 pinnedMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9176605c-cb29-4550-99db-35039b286806","title":"Get thread messages successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get thread messages or not","fullTitle":"Get thread messages successfully with status code 200 Checking if should be able Get thread messages or not","timedOut":null,"duration":630,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/chat/fetchpinned/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get thread messages Response:\", response.body);\n    console.log(\"Get thread messages Response:\", response.body);\n  } else {\n    cy.log(\"Get thread messages failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3c92561b-58c3-432a-8849-6e0a92b8eadc","parentUUID":"9176605c-cb29-4550-99db-35039b286806","isHook":false,"skipped":false}],"suites":[],"passes":["3c92561b-58c3-432a-8849-6e0a92b8eadc"],"failures":[],"pending":[],"skipped":[],"duration":630,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d6460994-4bb2-4c79-b1c8-f1c0c06f4bbf","title":"","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.3 Favorite or Unfavorite/6.07.3 favoriteOrUnfavorite.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.3 Favorite or Unfavorite/6.07.3 favoriteOrUnfavorite.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0c501801-6ff0-4015-aec2-b92c9bbc8e3a","title":"Favorite or unfavorite chat with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Favorite or unfavorite chat or not","fullTitle":"Favorite or unfavorite chat with status code 200 Checking if should be able Favorite or unfavorite chat or not","timedOut":null,"duration":620,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/chat/favourite`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    chat: chatId,\n    isFavourite: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Favorite or unfavorite chat Response:\", response.body);\n  } else {\n    cy.log(\"Favorite or unfavorite chat failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c80e41f1-4c63-43a4-8ce5-4617a7fd6966","parentUUID":"0c501801-6ff0-4015-aec2-b92c9bbc8e3a","isHook":false,"skipped":false}],"suites":[],"passes":["c80e41f1-4c63-43a4-8ce5-4617a7fd6966"],"failures":[],"pending":[],"skipped":[],"duration":620,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"144eefd5-dfe0-440f-8d56-0d0e6a7f1528","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.1 Create Crowd/6.08.1 createCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.1 Create Crowd/6.08.1 createCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"dd795e32-9b74-43f0-8760-e1b97f520279","title":"Create crowd with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create crowd or not","fullTitle":"Create crowd with status code 200 Checking if should be able Create crowd or not","timedOut":null,"duration":690,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/channel/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    name: faker.person.fullName,\n    description: \"It's description\",\n    users: [\"64ef676669eaf6370c11429c\", \"650e70e7165fc20019352988\"],\n    isReadOnly: false,\n    isPublic: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/crowdId.json\", {\n      crowdId: response.body.chat._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Create crowd Response:\", response.body);\n  } else {\n    cy.log(\"Create crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9ec48714-1957-4914-8995-d0d6e544aad6","parentUUID":"dd795e32-9b74-43f0-8760-e1b97f520279","isHook":false,"skipped":false}],"suites":[],"passes":["9ec48714-1957-4914-8995-d0d6e544aad6"],"failures":[],"pending":[],"skipped":[],"duration":690,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"38c75e85-dba3-44b2-bf13-86f1e2fba7ad","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.2 Add User To Crowd/6.08.2 addUserToCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.2 Add User To Crowd/6.08.2 addUserToCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ee9b2cda-aca3-4557-b671-58350902de63","title":"Add user to crowd with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add user to crowd or not","fullTitle":"Add user to crowd with status code 200 Checking if should be able Add user to crowd or not","timedOut":null,"duration":631,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/adduser/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    user: memberId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Add user to crowd Response:\", response.body);\n  } else {\n    cy.log(\"Add user to crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9291f7c9-2193-4ede-8647-fa21e9ffecdc","parentUUID":"ee9b2cda-aca3-4557-b671-58350902de63","isHook":false,"skipped":false}],"suites":[],"passes":["9291f7c9-2193-4ede-8647-fa21e9ffecdc"],"failures":[],"pending":[],"skipped":[],"duration":631,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7628ea24-d547-43d8-b97d-6a4bee7ff0d1","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.3 Update Crowd Avatar/6.08.3 updateCrowdAvatar.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.3 Update Crowd Avatar/6.08.3 updateCrowdAvatar.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6112c1a0-c117-492d-a404-dc70112c48d4","title":"Update crowd avatar with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update crowd avatar or not","fullTitle":"Update crowd avatar with status code 200 Checking if should be able Update crowd avatar or not","timedOut":null,"duration":577,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/update/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    avatar: \"https://ts4uportal-all-files-upload.nyc3.digitaloceanspaces.com/undefined/1733208057920-avatar.JPEG\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update crowd avatar Response:\", response.body);\n  } else {\n    cy.log(\"Update crowd avatar failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b8766fd9-0ae1-44b4-a6e0-e7ba38d760e3","parentUUID":"6112c1a0-c117-492d-a404-dc70112c48d4","isHook":false,"skipped":false}],"suites":[],"passes":["b8766fd9-0ae1-44b4-a6e0-e7ba38d760e3"],"failures":[],"pending":[],"skipped":[],"duration":577,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b308a6c6-2287-4727-b0af-8e1bef582bbb","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.4 Update Crowd Details/6.08.4 updateCrowdDetails.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.4 Update Crowd Details/6.08.4 updateCrowdDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5faf955c-08a5-40a5-a884-799eb7ea22c5","title":"Update crowd details with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update crowd details or not","fullTitle":"Update crowd details with status code 200 Checking if should be able Update crowd details or not","timedOut":null,"duration":683,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/update/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    name: \"Channel no 2\",\n    description: \"Nothing\",\n    isReadOnly: false,\n    isPublic: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update crowd details Response:\", response.body);\n  } else {\n    cy.log(\"Update crowd details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"be5ad2ce-c883-4ba6-9d43-6c89668f9617","parentUUID":"5faf955c-08a5-40a5-a884-799eb7ea22c5","isHook":false,"skipped":false}],"suites":[],"passes":["be5ad2ce-c883-4ba6-9d43-6c89668f9617"],"failures":[],"pending":[],"skipped":[],"duration":683,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"27ec1c7e-3052-41ff-b6ac-9031e0822014","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.5 Crowd Members/6.08.5 crowdMembers.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.5 Crowd Members/6.08.5 crowdMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9896c3ca-a3a8-4aab-96c2-5132b7edfa0a","title":"Get crowd members with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get crowd members or not","fullTitle":"Get crowd members with status code 200 Checking if should be able Get crowd members or not","timedOut":null,"duration":631,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    const user = response.body.results.find(item => item.user._id === targetUserId);\n    cy.writeFile(\"cypress/fixtures/crowdMember.json\", {\n      crowdMember: user\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Get crowd members Response:\", response.body);\n  } else {\n    cy.log(\"Get crowd members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ee33abf8-c5db-41b8-89b6-c0469b3fa9fe","parentUUID":"9896c3ca-a3a8-4aab-96c2-5132b7edfa0a","isHook":false,"skipped":false}],"suites":[],"passes":["ee33abf8-c5db-41b8-89b6-c0469b3fa9fe"],"failures":[],"pending":[],"skipped":[],"duration":631,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4cc20b67-473e-4933-9b91-5487dfd7c018","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.6 Search Crowd Members/6.06.6 searchCrowdMembers.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.6 Search Crowd Members/6.06.6 searchCrowdMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ba0ea259-777b-4513-a8a2-edeb3def5e8d","title":"Search chat members with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search chat members or not","fullTitle":"Search chat members with status code 200 Checking if should be able Search chat members or not","timedOut":null,"duration":595,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    query: \"anonno\",\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Search chat members Response:\", response.body);\n  } else {\n    cy.log(\"Search chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3f40d8f5-5c6c-460a-9f78-fbe62dc455a9","parentUUID":"ba0ea259-777b-4513-a8a2-edeb3def5e8d","isHook":false,"skipped":false}],"suites":[],"passes":["3f40d8f5-5c6c-460a-9f78-fbe62dc455a9"],"failures":[],"pending":[],"skipped":[],"duration":595,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f730c97a-14f6-45d8-a7e1-c4245d64c182","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.7 Remove User From Crowd/6.08.7 removeMemberFromChannel.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.7 Remove User From Crowd/6.08.7 removeMemberFromChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cbee3c06-1e6d-4f8c-bc3f-6c5544039fa7","title":"Remove member from crowd with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Remove member from crowd or not","fullTitle":"Remove member from crowd with status code 200 Checking if should be able Remove member from crowd or not","timedOut":null,"duration":557,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/remove-user/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    member: crowdMember\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Remove member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Remove member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"105336b7-fb2b-4e30-9b6e-62214d44f4dc","parentUUID":"cbee3c06-1e6d-4f8c-bc3f-6c5544039fa7","isHook":false,"skipped":false}],"suites":[],"passes":["105336b7-fb2b-4e30-9b6e-62214d44f4dc"],"failures":[],"pending":[],"skipped":[],"duration":557,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"516144e2-57b1-4fdf-b0ce-91d90228bea4","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.8 Leave From Crowd/6.08.8 leaveFromCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.8 Leave From Crowd/6.08.8 leaveFromCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f27841c3-7473-4280-997b-c0548660d907","title":"Leave from crowd with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Leave from crowd or not","fullTitle":"Leave from crowd with status code 200 Checking if should be able Leave from crowd or not","timedOut":null,"duration":1021,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/leave/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Leave from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Leave from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d915ec38-f7f4-416f-bf5a-a0aebffb9f8b","parentUUID":"f27841c3-7473-4280-997b-c0548660d907","isHook":false,"skipped":false}],"suites":[],"passes":["d915ec38-f7f4-416f-bf5a-a0aebffb9f8b"],"failures":[],"pending":[],"skipped":[],"duration":1021,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"89eec09c-2c25-4663-99d8-368c8b903f00","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.1 Update Member Role/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.1 Update Member Role/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2aeba066-cd1b-4d92-a2d0-2aa333c2852a","title":"Update member role with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update member role or not","fullTitle":"Update member role with status code 200 Checking if should be able Update member role or not","timedOut":null,"duration":703,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId,\n    role: \"moderator\",\n    chat: chatId,\n    actionType: \"role\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update member role Response:\", response.body);\n  } else {\n    cy.log(\"Update member role failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1f161a92-e56f-4047-87a6-a1d524b4827c","parentUUID":"2aeba066-cd1b-4d92-a2d0-2aa333c2852a","isHook":false,"skipped":false}],"suites":[],"passes":["1f161a92-e56f-4047-87a6-a1d524b4827c"],"failures":[],"pending":[],"skipped":[],"duration":703,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2e5c4493-8d98-4124-931a-51f08877ae6b","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.2 Mute Member/6.09.2 muteMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.2 Mute Member/6.09.2 muteMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a8dcd30a-fde9-413e-8114-79dd77c7d053","title":"Mute member from crowd with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mute member from crowd or not","fullTitle":"Mute member from crowd with status code 200 Checking if should be able Mute member from crowd or not","timedOut":null,"duration":666,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    member: member,\n    selectedOption: 1,\n    date: null,\n    note: \"Nothing\",\n    chat: chatId,\n    actionType: \"mute\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Mute member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Mute member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"6b0e6135-ba91-4f65-8b40-e368441ee80e","parentUUID":"a8dcd30a-fde9-413e-8114-79dd77c7d053","isHook":false,"skipped":false}],"suites":[],"passes":["6b0e6135-ba91-4f65-8b40-e368441ee80e"],"failures":[],"pending":[],"skipped":[],"duration":666,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7c9ba854-3233-44e1-85bd-780d750371db","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.3 Unmute Member/6.09.3 unmuteMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.3 Unmute Member/6.09.3 unmuteMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f24fb573-eea2-4d73-9862-443ee819c1d7","title":"Unmute member from crowd with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Unmute member from crowd or not","fullTitle":"Unmute member from crowd with status code 200 Checking if should be able Unmute member from crowd or not","timedOut":null,"duration":664,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    member: member,\n    selectedOption: 1,\n    date: null,\n    note: \"Nothing\",\n    chat: chatId,\n    actionType: \"unmute\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Unmute member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Unmute member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5a271449-ec2b-4166-aa2d-f3bc54c2cf23","parentUUID":"f24fb573-eea2-4d73-9862-443ee819c1d7","isHook":false,"skipped":false}],"suites":[],"passes":["5a271449-ec2b-4166-aa2d-f3bc54c2cf23"],"failures":[],"pending":[],"skipped":[],"duration":664,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"cab6b239-5b8d-4736-839c-7a31772bd34d","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.4 Block Member/6.09.4 blockMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.4 Block Member/6.09.4 blockMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0157cb5c-4fbd-465c-b1ba-b92331a5263f","title":"Block member from crowd with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Block member from crowd or not","fullTitle":"Block member from crowd with status code 200 Checking if should be able Block member from crowd or not","timedOut":null,"duration":667,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    member: member,\n    chat: chatId,\n    actionType: \"block\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Block member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Block member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a528a593-fdd3-409d-bf3c-07b67813440f","parentUUID":"0157cb5c-4fbd-465c-b1ba-b92331a5263f","isHook":false,"skipped":false}],"suites":[],"passes":["a528a593-fdd3-409d-bf3c-07b67813440f"],"failures":[],"pending":[],"skipped":[],"duration":667,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4f293ab5-566d-44a7-bcf1-b70606c4f0fa","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.5 Unblock Member/6.09.5 unblockMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.5 Unblock Member/6.09.5 unblockMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2d02ba1b-96c4-4d99-9e3a-352848a44ec3","title":"Unblock member from crowd with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Unblock member from crowd or not","fullTitle":"Unblock member from crowd with status code 200 Checking if should be able Unblock member from crowd or not","timedOut":null,"duration":682,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    member: member,\n    chat: chatId,\n    actionType: \"Unblock\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Unblock member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Unblock member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fa717d4b-bce9-4df6-a8bc-f6add9e7e808","parentUUID":"2d02ba1b-96c4-4d99-9e3a-352848a44ec3","isHook":false,"skipped":false}],"suites":[],"passes":["fa717d4b-bce9-4df6-a8bc-f6add9e7e808"],"failures":[],"pending":[],"skipped":[],"duration":682,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c40a37bd-1b7b-4f1e-ac5b-01aef92e81d0","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.1 Create Event/8.01.1 createEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.1 Create Event/8.01.1 createEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bef5c240-2a81-43c7-ae91-1c602c30dd7f","title":"Create a calendar event successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create a calendar event or not","fullTitle":"Create a calendar event successfully with status code 200 Checking if should be able Create a calendar event or not","timedOut":null,"duration":826,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/calendar/event/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    title: \"create a new event\",\n    start: \"2024-07-15T04:34:00.000Z\",\n    end: \"2024-07-15T05:04:00.000Z\",\n    agenda: \"Ffff\",\n    description: \"Ffff\",\n    actionItems: \"Fff\",\n    followUp: \"Ffff\",\n    notifications: [{\n      timeBefore: \"5\",\n      methods: [\"push\"],\n      chatGroups: []\n    }, {\n      timeBefore: 15,\n      methods: [\"push\"],\n      chatGroups: []\n    }],\n    meetingLink: \"\",\n    eventColor: \"gray\",\n    eventType: \"reviewMeeting\",\n    attachments: [],\n    invitations: [\"6527902f122aa03f94d8576e\", \"64ef676669eaf6370c11429c\"],\n    isAllDay: false,\n    timeRange: {\n      disabledEditTimeRange: false,\n      turnOn: false,\n      repeatIteration: 1,\n      repeatPeriod: \"week\",\n      repeatDays: [1]\n    },\n    timeZone: \"Asia/Dhaka\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/eventId.json\", {\n      event_id: response.body.event._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create a calendar event Response:\", response.body);\n    console.log(\"Create a calendar event Response:\", response.body);\n  } else {\n    cy.log(\"Create a calendar event failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5cc49a18-c764-4c43-a6e3-f768454e3148","parentUUID":"bef5c240-2a81-43c7-ae91-1c602c30dd7f","isHook":false,"skipped":false}],"suites":[],"passes":["5cc49a18-c764-4c43-a6e3-f768454e3148"],"failures":[],"pending":[],"skipped":[],"duration":826,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0a7bcaa0-fbfa-4191-9419-05bcce83715a","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.2 Edit Event/8.01.2 editEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.2 Edit Event/8.01.2 editEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9e243213-b229-4891-986e-8ac082ae4921","title":"Update calender event successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update calender event or not","fullTitle":"Update calender event successfully with status code 200 Checking if should be able Update calender event or not","timedOut":null,"duration":649,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/update/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    title: \"Update event\",\n    start: \"2024-07-15T04:34:00.000Z\",\n    end: \"2024-07-15T05:04:00.000Z\",\n    agenda: \"Ffff\",\n    description: \"Ffff\",\n    actionItems: \"Fff\",\n    followUp: \"Ffff\",\n    notifications: [{\n      timeBefore: \"5\",\n      methods: [\"push\"],\n      chatGroups: []\n    }, {\n      timeBefore: 15,\n      methods: [\"push\"],\n      chatGroups: []\n    }],\n    meetingLink: \"\",\n    eventColor: \"gray\",\n    eventType: \"reviewMeeting\",\n    attachments: [],\n    invitations: [\"663eeccc2e9c740019d33425\", \"6633d94abac9199ca01635a4\"],\n    isAllDay: false,\n    timeRange: {\n      disabledEditTimeRange: false,\n      turnOn: false,\n      repeatIteration: 1,\n      repeatPeriod: \"week\",\n      repeatDays: [1]\n    },\n    timeZone: \"Asia/Dhaka\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update calender event Response:\", response.body);\n    console.log(\"Update calender event Response:\", response.body);\n  } else {\n    cy.log(\"Update calender event failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8129f7ca-c7fd-46d5-a892-5fb847dec6a1","parentUUID":"9e243213-b229-4891-986e-8ac082ae4921","isHook":false,"skipped":false}],"suites":[],"passes":["8129f7ca-c7fd-46d5-a892-5fb847dec6a1"],"failures":[],"pending":[],"skipped":[],"duration":649,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"91bd5b9c-f279-43cc-9d45-3444f27bb222","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.3 My Events/8.01.3 myEvents.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.3 My Events/8.01.3 myEvents.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b693721a-e073-4569-8bf6-2ec82f598ab4","title":"Get my events successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my events or not","fullTitle":"Get my events successfully with status code 200 Checking if should be able Get my events or not","timedOut":null,"duration":960,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/calendar/event/myevents\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my events Response:\", response.body);\n    console.log(\"Get my events Response:\", response.body);\n  } else {\n    cy.log(\"Get my events failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e38ba383-b949-40a2-b351-fe7fcd29b617","parentUUID":"b693721a-e073-4569-8bf6-2ec82f598ab4","isHook":false,"skipped":false}],"suites":[],"passes":["e38ba383-b949-40a2-b351-fe7fcd29b617"],"failures":[],"pending":[],"skipped":[],"duration":960,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"24677761-135f-42bc-95d3-0b02e610937e","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.4 Event Details/8.01.4 eventDetails.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.4 Event Details/8.01.4 eventDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8fd6f5d4-9679-4156-944a-5a4b1ff36153","title":"Get event details successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get event details or not","fullTitle":"Get event details successfully with status code 200 Checking if should be able Get event details or not","timedOut":null,"duration":627,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/calendar/event/details/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get event details Response:\", response.body);\n    console.log(\"Get event details Response:\", response.body);\n  } else {\n    cy.log(\"Get event details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4647e7f0-cd6a-4d1f-9d38-0e94db9a9bc1","parentUUID":"8fd6f5d4-9679-4156-944a-5a4b1ff36153","isHook":false,"skipped":false}],"suites":[],"passes":["4647e7f0-cd6a-4d1f-9d38-0e94db9a9bc1"],"failures":[],"pending":[],"skipped":[],"duration":627,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"68568128-f253-4b35-8e8d-dac117a8fb96","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.5 Delete Event/8.01.5 deleteEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.5 Delete Event/8.01.5 deleteEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"90398479-287c-4ea2-b0cc-fd11de8b9584","title":"Event delete successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Event delete or not","fullTitle":"Event delete successfully with status code 200 Checking if should be able Event delete or not","timedOut":null,"duration":637,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/calendar/event/delete/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Event delete Response:\", response.body);\n    console.log(\"Event delete Response:\", response.body);\n  } else {\n    cy.log(\"Event delete failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b86dec54-a290-49bc-a5e8-bc77471b85bc","parentUUID":"90398479-287c-4ea2-b0cc-fd11de8b9584","isHook":false,"skipped":false}],"suites":[],"passes":["b86dec54-a290-49bc-a5e8-bc77471b85bc"],"failures":[],"pending":[],"skipped":[],"duration":637,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c73800c7-dc04-487e-a609-2127227ef522","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.6 Event History/8.01.6 eventHistory.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.6 Event History/8.01.6 eventHistory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"732483b1-9872-4292-b6e9-d011ff1f4304","title":"Get event history successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get event history or not","fullTitle":"Get event history successfully with status code 200 Checking if should be able Get event history or not","timedOut":null,"duration":707,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/history/getHistory\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    itemId: eventId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get event history Response:\", response.body);\n    console.log(\"Get event history Response:\", response.body);\n  } else {\n    cy.log(\"Get event history failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b1ecc2e2-435d-417e-b072-c61a930e18c8","parentUUID":"732483b1-9872-4292-b6e9-d011ff1f4304","isHook":false,"skipped":false}],"suites":[],"passes":["b1ecc2e2-435d-417e-b072-c61a930e18c8"],"failures":[],"pending":[],"skipped":[],"duration":707,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4f8fbe46-53ec-4275-98f0-a2ff39283211","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.1 Add User/8.02.1 addUser.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.1 Add User/8.02.1 addUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0389d772-0154-4d28-9185-4f1d5ff9ced0","title":"Add invitation user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add invitation user or not","fullTitle":"Add invitation user successfully with status code 200 Checking if should be able Add invitation user or not","timedOut":null,"duration":680,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"add\",\n    user: \"650e70e7165fc20019352988\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Add invitation user Response:\", response.body);\n    console.log(\"Add invitation user Response:\", response.body);\n  } else {\n    cy.log(\"Add invitation user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"aa488aaa-4fea-4ff5-a20d-603493af45f5","parentUUID":"0389d772-0154-4d28-9185-4f1d5ff9ced0","isHook":false,"skipped":false}],"suites":[],"passes":["aa488aaa-4fea-4ff5-a20d-603493af45f5"],"failures":[],"pending":[],"skipped":[],"duration":680,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"12dfa5c2-3e4a-4ffd-98aa-308acc79c348","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.2 Remove User/8.02.2 removeUser.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.2 Remove User/8.02.2 removeUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b58ded86-2a28-4faf-8c2e-53dcb1df6765","title":"Remove invitation user successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Remove invitation user or not","fullTitle":"Remove invitation user successfully with status code 200 Checking if should be able Remove invitation user or not","timedOut":null,"duration":601,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"remove\",\n    user: \"650e70e7165fc20019352988\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove invitation user Response:\", response.body);\n    console.log(\"Remove invitation user Response:\", response.body);\n  } else {\n    cy.log(\"Remove invitation user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"89705971-e55e-4636-a515-2180c84e61e1","parentUUID":"b58ded86-2a28-4faf-8c2e-53dcb1df6765","isHook":false,"skipped":false}],"suites":[],"passes":["89705971-e55e-4636-a515-2180c84e61e1"],"failures":[],"pending":[],"skipped":[],"duration":601,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"363faf07-df94-4be2-9e9d-9b4f9d599767","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.3 Proposed New Event Time/8.02.3 proposedNewEventTime.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.3 Proposed New Event Time/8.02.3 proposedNewEventTime.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"218b37ed-657b-4de3-8aaf-608b7886f800","title":"Proposed new event time successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Proposed new event time or not","fullTitle":"Proposed new event time successfully with status code 200 Checking if should be able Proposed new event time or not","timedOut":null,"duration":661,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"status\",\n    status: \"proposedTime\",\n    participantId: \"674d62885889530019c2cb10\",\n    proposedTime: {\n      start: \"2024-12-05T07:30:59.535Z\",\n      end: \"2024-12-05T15:45:59.535Z\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Proposed new event time Response:\", response.body);\n    console.log(\"Proposed new event time Response:\", response.body);\n  } else {\n    cy.log(\"Proposed new event time failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5caac4ab-cd39-4275-8a85-ac3f17bcba2e","parentUUID":"218b37ed-657b-4de3-8aaf-608b7886f800","isHook":false,"skipped":false}],"suites":[],"passes":["5caac4ab-cd39-4275-8a85-ac3f17bcba2e"],"failures":[],"pending":[],"skipped":[],"duration":661,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"03d770c8-badb-4cde-9a87-dc9b40e873d4","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.4 Accept Invitaiton/8.02.4 acceptInvitation.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.4 Accept Invitaiton/8.02.4 acceptInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"65cd06ab-9f23-4bae-8532-b9e7495d26cc","title":"Accept invitation successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Accept invitation or not","fullTitle":"Accept invitation successfully with status code 200 Checking if should be able Accept invitation or not","timedOut":null,"duration":667,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"status\",\n    participantId: participantId,\n    status: \"accepted\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Accept invitation Response:\", response.body);\n    console.log(\"Accept invitation Response:\", response.body);\n  } else {\n    cy.log(\"Accept invitation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fcecb8cf-fb5e-43c7-af3c-4625421ffd74","parentUUID":"65cd06ab-9f23-4bae-8532-b9e7495d26cc","isHook":false,"skipped":false}],"suites":[],"passes":["fcecb8cf-fb5e-43c7-af3c-4625421ffd74"],"failures":[],"pending":[],"skipped":[],"duration":667,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"bb3dcf54-f406-49d7-9e38-cd196064cc40","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.5 Deny Invitation/8.02.5 denyInvitation.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.5 Deny Invitation/8.02.5 denyInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e4186a24-07f2-492e-bcce-ca7094f9dd23","title":"Denied invitation successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Denied invitation or not","fullTitle":"Denied invitation successfully with status code 200 Checking if should be able Denied invitation or not","timedOut":null,"duration":804,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"status\",\n    participantId: participantId,\n    status: \"denied\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Denied invitation Response:\", response.body);\n    console.log(\"Denied invitation Response:\", response.body);\n  } else {\n    cy.log(\"Denied invitation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8f5e4f2b-02b6-484c-bc07-93498f70f00a","parentUUID":"e4186a24-07f2-492e-bcce-ca7094f9dd23","isHook":false,"skipped":false}],"suites":[],"passes":["8f5e4f2b-02b6-484c-bc07-93498f70f00a"],"failures":[],"pending":[],"skipped":[],"duration":804,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"69aaa873-1707-4e75-afab-1bf938b07771","title":"","fullFile":"cypress/e2e/08. Calendar Service/03. Calendar Config/01. Holidays/8.03.1 holidays.cy.js","file":"cypress/e2e/08. Calendar Service/03. Calendar Config/01. Holidays/8.03.1 holidays.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ad43085d-0636-4c00-a75f-16a42560fcde","title":"Calender config holidays successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Calender config holidays or not","fullTitle":"Calender config holidays successfully with status code 200 Checking if should be able Calender config holidays or not","timedOut":null,"duration":659,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/calendar/config/type/${type}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Calender config holidays Response:\", response.body);\n    console.log(\"Calender config holidays Response:\", response.body);\n  } else {\n    cy.log(\"Calender config holidays failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7a3e60c1-5f1c-452a-a708-1e52da4db809","parentUUID":"ad43085d-0636-4c00-a75f-16a42560fcde","isHook":false,"skipped":false}],"suites":[],"passes":["7a3e60c1-5f1c-452a-a708-1e52da4db809"],"failures":[],"pending":[],"skipped":[],"duration":659,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ef6ac515-b642-43f8-8b12-0bfd1d578f26","title":"","fullFile":"cypress/e2e/08. Calendar Service/03. Calendar Config/02. Weekends/8.03.2 weekends.cy.js","file":"cypress/e2e/08. Calendar Service/03. Calendar Config/02. Weekends/8.03.2 weekends.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"46b2366f-864f-4a81-960c-9565644db6ff","title":"Calender config weekends successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Calender config weekends or not","fullTitle":"Calender config weekends successfully with status code 200 Checking if should be able Calender config weekends or not","timedOut":null,"duration":756,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/calendar/config/type/${type}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Calender config weekends Response:\", response.body);\n    console.log(\"Calender config weekends Response:\", response.body);\n  } else {\n    cy.log(\"Calender config weekends failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"0dedf7a1-cc95-4e06-a987-a5746b75fcf0","parentUUID":"46b2366f-864f-4a81-960c-9565644db6ff","isHook":false,"skipped":false}],"suites":[],"passes":["0dedf7a1-cc95-4e06-a987-a5746b75fcf0"],"failures":[],"pending":[],"skipped":[],"duration":756,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"dbd0b903-8356-42a7-8d5f-cdf0ad13fec5","title":"","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.1 Get All Schedule/8.04.1 getAllSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.1 Get All Schedule/8.04.1 getAllSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"438c5451-dd4e-46cc-aad3-6584dbb6a8dd","title":"Get all availability schedule successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all availability schedule or not","fullTitle":"Get all availability schedule successfully with status code 200 Checking if should be able Get all availability schedule or not","timedOut":null,"duration":510,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/calendar/schedule/all\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all availability schedule Response:\", response.body);\n    console.log(\"Get all availability schedule Response:\", response.body);\n  } else {\n    cy.log(\"Get all availability schedule failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1a555496-7f21-4dc0-9ca2-856a9c136eb6","parentUUID":"438c5451-dd4e-46cc-aad3-6584dbb6a8dd","isHook":false,"skipped":false}],"suites":[],"passes":["1a555496-7f21-4dc0-9ca2-856a9c136eb6"],"failures":[],"pending":[],"skipped":[],"duration":510,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ca928e31-db28-4fe3-a7a9-3bb91c34d40d","title":"","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.2 Find Schedule/8.04.2 findSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.2 Find Schedule/8.04.2 findSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5655c977-adce-44d9-bf99-70c5bbee359e","title":"Find user availability schedule successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Find user availability schedule or not","fullTitle":"Find user availability schedule successfully with status code 200 Checking if should be able Find user availability schedule or not","timedOut":null,"duration":543,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/calendar/schedule/find/${user_id}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Find user availability schedule Response:\", response.body);\n    console.log(\"Find user availability schedule Response:\", response.body);\n  } else {\n    cy.log(\"Find user availability schedule failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"42ad909f-5488-43cd-8758-a3028ac41abd","parentUUID":"5655c977-adce-44d9-bf99-70c5bbee359e","isHook":false,"skipped":false}],"suites":[],"passes":["42ad909f-5488-43cd-8758-a3028ac41abd"],"failures":[],"pending":[],"skipped":[],"duration":543,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4afb4e81-6bd4-4a4e-8f21-32de10f211e0","title":"","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.3 Update Schedule/8.04.3 updateSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.3 Update Schedule/8.04.3 updateSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"eb022b0f-bc92-4fb7-8119-423a358cefc2","title":"Update availability schedule successfully with status code 200","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update availability schedule or not","fullTitle":"Update availability schedule successfully with status code 200 Checking if should be able Update availability schedule or not","timedOut":null,"duration":585,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/schedule/update/${scheduleId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    availability: [{\n      _id: \"658b2e0f0e8b2153646d05bc\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"afb05a2be5ee3e2490d9b7fc\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }],\n      wday: \"monday\"\n    }, {\n      _id: \"658bf962f89a3a7314b913fb\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"56cf6f89fc420b7fc338a311\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }, {\n        _id: \"86c2a8e4e52f361c8ae7d9b0\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }],\n      wday: \"tuesday\"\n    }, {\n      _id: \"658bf962f89a3a7314b913ff\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"6665390cd456da0019e7c49f\",\n        from: \"09:00\",\n        to: \"17:00\"\n      }],\n      wday: \"wednesday\"\n    }, {\n      _id: \"658bf962f89a3a7314b91403\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"6665390cd456da0019e7c49f\",\n        from: \"20:00\",\n        to: \"17:00\"\n      }],\n      wday: \"thursday\"\n    }, {\n      _id: \"658bf962f89a3a7314b91407\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"fc95e353f3852ce30e59161e\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }, {\n        _id: \"56cf6f89fc420b7fc338a311\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }],\n      wday: \"friday\"\n    }, {\n      _id: \"66a4aa543102ed0019b4eaee\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"66a4aa543102ed0019b4eaef\",\n        from: \"09:00\",\n        to: \"15:00\"\n      }],\n      wday: \"saturday\"\n    }],\n    name: \"Ashik’s Time\",\n    timeZone: \"Asia/Dhaka\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update availability schedule Response:\", response.body);\n    console.log(\"Update availability schedule Response:\", response.body);\n  } else {\n    cy.log(\"Update availability schedule failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"14bb4344-1c6d-4d9c-a05a-c32bf476ab99","parentUUID":"eb022b0f-bc92-4fb7-8119-423a358cefc2","isHook":false,"skipped":false}],"suites":[],"passes":["14bb4344-1c6d-4d9c-a05a-c32bf476ab99"],"failures":[],"pending":[],"skipped":[],"duration":585,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a427135c-9e8a-4f59-8259-c2605ac2a544","title":"","fullFile":"cypress/e2e/01. User Service/02. Update Image/1.02.1 updateImage.cy.js","file":"cypress/e2e/01. User Service/02. Update Image/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b3f52798-9ca0-448f-b29b-d70073eaca46","title":"Update Profile Picture API","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":1950,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"24c65de8-6cb2-4d4e-a7b6-7cbfe59bd385","parentUUID":"b3f52798-9ca0-448f-b29b-d70073eaca46","isHook":false,"skipped":false}],"suites":[],"passes":["24c65de8-6cb2-4d4e-a7b6-7cbfe59bd385"],"failures":[],"pending":[],"skipped":[],"duration":1950,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
baseFolder: cypress/e2e
attach media for test "Update user successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Remove push token successfully with status code 200 Checking if the remove push token or not"
no context
attach media for test "sync push token successfully with status code 200 Checking if the sync up push token or not"
no context
attach media for test "User filtering successfully with status code 200 Checking if should be able user filter or not"
no context
attach media for test "Send family invite successfully with status code 200 Checking if should be able to send family invite or not"
no context
attach media for test "Update User Status successfully with status code 200 Checking if should be able update user status or not"
no context
attach media for test "Get my templates successfully with status code 200 Checking if should be able to Get my templates or not"
no context
attach media for test "Get my family invitations successfully with status code 200 Checking if should be able to get my family invitations or not"
no context
attach media for test "Get online users successfully with status code 200 Checking if should be able to Get online users or not"
no context
attach media for test "Create community post comment successfully with status code 200 Checking if should be able Create community post comment or not"
no context
attach media for test "Reply community post successfully with status code 200 Checking if should be able Reply community post or not"
no context
attach media for test "Update community post comment successfully with status code 200 Checking if should be able Update community post comment or not"
no context
attach media for test "Get community comment successfully with status code 200 Checking if should be able Get community comment or not"
no context
attach media for test "Get community comment reply successfully with status code 200 Checking if should be able Get community comment reply or not"
no context
attach media for test "Delete community post comment successfully with status code 200 Checking if should be able Delete community post comment or not"
no context
attach media for test "Get user organization successfully with status code 200 Checking if should be able get user organization or not"
no context
attach media for test "Get Company Details successfully with status code 200 Checking if should be able get Company Details or not"
no context
attach media for test "Generate Text successfully with status code 200 Checking if should be able generate text or not"
no context
attach media for test "Get my media successfully with status code 200 Checking if should be able Get my media or not"
no context
attach media for test "Upload video and audio with status code 200 Should successfully update the audio and video"
no context
attach media for test "Get my navigation successfully with status code 200 Checking if should be able get my navigation or not"
no context
attach media for test "Upload user document file with status code 200 Should successfully upload user document file"
no context
attach media for test "Get user documents successfully with status code 200 Checking if should be able to Get user documents or not"
no context
attach media for test "Add user document successfully with status code 200 Checking if should be able to Add user document or not"
no context
attach media for test "Update user document successfully with status code 200 Checking if should be able to Update user document or not"
no context
attach media for test "Get my diagrams successfully with status code 200 Checking if should be able to Get my diagrams or not"
no context
attach media for test "Get portal documents successfully with status code 200 Checking if should be able to Get portal documents or not"
no context
attach media for test "Terms and Conditions successfully with status code 200 Checking if should be able to Terms and Conditions or not"
no context
attach media for test "My all chats with status code 200 Checking if should be able get my all chats or not"
no context
attach media for test "Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not"
no context
attach media for test "Search Users successfully with status code 200 Checking if should be able Search Users or not"
no context
attach media for test "Get thread messages successfully with status code 200 Checking if should be able Get thread messages or not"
no context
attach media for test "Upload chat file with status code 200 Should successfully update the audio and video"
no context
attach media for test "Get all notification successfully with status code 200 Checking if should be able Get all notification or not"
no context
attach media for test "Mark notification as Read successfully with status code 200 Checking if should be able Mark notification as Read or not"
no context
attach media for test "Mark all notification as read successfully with status code 200 Checking if should be able Mark all notification as read or not"
no context
attach media for test "Get active notification successfully with status code 200 Checking if should be able Get active notification or not"
no context
attach media for test "Get notification preference successfully with status code 200 Checking if should be able to Get notification preference or not"
no context
attach media for test "Update notification preference successfully with status code 200 Checking if should be able to Get notification preference or not"
no context
attach media for test "Get my transaction successfully with status code 200 Checking if should be able Get my transaction or not"
no context
attach media for test "Add user transaction successfully with status code 200 Checking if should be able Add user transaction or not"
no context
attach media for test "Add payment to order successfully with status code 200 Checking if should be able Add payment to order or not"
no context
attach media for test "Get order details successfully with status code 200 Checking if should be able Get order details or not"
no context
attach media for test "Get my progress successfully with status code 200 Checking if should be able Get my progress or not"
no context
attach media for test "Get my progress successfully with status code 200 Checking if should be able Get my progress or not"
no context
attach media for test "Get my assignments successfully with status code 200 Checking if should be able Get my assignments or not"
no context
attach media for test "Search my assignment successfully with status code 200 Checking if should be able Search my assignment or not"
no context
attach media for test "Get enrollment test successfully with status code 200 Checking if should be able Get enrollment test or not"
no context
attach media for test "Get my order course successfully with status code 200 Checking if should be able Get my order course or not"
no context
attach media for test "Get dashboard data successfully with status code 200 Checking if should be able Get dashboard data or not"
no context
attach media for test "Get leaderboard data successfully with status code 200 Checking if should be able Get leaderboard data or not"
no context
attach media for test "Get test question successfully with status code 200 Checking if should be able to Get test question or not"
no context
attach media for test "Submit test answer successfully with status code 200 Checking if should be able to Submit test answer or not"
no context
attach media for test "Register user to the portal with valid credential and get stats code 200 Checking if should be able to register user or not"
no context
attach media for test "Login to the portal with valid credential and get stats code 200 Checking if should be able to login user"
no context
attach media for test "Verify user successfully with status code 200 Checking if should be able to verify user"
no context
attach media for test "Send OTP to email successfully with status code 200 Checking if should be able to send OTP to email"
no context
attach media for test "Verify OTP with status code 200 should be able to verify"
no context
attach media for test "Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not"
no context
attach media for test "Reset my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Change my password successfully with status code 200 Checking if the user can reset their password or not"
no context
attach media for test "Get my slides successfully with status code 200 Checking if should be able to Get my slides or not"
no context
attach media for test "Get single slide successfully with status code 200 Checking if should be able to Get single slide or not"
no context
attach media for test "Get course content by category successfully with status code 200 Checking if should be able get course data or not"
no context
attach media for test "Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not"
no context
attach media for test "Get all community post successfully with status code 200 Checking if should be able get all community post or not"
no context
attach media for test "Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not"
no context
attach media for test "Create community post successfully with status code 200 Checking if should be able create community post or not"
no context
attach media for test "Get single community post successfully with status code 200 Checking if should be able get single community post or not"
no context
attach media for test "Edit community post successfully with status code 200 Checking if should be able Edit community post or not"
no context
attach media for test "Save community post successfully with status code 200 Checking if should be able Save community post or not"
no context
attach media for test "Community post reaction successfully with status code 200 Checking if should be able Community post reaction or not"
no context
attach media for test "Report community post successfully with status code 200 Checking if should be able Report community post or not"
no context
attach media for test "Get Community top contribute successfully with status code 200 Checking if should be able Get Community top contribute or not"
no context
attach media for test "Delete community post successfully with status code 200 Checking if should be able Delete community post or not"
no context
attach media for test "Get all programs successfully with status code 200 Checking if should be able Get all programs or not"
no context
attach media for test "Get all Courses successfully with status code 200 Checking if should be able Get all Courses or not"
no context
attach media for test "Get course content successfully with status code 200 Checking if should be able Get course content or not"
no context
attach media for test "Get single bootcamps details successfully with status code 200 Checking if should be able Get single bootcamps details or not"
no context
attach media for test "Get course details successfully with status code 200 Checking if should be able Get course details or not"
no context
attach media for test "Get course roadmap data successfully with status code 200 Checking if should be able Get course roadmap data or not"
no context
attach media for test "Get reviews categories successfully with status code 200 Checking if should be able Get reviews categories or not"
no context
attach media for test "Get student reviews course successfully with status code 200 Checking if should be able get Get student reviews course or not"
no context
attach media for test "Get chapter by category successfully with status code 200 Checking if should be able Get chapter by category or not"
no context
attach media for test "Get preview chapter successfully with status code 200 Checking if should be able Get preview chapter or not"
no context
attach media for test "Get preview chapter by category successfully with status code 200 Checking if should be able Get preview chapter by category or not"
no context
attach media for test "Get my workshop successfully with status code 200 Checking if should be able Get my workshop or not"
no context
attach media for test "Get my labs successfully with status code 200 Checking if should be able Get my labs or not"
no context
attach media for test "Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not"
no context
attach media for test "Create show n tell successfully with status code 200 Checking if should be able Create show n tell or not"
no context
attach media for test "Update show n tell successfully with status code 200 Checking if should be able Update show n tell or not"
no context
attach media for test "Get my show n tell successfully with status code 200 Checking if should be able Get my show n tell or not"
no context
attach media for test "Delete show n tell successfully with status code 200 Checking if should be able Delete show n tell or not"
no context
attach media for test "Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not"
no context
attach media for test "Submit interview answer successfully with status code 200 Checking if should be able Submit interview answer or not"
no context
attach media for test "Submit final submission successfully with status code 200 Checking if should be able Submit final submission or not"
no context
attach media for test "Get interview question successfully with status code 200 Checking if should be able Get interview question or not"
no context
attach media for test "Post interview comment successfully with status code 200 Checking if should be able Post interview comment or not"
no context
attach media for test "Share interview successfully with status code 200 Checking if should be able Share interview or not"
no context
attach media for test "Create activity successfully with status code 200 Checking if should be able Create activity or not"
no context
attach media for test "Update Activity successfully with status code 200 Checking if should be able Update Activity or not"
no context
attach media for test "Day to day activities successfully with status code 200 Checking if should be able Day to day activities or not"
no context
attach media for test "Get my issues successfully with status code 200 Checking if should be able to get my issues or not"
no context
attach media for test "Create my issue post successfully with status code 200 Checking if should be able to Create my issue post or not"
no context
attach media for test "Send chat message with status code 200 Checking if should be able Send chat message or not"
no context
attach media for test "Update chat message with status code 200 Checking if should be able Update chat message or not"
no context
attach media for test "Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not"
no context
attach media for test "Fetch chat image with status code 200 Checking if should be able Fetch chat image or not"
no context
attach media for test "Emoji reaction toggle with status code 200 Checking if should be able Emoji reaction toggle or not"
no context
attach media for test "Fetch chat image with status code 200 Checking if should be able Fetch chat image or not"
no context
attach media for test "Update message status with status code 200 Checking if should be able Update message status or not"
no context
attach media for test "Delete chat message with status code 200 Checking if should be able Delete chat message or not"
no context
attach media for test "Pin or Unpin message successfully with status code 200 Checking if should be able Pin or Unpin message or not"
no context
attach media for test "Get thread messages successfully with status code 200 Checking if should be able Get thread messages or not"
no context
attach media for test "Favorite or unfavorite chat with status code 200 Checking if should be able Favorite or unfavorite chat or not"
no context
attach media for test "Create crowd with status code 200 Checking if should be able Create crowd or not"
no context
attach media for test "Add user to crowd with status code 200 Checking if should be able Add user to crowd or not"
no context
attach media for test "Update crowd avatar with status code 200 Checking if should be able Update crowd avatar or not"
no context
attach media for test "Update crowd details with status code 200 Checking if should be able Update crowd details or not"
no context
attach media for test "Get crowd members with status code 200 Checking if should be able Get crowd members or not"
no context
attach media for test "Search chat members with status code 200 Checking if should be able Search chat members or not"
no context
attach media for test "Remove member from crowd with status code 200 Checking if should be able Remove member from crowd or not"
no context
attach media for test "Leave from crowd with status code 200 Checking if should be able Leave from crowd or not"
no context
attach media for test "Update member role with status code 200 Checking if should be able Update member role or not"
no context
attach media for test "Mute member from crowd with status code 200 Checking if should be able Mute member from crowd or not"
no context
attach media for test "Unmute member from crowd with status code 200 Checking if should be able Unmute member from crowd or not"
no context
attach media for test "Block member from crowd with status code 200 Checking if should be able Block member from crowd or not"
no context
attach media for test "Unblock member from crowd with status code 200 Checking if should be able Unblock member from crowd or not"
no context
attach media for test "Create a calendar event successfully with status code 200 Checking if should be able Create a calendar event or not"
no context
attach media for test "Update calender event successfully with status code 200 Checking if should be able Update calender event or not"
no context
attach media for test "Get my events successfully with status code 200 Checking if should be able Get my events or not"
no context
attach media for test "Get event details successfully with status code 200 Checking if should be able Get event details or not"
no context
attach media for test "Event delete successfully with status code 200 Checking if should be able Event delete or not"
no context
attach media for test "Get event history successfully with status code 200 Checking if should be able Get event history or not"
no context
attach media for test "Add invitation user successfully with status code 200 Checking if should be able Add invitation user or not"
no context
attach media for test "Remove invitation user successfully with status code 200 Checking if should be able Remove invitation user or not"
no context
attach media for test "Proposed new event time successfully with status code 200 Checking if should be able Proposed new event time or not"
no context
attach media for test "Accept invitation successfully with status code 200 Checking if should be able Accept invitation or not"
no context
attach media for test "Denied invitation successfully with status code 200 Checking if should be able Denied invitation or not"
no context
attach media for test "Calender config holidays successfully with status code 200 Checking if should be able Calender config holidays or not"
no context
attach media for test "Calender config weekends successfully with status code 200 Checking if should be able Calender config weekends or not"
no context
attach media for test "Get all availability schedule successfully with status code 200 Checking if should be able Get all availability schedule or not"
no context
attach media for test "Find user availability schedule successfully with status code 200 Checking if should be able Find user availability schedule or not"
no context
attach media for test "Update availability schedule successfully with status code 200 Checking if should be able Update availability schedule or not"
no context
attach media for test "Update Profile Picture API Should successfully update the profile picture"
no context
report after enhance: {"stats":{"suites":145,"tests":145,"passes":140,"pending":5,"failures":0,"testsRegistered":145,"passPercent":96.55172413793103,"pendingPercent":3.4482758620689653,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false,"start":"2024-12-24T10:41:01.345Z","end":"2024-12-24T10:52:05.955Z","duration":664610},"results":[{"uuid":"612f7453-c462-4f31-9376-9101a0f72e4a","title":"","fullFile":"cypress/e2e/01. User Service/03. Update User/1.03.1 updateUser.cy.js","file":"cypress/e2e/01. User Service/03. Update User/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"de3d7ba5-6376-4abe-a14e-c05378932f2b","title":"Update user successfully with status code 200","fullFile":"cypress/e2e/01. User Service/03. Update User/1.03.1 updateUser.cy.js","file":"cypress/e2e/01. User Service/03. Update User/1.03.1 updateUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Update user successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":537,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    firstName: \"Md\",\n    lastName: \"Shimul\",\n    about: \"Nothing\",\n    personalData: {\n      address: {\n        street: \"\",\n        city: \"Dhaka\",\n        postalCode: \"1216\",\n        state: \"Dhaka\",\n        country: \"Bangladesh\"\n      },\n      socialMedia: {\n        facebook: \"\",\n        github: \"\",\n        instagram: \"\",\n        linkedin: \"\",\n        twitter: \"\"\n      },\n      resume: \"\",\n      bio: \"Don't have bio\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"648bd45c-6042-4c79-a12a-559f5bf56d90","parentUUID":"de3d7ba5-6376-4abe-a14e-c05378932f2b","isHook":false,"skipped":false}],"suites":[],"passes":["648bd45c-6042-4c79-a12a-559f5bf56d90"],"failures":[],"pending":[],"skipped":[],"duration":537,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6c3a436e-7b64-4c59-b38c-5640f33e9577","title":"","fullFile":"cypress/e2e/01. User Service/05. Remove Push Token/1.05.1 removePushToken.cy.js","file":"cypress/e2e/01. User Service/05. Remove Push Token/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"808a2ed2-fbb5-4f81-b2b2-191fd039ad9c","title":"Remove push token successfully with status code 200","fullFile":"cypress/e2e/01. User Service/05. Remove Push Token/1.05.1 removePushToken.cy.js","file":"cypress/e2e/01. User Service/05. Remove Push Token/1.05.1 removePushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the remove push token or not","fullTitle":"Remove push token successfully with status code 200 Checking if the remove push token or not","timedOut":null,"duration":524,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/remove-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    token: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove push token Response:\", response.body);\n    console.log(\"Remove push token Response:\", response.body);\n  } else {\n    cy.log(\"Remove push token failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"69319f9f-19c6-433c-b30a-7b282a2a010c","parentUUID":"808a2ed2-fbb5-4f81-b2b2-191fd039ad9c","isHook":false,"skipped":false}],"suites":[],"passes":["69319f9f-19c6-433c-b30a-7b282a2a010c"],"failures":[],"pending":[],"skipped":[],"duration":524,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e886a205-75d2-452b-8e84-824103bbbef8","title":"","fullFile":"cypress/e2e/01. User Service/04. Sync Push Token/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/01. User Service/04. Sync Push Token/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"26de07ce-c31f-4ed4-a1ae-31572a139891","title":"sync push token successfully with status code 200","fullFile":"cypress/e2e/01. User Service/04. Sync Push Token/1.04.1 syncPushToken.cy.js","file":"cypress/e2e/01. User Service/04. Sync Push Token/1.04.1 syncPushToken.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the sync up push token or not","fullTitle":"sync push token successfully with status code 200 Checking if the sync up push token or not","timedOut":null,"duration":478,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sync-pushtoken\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    pushToken: \"user\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7b857840-a1a0-4b37-a9e2-70bd61e22710","parentUUID":"26de07ce-c31f-4ed4-a1ae-31572a139891","isHook":false,"skipped":false}],"suites":[],"passes":["7b857840-a1a0-4b37-a9e2-70bd61e22710"],"failures":[],"pending":[],"skipped":[],"duration":478,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a49637e5-6f5b-44a6-8377-6a0f03eca987","title":"","fullFile":"cypress/e2e/01. User Service/06. Filter User/1.06.1 FilterUser.cy.js","file":"cypress/e2e/01. User Service/06. Filter User/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f4560749-4a82-49c5-8678-a8cb4ad56e65","title":"User filtering successfully with status code 200","fullFile":"cypress/e2e/01. User Service/06. Filter User/1.06.1 FilterUser.cy.js","file":"cypress/e2e/01. User Service/06. Filter User/1.06.1 FilterUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able user filter or not","fullTitle":"User filtering successfully with status code 200 Checking if should be able user filter or not","timedOut":null,"duration":493,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/filter\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    program: \"\",\n    session: \"\",\n    query: \"anonno\",\n    global: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User filter Response:\", response.body);\n    console.log(\"User filter Response:\", response.body);\n  } else {\n    cy.log(\"User filtering failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c79017c5-b9d4-43a2-9a10-7450963c5fee","parentUUID":"f4560749-4a82-49c5-8678-a8cb4ad56e65","isHook":false,"skipped":false}],"suites":[],"passes":["c79017c5-b9d4-43a2-9a10-7450963c5fee"],"failures":[],"pending":[],"skipped":[],"duration":493,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f3a89c58-e281-419d-89a8-14fa22fe5888","title":"","fullFile":"cypress/e2e/01. User Service/08. Family Invite/01.08.01 familyInvite.cy.js","file":"cypress/e2e/01. User Service/08. Family Invite/01.08.01 familyInvite.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"361d4368-2c24-4c33-a4f5-1b55b78c1070","title":"Send family invite successfully with status code 200","fullFile":"cypress/e2e/01. User Service/08. Family Invite/01.08.01 familyInvite.cy.js","file":"cypress/e2e/01. User Service/08. Family Invite/01.08.01 familyInvite.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to send family invite or not","fullTitle":"Send family invite successfully with status code 200 Checking if should be able to send family invite or not","timedOut":null,"duration":735,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/family/invite\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    name: faker.person.fullName(),\n    email: faker.internet.email(),\n    relation: \"Brother\",\n    image: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Invite sent successfully\");\n    console.log(\"Invite sent successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Invite sent failed with status code:\", response.status);\n    console.log(`Invite sent failed with status code ${response.status}`);\n    cy.log(`Invite sent failed  ${response.body.error}`);\n    console.log(`Invite sent failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"8f2a9c08-5cb6-4c2b-a6d6-545a76687cce","parentUUID":"361d4368-2c24-4c33-a4f5-1b55b78c1070","isHook":false,"skipped":false}],"suites":[],"passes":["8f2a9c08-5cb6-4c2b-a6d6-545a76687cce"],"failures":[],"pending":[],"skipped":[],"duration":735,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"eb96c60f-441f-404f-a116-e64d662161e4","title":"","fullFile":"cypress/e2e/01. User Service/07. Update User Status/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/01. User Service/07. Update User Status/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d4fc9afa-125c-41e1-866d-627757ba5818","title":"Update User Status successfully with status code 200","fullFile":"cypress/e2e/01. User Service/07. Update User Status/1.07.1 updateUserStatus.cy.js","file":"cypress/e2e/01. User Service/07. Update User Status/1.07.1 updateUserStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able update user status or not","fullTitle":"Update User Status successfully with status code 200 Checking if should be able update user status or not","timedOut":null,"duration":584,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/updateuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    profileStatus: {\n      currentStatus: \"Busy Nai\",\n      recurring: {\n        isDailyRecurring: true,\n        fromTime: \"09:01 AM\",\n        toTime: \"05:00 PM\"\n      }\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"User status Response:\", response.body);\n    console.log(\"User status Response:\", response.body);\n  } else {\n    cy.log(\"Update user status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"968ad54d-093d-4613-b10d-535f6353d642","parentUUID":"d4fc9afa-125c-41e1-866d-627757ba5818","isHook":false,"skipped":false}],"suites":[],"passes":["968ad54d-093d-4613-b10d-535f6353d642"],"failures":[],"pending":[],"skipped":[],"duration":584,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f40cefca-1bba-4ba0-b1b7-70ba07fd8515","title":"","fullFile":"cypress/e2e/01. User Service/10. My Templates/01.10.01 myTemplates.cy.js","file":"cypress/e2e/01. User Service/10. My Templates/01.10.01 myTemplates.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"204b9c35-ce70-4c51-b2c8-5d838ccde0c9","title":"Get my templates successfully with status code 200","fullFile":"cypress/e2e/01. User Service/10. My Templates/01.10.01 myTemplates.cy.js","file":"cypress/e2e/01. User Service/10. My Templates/01.10.01 myTemplates.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get my templates or not","fullTitle":"Get my templates successfully with status code 200 Checking if should be able to Get my templates or not","timedOut":null,"duration":822,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/template/mytemplates\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get my templates successfully\");\n    console.log(\"Get my templates successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get my templates failed with status code:\", response.status);\n    console.log(`Get my templates failed with status code ${response.status}`);\n    cy.log(`Get my templates failed  ${response.body.error}`);\n    console.log(`Get my templates failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"29d24bc1-a589-4fae-b22c-e7a4a39624e4","parentUUID":"204b9c35-ce70-4c51-b2c8-5d838ccde0c9","isHook":false,"skipped":false}],"suites":[],"passes":["29d24bc1-a589-4fae-b22c-e7a4a39624e4"],"failures":[],"pending":[],"skipped":[],"duration":822,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0513ad28-02a0-4576-af86-fc961b942463","title":"","fullFile":"cypress/e2e/01. User Service/09. My Family Invitation/01.08.01 myFamilyInvitation.cy.js","file":"cypress/e2e/01. User Service/09. My Family Invitation/01.08.01 myFamilyInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3f5371c6-28e4-4346-9be8-3d34d603ae8e","title":"Get my family invitations successfully with status code 200","fullFile":"cypress/e2e/01. User Service/09. My Family Invitation/01.08.01 myFamilyInvitation.cy.js","file":"cypress/e2e/01. User Service/09. My Family Invitation/01.08.01 myFamilyInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to get my family invitations or not","fullTitle":"Get my family invitations successfully with status code 200 Checking if should be able to get my family invitations or not","timedOut":null,"duration":908,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/family/myinvitations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get invitations successfully\");\n    console.log(\"Get invitations successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get invitations failed with status code:\", response.status);\n    console.log(`Get invitations failed with status code ${response.status}`);\n    cy.log(`Get invitations failed  ${response.body.error}`);\n    console.log(`Get invitations failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"cb3797b0-67dc-43f5-9b3b-08a756d2eb25","parentUUID":"3f5371c6-28e4-4346-9be8-3d34d603ae8e","isHook":false,"skipped":false}],"suites":[],"passes":["cb3797b0-67dc-43f5-9b3b-08a756d2eb25"],"failures":[],"pending":[],"skipped":[],"duration":908,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4be86620-7570-46e7-8231-98ac847fb41d","title":"","fullFile":"cypress/e2e/01. User Service/12. Online Users/01.12.01 getOnlineUsers.cy.js","file":"cypress/e2e/01. User Service/12. Online Users/01.12.01 getOnlineUsers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2fc75f60-cf4c-4a8d-8163-4d3ca9d753dd","title":"Get online users successfully with status code 200","fullFile":"cypress/e2e/01. User Service/12. Online Users/01.12.01 getOnlineUsers.cy.js","file":"cypress/e2e/01. User Service/12. Online Users/01.12.01 getOnlineUsers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get online users or not","fullTitle":"Get online users successfully with status code 200 Checking if should be able to Get online users or not","timedOut":null,"duration":536,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/user/online\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get online users successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get online users failed with status code:\", response.status);\n    cy.log(`Get online users failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"7f93f674-6afe-4e59-af79-9d1e797a5970","parentUUID":"2fc75f60-cf4c-4a8d-8163-4d3ca9d753dd","isHook":false,"skipped":false}],"suites":[],"passes":["7f93f674-6afe-4e59-af79-9d1e797a5970"],"failures":[],"pending":[],"skipped":[],"duration":536,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7172c9e5-845b-4c07-8879-436e2e060264","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.1 createComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.1 createComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"05c7d1c9-9322-4cf7-98e2-2094e5bc0dff","title":"Create community post comment successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.1 createComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.1 createComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create community post comment or not","fullTitle":"Create community post comment successfully with status code 200 Checking if should be able Create community post comment or not","timedOut":null,"duration":806,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/comment/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    comment: \"Nice work bro 3\",\n    contentId: \"673905dc92731d9ad8c78e37\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 201) {\n    const {\n      comment\n    } = response.body;\n    cy.writeFile(\"cypress/fixtures/deleteCommentId.json\", {\n      commentId: comment._id\n    });\n    // Assertions\n    expect(response.status).to.eq(201);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post comment Response:\", response.body);\n    console.log(\"Create community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Create community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a16cba9f-0c43-4f2b-9de1-e88492996d13","parentUUID":"05c7d1c9-9322-4cf7-98e2-2094e5bc0dff","isHook":false,"skipped":false}],"suites":[],"passes":["a16cba9f-0c43-4f2b-9de1-e88492996d13"],"failures":[],"pending":[],"skipped":[],"duration":806,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"42f2eed0-6902-4d4a-afc9-cf50c24ffd5f","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.2 replyComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.2 replyComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0a092b9d-e879-4e7b-9c9b-14eca03fd3fe","title":"Reply community post successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.2 replyComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.2 replyComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Reply community post or not","fullTitle":"Reply community post successfully with status code 200 Checking if should be able Reply community post or not","timedOut":null,"duration":930,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/comment/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    contentId: \"673905dc92731d9ad8c78e37\",\n    comment: \"Thank you\",\n    parentId: \"674835d5b419790019bb0f5a\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Reply community post Response:\", response.body);\n    console.log(\"Reply community post Response:\", response.body);\n  } else {\n    cy.log(\"Reply community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"26021645-86dc-45ca-89a5-661728e20952","parentUUID":"0a092b9d-e879-4e7b-9c9b-14eca03fd3fe","isHook":false,"skipped":false}],"suites":[],"passes":["26021645-86dc-45ca-89a5-661728e20952"],"failures":[],"pending":[],"skipped":[],"duration":930,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c117d12f-6394-40c4-96be-336c9521ecb4","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.3 updateComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.3 updateComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bef41bb6-969d-4105-8931-b89b416115ec","title":"Update community post comment successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.3 updateComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.3 updateComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update community post comment or not","fullTitle":"Update community post comment successfully with status code 200 Checking if should be able Update community post comment or not","timedOut":null,"duration":1029,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/content/comment/update/674835d5b419790019bb0f5a`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    comment: \"Updated comment again\",\n    contentId: \"673905dc92731d9ad8c78e37\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update community post comment Response:\", response.body);\n    console.log(\"Update community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Update community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"413a0ce8-3202-437b-b685-17ac298bb0c8","parentUUID":"bef41bb6-969d-4105-8931-b89b416115ec","isHook":false,"skipped":false}],"suites":[],"passes":["413a0ce8-3202-437b-b685-17ac298bb0c8"],"failures":[],"pending":[],"skipped":[],"duration":1029,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0bf0eab8-e219-4bb3-bc91-27cd5e1e64eb","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.4 getComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.4 getComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bd1e249e-ad09-412e-b84b-dd0dbd2016d7","title":"Get community comment successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.4 getComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.4 getComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get community comment or not","fullTitle":"Get community comment successfully with status code 200 Checking if should be able Get community comment or not","timedOut":null,"duration":743,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/comment/get/673905dc92731d9ad8c78e37\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get community comment Response:\", response.body);\n    console.log(\"Get community comment Response:\", response.body);\n  } else {\n    cy.log(\"Get community comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"57c26d16-1e51-4e08-ace3-bce6df1f04d3","parentUUID":"bd1e249e-ad09-412e-b84b-dd0dbd2016d7","isHook":false,"skipped":false}],"suites":[],"passes":["57c26d16-1e51-4e08-ace3-bce6df1f04d3"],"failures":[],"pending":[],"skipped":[],"duration":743,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ee9eaba7-c225-4ab8-be31-f6039c0c5903","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.5 getReplies.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.5 getReplies.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"81a15a29-eaf9-4513-ae98-795feb5387d1","title":"Get community comment reply successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.5 getReplies.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.5 getReplies.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get community comment reply or not","fullTitle":"Get community comment reply successfully with status code 200 Checking if should be able Get community comment reply or not","timedOut":null,"duration":781,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/comment/get/673905dc92731d9ad8c78e37?parentId=674835d5b419790019bb0f5a\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get community comment reply Response:\", response.body);\n    console.log(\"Get community comment reply Response:\", response.body);\n  } else {\n    cy.log(\"Get community comment reply failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fe85f02b-2c60-4469-8617-f098703f808c","parentUUID":"81a15a29-eaf9-4513-ae98-795feb5387d1","isHook":false,"skipped":false}],"suites":[],"passes":["fe85f02b-2c60-4469-8617-f098703f808c"],"failures":[],"pending":[],"skipped":[],"duration":781,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e574babb-fe99-4d3a-af89-ad623094abe4","title":"","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.6 deleteComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.6 deleteComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2ec353ab-6bec-45fb-9d56-cf7eb01d8ba7","title":"Delete community post comment successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.6 deleteComment.cy.js","file":"cypress/e2e/03. Content Service/03. Comment Flow/3.03.6 deleteComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete community post comment or not","fullTitle":"Delete community post comment successfully with status code 200 Checking if should be able Delete community post comment or not","timedOut":null,"duration":602,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/content/comment/delete/${delete_commentId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete community post comment Response:\", response.body);\n    console.log(\"Delete community post comment Response:\", response.body);\n  } else {\n    cy.log(\"Delete community post comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c43428e3-8f67-4491-9e74-38dfb43c1eee","parentUUID":"2ec353ab-6bec-45fb-9d56-cf7eb01d8ba7","isHook":false,"skipped":false}],"suites":[],"passes":["c43428e3-8f67-4491-9e74-38dfb43c1eee"],"failures":[],"pending":[],"skipped":[],"duration":602,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f9ebf5cb-a217-46ad-9c68-3684a745cccd","title":"","fullFile":"cypress/e2e/02. Organization Service/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/02. Organization Service/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5cb92625-8dc1-49ed-a9b0-d1695d04a34e","title":"Get user organization successfully with status code 200","fullFile":"cypress/e2e/02. Organization Service/01. UserOrganization/2.01.1 getUserOrganization.cy.js","file":"cypress/e2e/02. Organization Service/01. UserOrganization/2.01.1 getUserOrganization.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get user organization or not","fullTitle":"Get user organization successfully with status code 200 Checking if should be able get user organization or not","timedOut":null,"duration":605,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/organization/user-organizations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get user organization  Response:\", response.body);\n    console.log(\"Get user organization  Response:\", response.body);\n  } else {\n    cy.log(\"Get user organization failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1992bb64-7d78-4571-80e3-e6999ef111e1","parentUUID":"5cb92625-8dc1-49ed-a9b0-d1695d04a34e","isHook":false,"skipped":false}],"suites":[],"passes":["1992bb64-7d78-4571-80e3-e6999ef111e1"],"failures":[],"pending":[],"skipped":[],"duration":605,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7665ee50-dc39-461b-813a-c236be9669a8","title":"","fullFile":"cypress/e2e/02. Organization Service/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/02. Organization Service/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fb440ea6-d7a7-4d2c-a78f-e7462d984c40","title":"Get Company Details successfully with status code 200","fullFile":"cypress/e2e/02. Organization Service/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","file":"cypress/e2e/02. Organization Service/02. CompanyDetail/2.02.1 getCompanyDetail.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Company Details or not","fullTitle":"Get Company Details successfully with status code 200 Checking if should be able get Company Details or not","timedOut":null,"duration":632,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/organization/details/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Company Details  Response:\", response.body);\n    console.log(\"Get Company Details  Response:\", response.body);\n  } else {\n    cy.log(\"Get Company Details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b9d53bbd-29ac-4a9c-adbf-5ab6af174b33","parentUUID":"fb440ea6-d7a7-4d2c-a78f-e7462d984c40","isHook":false,"skipped":false}],"suites":[],"passes":["b9d53bbd-29ac-4a9c-adbf-5ab6af174b33"],"failures":[],"pending":[],"skipped":[],"duration":632,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c717565a-84c1-495f-8a53-eed66fdda84d","title":"","fullFile":"cypress/e2e/02. Organization Service/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/02. Organization Service/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b5572be4-a9b6-4f13-a648-e315eb257ebd","title":"Generate Text successfully with status code 200","fullFile":"cypress/e2e/02. Organization Service/03. GenerateText/2.03.1 generateTextByAI.cy.js","file":"cypress/e2e/02. Organization Service/03. GenerateText/2.03.1 generateTextByAI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able generate text or not","fullTitle":"Generate Text successfully with status code 200 Checking if should be able generate text or not","timedOut":null,"duration":7682,"state":"passed","speed":"medium","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/organization/integration/generate-text\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId,\n    Enrollment: enrollmentId\n  },\n  body: {\n    prompt: \"How to make money?\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    // expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Generate text  Response:\", response.body);\n    console.log(\"Generate text  Response:\", response.body);\n  } else {\n    cy.log(\"Generate text failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1d143329-7c01-4f7b-8f0d-c9d8e64ec1ef","parentUUID":"b5572be4-a9b6-4f13-a648-e315eb257ebd","isHook":false,"skipped":false}],"suites":[],"passes":["1d143329-7c01-4f7b-8f0d-c9d8e64ec1ef"],"failures":[],"pending":[],"skipped":[],"duration":7682,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"effd9f26-44eb-46f6-95e2-b5e43fdf4123","title":"","fullFile":"cypress/e2e/04. Program Service/04. Media/4.04.1 myMedia.cy.js","file":"cypress/e2e/04. Program Service/04. Media/4.04.1 myMedia.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ad220e6a-80db-4c71-ae1d-1e2619cd6b03","title":"Get my media successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/04. Media/4.04.1 myMedia.cy.js","file":"cypress/e2e/04. Program Service/04. Media/4.04.1 myMedia.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my media or not","fullTitle":"Get my media successfully with status code 200 Checking if should be able Get my media or not","timedOut":null,"duration":917,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/media/mymedia\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my media Response:\", response.body);\n    console.log(\"Get my media Response:\", response.body);\n  } else {\n    cy.log(\"Get my media failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4a948432-f2dc-4232-931a-6ec4e3778fce","parentUUID":"ad220e6a-80db-4c71-ae1d-1e2619cd6b03","isHook":false,"skipped":false}],"suites":[],"passes":["4a948432-f2dc-4232-931a-6ec4e3778fce"],"failures":[],"pending":[],"skipped":[],"duration":917,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"829cd3af-9eb9-42c7-9881-a46fc6f78a9b","title":"","fullFile":"cypress/e2e/04. Program Service/07. Upload Audio And Video/4.07.1 uploadAudioAndVideo.cy.js","file":"cypress/e2e/04. Program Service/07. Upload Audio And Video/4.07.1 uploadAudioAndVideo.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"00326564-7de0-4b3c-8df6-3d6fb38ff873","title":"Upload video and audio with status code 200","fullFile":"cypress/e2e/04. Program Service/07. Upload Audio And Video/4.07.1 uploadAudioAndVideo.cy.js","file":"cypress/e2e/04. Program Service/07. Upload Audio And Video/4.07.1 uploadAudioAndVideo.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the audio and video","fullTitle":"Upload video and audio with status code 200 Should successfully update the audio and video","timedOut":null,"duration":853,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const filePath = \"/example-people.csv\";\ncy.fixture(filePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"file\", blob, \"example-people.csv\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"POST\",\n    url: \"/settings/video-audio-upload\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Upload audio and video file successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Upload video and audio file failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"441b1b74-b4ba-4ac0-9d95-d4d10450558a","parentUUID":"00326564-7de0-4b3c-8df6-3d6fb38ff873","isHook":false,"skipped":false}],"suites":[],"passes":["441b1b74-b4ba-4ac0-9d95-d4d10450558a"],"failures":[],"pending":[],"skipped":[],"duration":853,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"dfb80ef9-096c-4504-ad39-ddaf7db87f87","title":"","fullFile":"cypress/e2e/05. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/05. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"56cf38f1-5727-4698-b3a4-74089a2f02df","title":"Get my navigation successfully with status code 200","fullFile":"cypress/e2e/05. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","file":"cypress/e2e/05. CommonService/01. MyNavigation/5.01.1 getMyNavigation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my navigation or not","fullTitle":"Get my navigation successfully with status code 200 Checking if should be able get my navigation or not","timedOut":null,"duration":494,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/navigation/mynavigations\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my navigation Response:\", response.body);\n    console.log(\"get may navigation post Response:\", response.body);\n  } else {\n    cy.log(\"Get my navigation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"6ebd20cf-c63d-49fa-8499-44bc0798a3f6","parentUUID":"56cf38f1-5727-4698-b3a4-74089a2f02df","isHook":false,"skipped":false}],"suites":[],"passes":["6ebd20cf-c63d-49fa-8499-44bc0798a3f6"],"failures":[],"pending":[],"skipped":[],"duration":494,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c95b7210-7b13-4c6f-84fb-80113433b22a","title":"","fullFile":"cypress/e2e/05. CommonService/02. Upload User Document/5.02.1 uploadUserDocument.cy.js","file":"cypress/e2e/05. CommonService/02. Upload User Document/5.02.1 uploadUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"dd6a8c8d-59aa-43fe-b3f2-d4a800e108e3","title":"Upload user document file with status code 200","fullFile":"cypress/e2e/05. CommonService/02. Upload User Document/5.02.1 uploadUserDocument.cy.js","file":"cypress/e2e/05. CommonService/02. Upload User Document/5.02.1 uploadUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully upload user document file","fullTitle":"Upload user document file with status code 200 Should successfully upload user document file","timedOut":null,"duration":831,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const filePath = \"/image1.png\";\ncy.fixture(filePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"file\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"POST\",\n    url: \"/document/userdocumentfile\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Upload user document file successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Upload user document file file failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"5ba8ceb4-61d2-4c4d-b1e0-2d70a24ed725","parentUUID":"dd6a8c8d-59aa-43fe-b3f2-d4a800e108e3","isHook":false,"skipped":false}],"suites":[],"passes":["5ba8ceb4-61d2-4c4d-b1e0-2d70a24ed725"],"failures":[],"pending":[],"skipped":[],"duration":831,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b0904811-fedf-4020-9f10-c6c49459cff8","title":"","fullFile":"cypress/e2e/05. CommonService/03. User Documents/05.03.01 getUserDocuments.cy.js","file":"cypress/e2e/05. CommonService/03. User Documents/05.03.01 getUserDocuments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9d278e44-1d79-495e-aa32-f37cb31d41c5","title":"Get user documents successfully with status code 200","fullFile":"cypress/e2e/05. CommonService/03. User Documents/05.03.01 getUserDocuments.cy.js","file":"cypress/e2e/05. CommonService/03. User Documents/05.03.01 getUserDocuments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get user documents or not","fullTitle":"Get user documents successfully with status code 200 Checking if should be able to Get user documents or not","timedOut":null,"duration":820,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/document/userdocument/get\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get user documents successfully\");\n    console.log(\"Get user documents successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get user documents failed with status code:\", response.status);\n    console.log(`Get user documents failed with status code ${response.status}`);\n    cy.log(`Get user documents failed  ${response.body.error}`);\n    console.log(`Get user documents failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"a15dfe0b-1894-4a9d-98b4-8db89ed6d923","parentUUID":"9d278e44-1d79-495e-aa32-f37cb31d41c5","isHook":false,"skipped":false}],"suites":[],"passes":["a15dfe0b-1894-4a9d-98b4-8db89ed6d923"],"failures":[],"pending":[],"skipped":[],"duration":820,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e346ed6d-daab-4b95-903d-582a147aa07a","title":"","fullFile":"cypress/e2e/05. CommonService/04. Add User Document/05.04.01 addUserDocument.cy.js","file":"cypress/e2e/05. CommonService/04. Add User Document/05.04.01 addUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"515f259b-715d-4399-9446-11cd271d4ad9","title":"Add user document successfully with status code 200","fullFile":"cypress/e2e/05. CommonService/04. Add User Document/05.04.01 addUserDocument.cy.js","file":"cypress/e2e/05. CommonService/04. Add User Document/05.04.01 addUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Add user document or not","fullTitle":"Add user document successfully with status code 200 Checking if should be able to Add user document or not","timedOut":null,"duration":753,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/document/userdocument/add\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    name: faker.person.fullName(),\n    description: \"Random description text\",\n    attachment: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/documentId.json\", {\n      documentId: response.body.document._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Add user document successfully\");\n    console.log(\"Add user document successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Add user document failed with status code:\", response.status);\n    console.log(`Add user document failed with status code ${response.status}`);\n    cy.log(`Add user document failed  ${response.body.error}`);\n    console.log(`Add user document failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"38dba7a3-9db9-4609-a73a-c2e724ffbf1f","parentUUID":"515f259b-715d-4399-9446-11cd271d4ad9","isHook":false,"skipped":false}],"suites":[],"passes":["38dba7a3-9db9-4609-a73a-c2e724ffbf1f"],"failures":[],"pending":[],"skipped":[],"duration":753,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b20abe98-1ef4-455a-9487-8db0bd1b405f","title":"","fullFile":"cypress/e2e/05. CommonService/05. Update User Document/05.05.01 updateUserDocument.cy.js","file":"cypress/e2e/05. CommonService/05. Update User Document/05.05.01 updateUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ee719e6f-bd54-4077-8f89-938da4b00caf","title":"Update user document successfully with status code 200","fullFile":"cypress/e2e/05. CommonService/05. Update User Document/05.05.01 updateUserDocument.cy.js","file":"cypress/e2e/05. CommonService/05. Update User Document/05.05.01 updateUserDocument.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Update user document or not","fullTitle":"Update user document successfully with status code 200 Checking if should be able to Update user document or not","timedOut":null,"duration":693,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/document/userdocument/update/${documentId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    name: faker.person.fullName(),\n    description: \"Random description text\",\n    attachment: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Update user document successfully\");\n    console.log(\"Update user document successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Update user document failed with status code:\", response.status);\n    console.log(`Update user document failed with status code ${response.status}`);\n    cy.log(`Update user document failed  ${response.body.error}`);\n    console.log(`Update user document failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"35f95046-53a8-4f60-83b7-143c1b64685a","parentUUID":"ee719e6f-bd54-4077-8f89-938da4b00caf","isHook":false,"skipped":false}],"suites":[],"passes":["35f95046-53a8-4f60-83b7-143c1b64685a"],"failures":[],"pending":[],"skipped":[],"duration":693,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1475ec5f-b495-40ed-8c0a-321ff185aace","title":"","fullFile":"cypress/e2e/05. CommonService/06. My Diagrams/05.06.01 getMyDiagrams.cy.js","file":"cypress/e2e/05. CommonService/06. My Diagrams/05.06.01 getMyDiagrams.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"60a7ab49-1657-42a8-93ea-6ffa3830f5cb","title":"Get my diagrams successfully with status code 200","fullFile":"cypress/e2e/05. CommonService/06. My Diagrams/05.06.01 getMyDiagrams.cy.js","file":"cypress/e2e/05. CommonService/06. My Diagrams/05.06.01 getMyDiagrams.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get my diagrams or not","fullTitle":"Get my diagrams successfully with status code 200 Checking if should be able to Get my diagrams or not","timedOut":null,"duration":819,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/diagram/mydiagrams?page=${page}&limit=${limit}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get my diagrams successfully\");\n    console.log(\"Get my diagrams successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get my diagrams failed with status code:\", response.status);\n    console.log(`Get my diagrams failed with status code ${response.status}`);\n    cy.log(`Get my diagrams failed  ${response.body.error}`);\n    console.log(`Get my diagrams failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"6cebb6f1-53f2-40a6-a4a5-014e41726372","parentUUID":"60a7ab49-1657-42a8-93ea-6ffa3830f5cb","isHook":false,"skipped":false}],"suites":[],"passes":["6cebb6f1-53f2-40a6-a4a5-014e41726372"],"failures":[],"pending":[],"skipped":[],"duration":819,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6fb714a7-80dd-4afb-abc6-d2ec29be8cf1","title":"","fullFile":"cypress/e2e/05. CommonService/07. Portal Documents/05.07.01 getPortalDocuments.cy.js","file":"cypress/e2e/05. CommonService/07. Portal Documents/05.07.01 getPortalDocuments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8ee7865c-1eb5-42e3-9f98-d434e7d23a98","title":"Get portal documents successfully with status code 200","fullFile":"cypress/e2e/05. CommonService/07. Portal Documents/05.07.01 getPortalDocuments.cy.js","file":"cypress/e2e/05. CommonService/07. Portal Documents/05.07.01 getPortalDocuments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get portal documents or not","fullTitle":"Get portal documents successfully with status code 200 Checking if should be able to Get portal documents or not","timedOut":null,"duration":894,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/docs/portal\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get portal documents successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get portal documents failed with status code:\", response.status);\n    cy.log(`Get portal documents failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"ca671bf6-7dfa-462c-862f-863942c6e59f","parentUUID":"8ee7865c-1eb5-42e3-9f98-d434e7d23a98","isHook":false,"skipped":false}],"suites":[],"passes":["ca671bf6-7dfa-462c-862f-863942c6e59f"],"failures":[],"pending":[],"skipped":[],"duration":894,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4458b367-0a36-41bb-b30b-b5c1bc504f5e","title":"","fullFile":"cypress/e2e/05. CommonService/08. Terms and Conditions/05.08.01 termsAndCondition.cy.js","file":"cypress/e2e/05. CommonService/08. Terms and Conditions/05.08.01 termsAndCondition.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"de130443-db36-4bac-ab4f-44324e058355","title":"Terms and Conditions successfully with status code 200","fullFile":"cypress/e2e/05. CommonService/08. Terms and Conditions/05.08.01 termsAndCondition.cy.js","file":"cypress/e2e/05. CommonService/08. Terms and Conditions/05.08.01 termsAndCondition.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Terms and Conditions or not","fullTitle":"Terms and Conditions successfully with status code 200 Checking if should be able to Terms and Conditions or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/terms-conditions/myterm\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    branch: {\n      data: {\n        address: {\n          street: \"Street\",\n          city: \"City\",\n          zip: \"8700\",\n          country: \"Bangladesh\",\n          state: \"State\"\n        },\n        firstContact: {\n          email: \"first@gmail.com\",\n          name: \"First name\",\n          phone: \"11728068200\"\n        },\n        secondContact: {\n          email: \"second@gmail.com\",\n          name: \"First name\",\n          phone: \"8801647760872\"\n        },\n        socialLinks: {\n          facebook: \"facebook\",\n          github: \"github\",\n          instagram: \"instagram\"\n        },\n        branchUrl: \"http://localhost:3003/newUI/branch-setting\",\n        faxNumber: \"1245758454\",\n        taxNumber: \"25458758454\",\n        branchLogo: \"https://ts4uportal-all-files-upload.nyc3.digitaloceanspaces.com/document-sending/1722570757127-SchoolHubs-logo-final-white.png\",\n        branchDocument: \"\",\n        otherDocument: \"https://ts4uportal-all-files-upload.nyc3.digitaloceanspaces.com/document-sending/1720431819679-dog2.jpeg\",\n        about: \"about\",\n        phone: \"11735590775\"\n      },\n      _id: \"64fcb4e8944cf215d8d32f95\",\n      name: \"first-branch\",\n      slug: \"first-branch-pgbr\"\n    },\n    program: \"64fcb957b0cf6e9ae43d126d\",\n    session: \"66491689e44f020019e08e4f\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Terms and Conditions successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Terms and Conditions failed with status code:\", response.status);\n    cy.log(`Terms and Conditions failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"7a3263ee-03d9-4aa3-85f4-f0e3f40589ae","parentUUID":"de130443-db36-4bac-ab4f-44324e058355","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["7a3263ee-03d9-4aa3-85f4-f0e3f40589ae"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"573eea28-f59e-4f40-af30-526451b9e088","title":"","fullFile":"cypress/e2e/06. Chat Service/01. My Chats/6.01.1 myChats.cy.js","file":"cypress/e2e/06. Chat Service/01. My Chats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"890758a5-b881-4a3a-9fe4-1d5b1f8b921a","title":"My all chats with status code 200","fullFile":"cypress/e2e/06. Chat Service/01. My Chats/6.01.1 myChats.cy.js","file":"cypress/e2e/06. Chat Service/01. My Chats/6.01.1 myChats.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get my all chats or not","fullTitle":"My all chats with status code 200 Checking if should be able get my all chats or not","timedOut":null,"duration":2078,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/chat/mychats\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"get my chats Response:\", response.body);\n  } else {\n    cy.log(\"Get my chats failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9ebe2591-9b1b-4f7e-bd1a-942c4698638b","parentUUID":"890758a5-b881-4a3a-9fe4-1d5b1f8b921a","isHook":false,"skipped":false}],"suites":[],"passes":["9ebe2591-9b1b-4f7e-bd1a-942c4698638b"],"failures":[],"pending":[],"skipped":[],"duration":2078,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"906fd12e-b0a0-4f6e-9535-9afb9805f326","title":"","fullFile":"cypress/e2e/06. Chat Service/02. Find Or Create Chats By User/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/06. Chat Service/02. Find Or Create Chats By User/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"741e8406-6291-4afd-a986-568c93a51ac5","title":"Find or Create chats by user with status code 200","fullFile":"cypress/e2e/06. Chat Service/02. Find Or Create Chats By User/6.02.1 findOrCreateChatsByUser.cy.js","file":"cypress/e2e/06. Chat Service/02. Find Or Create Chats By User/6.02.1 findOrCreateChatsByUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Find or Create chats by user or not","fullTitle":"Find or Create chats by user with status code 200 Checking if should be able Find or Create chats by user or not","timedOut":null,"duration":627,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/findorcreate/${userId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Find or Create chats by user Response:\", response.body);\n  } else {\n    cy.log(\"Find or Create chats by user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ba520496-fc19-4499-81a2-da4561a02579","parentUUID":"741e8406-6291-4afd-a986-568c93a51ac5","isHook":false,"skipped":false}],"suites":[],"passes":["ba520496-fc19-4499-81a2-da4561a02579"],"failures":[],"pending":[],"skipped":[],"duration":627,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d70818a5-d738-45a9-aff4-5f70374b1ca3","title":"","fullFile":"cypress/e2e/06. Chat Service/04. Search Users/6.04.1 searchUsers.cy.js","file":"cypress/e2e/06. Chat Service/04. Search Users/6.04.1 searchUsers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5b22ddee-e54c-4f50-ac8e-2d561c4c6230","title":"Search Users successfully with status code 200","fullFile":"cypress/e2e/06. Chat Service/04. Search Users/6.04.1 searchUsers.cy.js","file":"cypress/e2e/06. Chat Service/04. Search Users/6.04.1 searchUsers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search Users or not","fullTitle":"Search Users successfully with status code 200 Checking if should be able Search Users or not","timedOut":null,"duration":443,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/chat/searchuser?query=${query}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Search Users Response:\", response.body);\n    console.log(\"Search Users Response:\", response.body);\n  } else {\n    cy.log(\"Search Users failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e2f02580-6736-490f-a368-c87e4dac7513","parentUUID":"5b22ddee-e54c-4f50-ac8e-2d561c4c6230","isHook":false,"skipped":false}],"suites":[],"passes":["e2f02580-6736-490f-a368-c87e4dac7513"],"failures":[],"pending":[],"skipped":[],"duration":443,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"afe7a902-b274-4185-ab76-3022618f8ad5","title":"","fullFile":"cypress/e2e/06. Chat Service/05. Thread Message/6.05.1 threadMessage.cy.js","file":"cypress/e2e/06. Chat Service/05. Thread Message/6.05.1 threadMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"97c2725f-825c-40fb-abac-40ad1f09172e","title":"Get thread messages successfully with status code 200","fullFile":"cypress/e2e/06. Chat Service/05. Thread Message/6.05.1 threadMessage.cy.js","file":"cypress/e2e/06. Chat Service/05. Thread Message/6.05.1 threadMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get thread messages or not","fullTitle":"Get thread messages successfully with status code 200 Checking if should be able Get thread messages or not","timedOut":null,"duration":670,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/messages\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    parentMessage: parentMessageId,\n    chat: chatId,\n    page: 1\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get thread messages Response:\", response.body);\n    console.log(\"Get thread messages Response:\", response.body);\n  } else {\n    cy.log(\"Get thread messages failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fe2142d1-0bf1-4ccb-af61-50979888ae19","parentUUID":"97c2725f-825c-40fb-abac-40ad1f09172e","isHook":false,"skipped":false}],"suites":[],"passes":["fe2142d1-0bf1-4ccb-af61-50979888ae19"],"failures":[],"pending":[],"skipped":[],"duration":670,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"38dd5a99-d8ae-4bab-a329-1f5621c49c23","title":"","fullFile":"cypress/e2e/06. Chat Service/06 Upload File/6.06.1 uploadFile.cy.js","file":"cypress/e2e/06. Chat Service/06 Upload File/6.06.1 uploadFile.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"62da98aa-c364-4503-a2d1-3e28910effa0","title":"Upload chat file with status code 200","fullFile":"cypress/e2e/06. Chat Service/06 Upload File/6.06.1 uploadFile.cy.js","file":"cypress/e2e/06. Chat Service/06 Upload File/6.06.1 uploadFile.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the audio and video","fullTitle":"Upload chat file with status code 200 Should successfully update the audio and video","timedOut":null,"duration":521,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const filePath = \"/example-people.csv\";\ncy.fixture(filePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"file\", blob, \"example-people.csv\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"POST\",\n    url: \"/chat/file\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Upload file successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Upload chat file failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"30094fdc-d18e-4da5-9396-4738b2d1fcd7","parentUUID":"62da98aa-c364-4503-a2d1-3e28910effa0","isHook":false,"skipped":false}],"suites":[],"passes":["30094fdc-d18e-4da5-9396-4738b2d1fcd7"],"failures":[],"pending":[],"skipped":[],"duration":521,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d57b719b-ea26-4d17-87a3-d182366b428a","title":"","fullFile":"cypress/e2e/07. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","file":"cypress/e2e/07. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6bc9902e-900f-448a-8a86-1459c7a2fae2","title":"Get all notification successfully with status code 200","fullFile":"cypress/e2e/07. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","file":"cypress/e2e/07. Notification Service/01. Get All Notification/7.01.1 getAllNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all notification or not","fullTitle":"Get all notification successfully with status code 200 Checking if should be able Get all notification or not","timedOut":null,"duration":751,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/notification/mynotifications\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all notification Response:\", response.body);\n    console.log(\"Get all notification Response:\", response.body);\n  } else {\n    cy.log(\"Get all notification failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b9283f8e-fc5a-4bfa-bdb0-cc876e8fcd7f","parentUUID":"6bc9902e-900f-448a-8a86-1459c7a2fae2","isHook":false,"skipped":false}],"suites":[],"passes":["b9283f8e-fc5a-4bfa-bdb0-cc876e8fcd7f"],"failures":[],"pending":[],"skipped":[],"duration":751,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1b9e8421-a314-4173-91fb-4600f83d6b37","title":"","fullFile":"cypress/e2e/07. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","file":"cypress/e2e/07. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"156af1e6-9c1e-4a38-a01b-b972e3124767","title":"Mark notification as Read successfully with status code 200","fullFile":"cypress/e2e/07. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","file":"cypress/e2e/07. Notification Service/03. Mark Notification as Read/7.03.1 markNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mark notification as Read or not","fullTitle":"Mark notification as Read successfully with status code 200 Checking if should be able Mark notification as Read or not","timedOut":null,"duration":538,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/notification/markread/${notificationId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Mark notification as Read Response:\", response.body);\n    console.log(\"Mark notification as Read Response:\", response.body);\n  } else {\n    cy.log(\"Mark notification as Read failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"de75a11a-4320-4f32-b0d6-6cc96ba0ba10","parentUUID":"156af1e6-9c1e-4a38-a01b-b972e3124767","isHook":false,"skipped":false}],"suites":[],"passes":["de75a11a-4320-4f32-b0d6-6cc96ba0ba10"],"failures":[],"pending":[],"skipped":[],"duration":538,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9e6132cc-6294-4542-a97e-cfaa8c6e4481","title":"","fullFile":"cypress/e2e/07. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","file":"cypress/e2e/07. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8a3a603f-cb75-4bfe-b622-57b43716cb45","title":"Mark all notification as read successfully with status code 200","fullFile":"cypress/e2e/07. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","file":"cypress/e2e/07. Notification Service/02. Mark All Notification as Read/7.02.1 markAllNotificationAsRead.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mark all notification as read or not","fullTitle":"Mark all notification as read successfully with status code 200 Checking if should be able Mark all notification as read or not","timedOut":null,"duration":532,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/notification/markreadall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {},\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Mark all notification as read Response:\", response.body);\n    console.log(\"Mark all notification as read Response:\", response.body);\n  } else {\n    cy.log(\"Mark all notification as read failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9cb8eb0c-9777-45b9-8aad-bda3fd98a683","parentUUID":"8a3a603f-cb75-4bfe-b622-57b43716cb45","isHook":false,"skipped":false}],"suites":[],"passes":["9cb8eb0c-9777-45b9-8aad-bda3fd98a683"],"failures":[],"pending":[],"skipped":[],"duration":532,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"45dbd8f1-c877-46a3-a05b-a157df957f10","title":"","fullFile":"cypress/e2e/07. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","file":"cypress/e2e/07. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"032464a0-fcf7-44e4-b463-20780d8b58c5","title":"Get active notification successfully with status code 200","fullFile":"cypress/e2e/07. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","file":"cypress/e2e/07. Notification Service/04. Get Active Notification/7.04.1 getActiveNotification.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get active notification or not","fullTitle":"Get active notification successfully with status code 200 Checking if should be able Get active notification or not","timedOut":null,"duration":491,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/notification/job/getactive/${id}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get active notification Response:\", response.body);\n    console.log(\"Get active notification Response:\", response.body);\n  } else {\n    cy.log(\"Get active notification failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"81274e10-d4aa-4c3c-bd4b-1490fd6514c7","parentUUID":"032464a0-fcf7-44e4-b463-20780d8b58c5","isHook":false,"skipped":false}],"suites":[],"passes":["81274e10-d4aa-4c3c-bd4b-1490fd6514c7"],"failures":[],"pending":[],"skipped":[],"duration":491,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"252b4a3f-c10f-4c1a-8eb1-1b9e0d2b5f12","title":"","fullFile":"cypress/e2e/07. Notification Service/05. Notification Preference/07.05.01 getNotificationPreference.cy.js","file":"cypress/e2e/07. Notification Service/05. Notification Preference/07.05.01 getNotificationPreference.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"68d3b646-08e1-4a7d-a316-09b91ff248cc","title":"Get notification preference successfully with status code 200","fullFile":"cypress/e2e/07. Notification Service/05. Notification Preference/07.05.01 getNotificationPreference.cy.js","file":"cypress/e2e/07. Notification Service/05. Notification Preference/07.05.01 getNotificationPreference.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get notification preference or not","fullTitle":"Get notification preference successfully with status code 200 Checking if should be able to Get notification preference or not","timedOut":null,"duration":587,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/notification/preference/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get notification preference successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get notification preference failed with status code:\", response.status);\n    cy.log(`Get notification preference failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"2bb2a572-661f-45c2-a940-11be96704637","parentUUID":"68d3b646-08e1-4a7d-a316-09b91ff248cc","isHook":false,"skipped":false}],"suites":[],"passes":["2bb2a572-661f-45c2-a940-11be96704637"],"failures":[],"pending":[],"skipped":[],"duration":587,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"086750bf-0253-400c-8037-13a2a8fafd01","title":"","fullFile":"cypress/e2e/07. Notification Service/06. Update Notification Preference/07.06.01 updateNotificationPreference.cy.js","file":"cypress/e2e/07. Notification Service/06. Update Notification Preference/07.06.01 updateNotificationPreference.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"92a50a72-3a35-449d-8503-a85d3b073a30","title":"Update notification preference successfully with status code 200","fullFile":"cypress/e2e/07. Notification Service/06. Update Notification Preference/07.06.01 updateNotificationPreference.cy.js","file":"cypress/e2e/07. Notification Service/06. Update Notification Preference/07.06.01 updateNotificationPreference.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get notification preference or not","fullTitle":"Update notification preference successfully with status code 200 Checking if should be able to Get notification preference or not","timedOut":null,"duration":456,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/notification/preference/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    preferences: [{\n      id: \"changePassword\",\n      channels: [\"push\", \"web\", \"chat\", \"email\", \"sms\"],\n      _id: \"66cb3bc324e209cf61f1a4bd\"\n    }, {\n      id: \"updateProfile\",\n      channels: [\"push\", \"web\", \"chat\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4be\"\n    }, {\n      id: \"changeStatusShowAndTell\",\n      channels: [\"web\", \"chat\", \"push\"],\n      _id: \"66cb3bc324e209cf61f1a4bf\"\n    }, {\n      id: \"createMyDocument\",\n      channels: [\"web\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c0\"\n    }, {\n      id: \"mediaSendingToUser\",\n      channels: [\"web\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c1\"\n    }, {\n      id: \"createSlide\",\n      channels: [\"web\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c2\"\n    }, {\n      id: \"createCalendarEvent\",\n      channels: [\"web\", \"chat\", \"push\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4c3\"\n    }, {\n      id: \"rescheduleCalendarEvent\",\n      channels: [\"web\", \"chat\", \"push\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4c4\"\n    }, {\n      id: \"invitationCalendarEvent\",\n      channels: [\"web\", \"chat\", \"push\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4c5\"\n    }, {\n      id: \"createImportantLink\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c6\"\n    }, {\n      id: \"createContent\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c7\"\n    }, {\n      id: \"createTemplate\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c8\"\n    }, {\n      id: \"createDiagram\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4c9\"\n    }, {\n      id: \"createMockInterview\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4ca\"\n    }, {\n      id: \"updateTransactionStatus\",\n      channels: [\"web\", \"push\", \"chat\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4cb\"\n    }, {\n      id: \"organizationStatusChange\",\n      channels: [\"web\", \"push\", \"chat\", \"email\", \"sms\"],\n      _id: \"66cb3bc324e209cf61f1a4cc\"\n    }, {\n      id: \"enrollmentStatusChange\",\n      channels: [\"web\", \"push\", \"chat\", \"email\", \"sms\"],\n      _id: \"66cb3bc324e209cf61f1a4cd\"\n    }, {\n      id: \"orderStatusChange\",\n      channels: [\"web\", \"push\", \"chat\", \"email\", \"sms\"],\n      _id: \"66cb3bc324e209cf61f1a4ce\"\n    }, {\n      id: \"orderTransactionStatusChange\",\n      channels: [\"web\", \"push\", \"chat\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4cf\"\n    }, {\n      id: \"newLessonAdd\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4d0\"\n    }, {\n      id: \"sendInvoice\",\n      channels: [\"web\", \"push\", \"chat\"],\n      _id: \"66cb3bc324e209cf61f1a4d1\"\n    }, {\n      id: \"certificateGenerate\",\n      channels: [\"web\", \"push\", \"chat\", \"email\"],\n      _id: \"66cb3bc324e209cf61f1a4d2\"\n    }, {\n      id: \"calendarReminder\",\n      channels: [\"sms\", \"email\", \"web\", \"push\", \"groups\", \"chat\"]\n    }]\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get notification preference successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get notification preference failed with status code:\", response.status);\n    cy.log(`Get notification preference failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"86f6dd3c-5301-4285-8513-ad2de446924a","parentUUID":"92a50a72-3a35-449d-8503-a85d3b073a30","isHook":false,"skipped":false}],"suites":[],"passes":["86f6dd3c-5301-4285-8513-ad2de446924a"],"failures":[],"pending":[],"skipped":[],"duration":456,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7f956aeb-b837-4f1b-a741-c0911e9158fb","title":"","fullFile":"cypress/e2e/09. Account Service/01. My Transaction/9.01.1 myTransaction.cy.js","file":"cypress/e2e/09. Account Service/01. My Transaction/9.01.1 myTransaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5f1bb5f5-7d61-40d3-ba3a-dffc3cff09f4","title":"Get my transaction successfully with status code 200","fullFile":"cypress/e2e/09. Account Service/01. My Transaction/9.01.1 myTransaction.cy.js","file":"cypress/e2e/09. Account Service/01. My Transaction/9.01.1 myTransaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my transaction or not","fullTitle":"Get my transaction successfully with status code 200 Checking if should be able Get my transaction or not","timedOut":null,"duration":668,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/transaction/myTransaction\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my transaction Response:\", response.body);\n    console.log(\"Get my transaction Response:\", response.body);\n  } else {\n    cy.log(\"Get my transaction failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"208f9003-241a-47dd-9ab9-fc1fe14c72c1","parentUUID":"5f1bb5f5-7d61-40d3-ba3a-dffc3cff09f4","isHook":false,"skipped":false}],"suites":[],"passes":["208f9003-241a-47dd-9ab9-fc1fe14c72c1"],"failures":[],"pending":[],"skipped":[],"duration":668,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6a676e0b-583a-43e5-b0f6-a885a03ff05f","title":"","fullFile":"cypress/e2e/09. Account Service/02. Add User Transaction/9.02.1 addUserTransaction.cy.js","file":"cypress/e2e/09. Account Service/02. Add User Transaction/9.02.1 addUserTransaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bdb13ff3-2404-43b1-9302-3809df98c568","title":"Add user transaction successfully with status code 200","fullFile":"cypress/e2e/09. Account Service/02. Add User Transaction/9.02.1 addUserTransaction.cy.js","file":"cypress/e2e/09. Account Service/02. Add User Transaction/9.02.1 addUserTransaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add user transaction or not","fullTitle":"Add user transaction successfully with status code 200 Checking if should be able Add user transaction or not","timedOut":null,"duration":632,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/transaction/addbyuser\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    method: \"Bank Transfer\",\n    amount: 100,\n    date: \"2024-11-20\",\n    note: \"Payment note\",\n    attachment: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Add user transaction Response:\", response.body);\n    console.log(\"Add user transaction Response:\", response.body);\n  } else {\n    cy.log(\"Add user transaction failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c8e9288a-7346-430b-bfbe-d9f0fd980bfb","parentUUID":"bdb13ff3-2404-43b1-9302-3809df98c568","isHook":false,"skipped":false}],"suites":[],"passes":["c8e9288a-7346-430b-bfbe-d9f0fd980bfb"],"failures":[],"pending":[],"skipped":[],"duration":632,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4a26adf1-ec51-491b-b05d-f7cc8349e9fb","title":"","fullFile":"cypress/e2e/09. Account Service/03. Add Payment To Order/9.03.1 addPaymentToOrder.cy.js","file":"cypress/e2e/09. Account Service/03. Add Payment To Order/9.03.1 addPaymentToOrder.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8a3868a2-3b12-4d71-a048-4890ea8bcffc","title":"Add payment to order successfully with status code 200","fullFile":"cypress/e2e/09. Account Service/03. Add Payment To Order/9.03.1 addPaymentToOrder.cy.js","file":"cypress/e2e/09. Account Service/03. Add Payment To Order/9.03.1 addPaymentToOrder.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add payment to order or not","fullTitle":"Add payment to order successfully with status code 200 Checking if should be able Add payment to order or not","timedOut":null,"duration":615,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/order/addpayment/${orderId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    method: \"Card\",\n    amount: 50,\n    date: \"2024-11-20\",\n    note: \"Payment for course\",\n    attachment: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Add payment to order Response:\", response.body);\n    console.log(\"Add payment to order Response:\", response.body);\n  } else {\n    cy.log(\"Add payment to order failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"81aa5c13-3b71-4da3-a470-4275714becad","parentUUID":"8a3868a2-3b12-4d71-a048-4890ea8bcffc","isHook":false,"skipped":false}],"suites":[],"passes":["81aa5c13-3b71-4da3-a470-4275714becad"],"failures":[],"pending":[],"skipped":[],"duration":615,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"55134b05-c1ab-4da1-ac0b-59e1352ed24d","title":"","fullFile":"cypress/e2e/09. Account Service/04. Get Order Details/9.04.1 getOrderDetails.cy.js","file":"cypress/e2e/09. Account Service/04. Get Order Details/9.04.1 getOrderDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bacf8d46-8399-410a-b403-b62a681179a6","title":"Get order details successfully with status code 200","fullFile":"cypress/e2e/09. Account Service/04. Get Order Details/9.04.1 getOrderDetails.cy.js","file":"cypress/e2e/09. Account Service/04. Get Order Details/9.04.1 getOrderDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get order details or not","fullTitle":"Get order details successfully with status code 200 Checking if should be able Get order details or not","timedOut":null,"duration":633,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/order/details/${orderId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get order details Response:\", response.body);\n    console.log(\"Get order details Response:\", response.body);\n  } else {\n    cy.log(\"Get order details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"466e466e-9f21-472b-9372-98357ce5a4b3","parentUUID":"bacf8d46-8399-410a-b403-b62a681179a6","isHook":false,"skipped":false}],"suites":[],"passes":["466e466e-9f21-472b-9372-98357ce5a4b3"],"failures":[],"pending":[],"skipped":[],"duration":633,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ee4180f7-1b1f-4acb-a06c-f87c6537c9b6","title":"","fullFile":"cypress/e2e/10. Enrollment Service/01. My Progress/10.01.1 myProgress.cy.js","file":"cypress/e2e/10. Enrollment Service/01. My Progress/10.01.1 myProgress.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a365e2a9-debc-4aec-bb78-657020a23ae5","title":"Get my progress successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/01. My Progress/10.01.1 myProgress.cy.js","file":"cypress/e2e/10. Enrollment Service/01. My Progress/10.01.1 myProgress.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my progress or not","fullTitle":"Get my progress successfully with status code 200 Checking if should be able Get my progress or not","timedOut":null,"duration":777,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/progress/myprogress\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my progress Response:\", response.body);\n    console.log(\"Get my progress Response:\", response.body);\n  } else {\n    cy.log(\"Get my progress failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"441ee7a8-84a9-4ad4-b6a1-23b1574cc3d8","parentUUID":"a365e2a9-debc-4aec-bb78-657020a23ae5","isHook":false,"skipped":false}],"suites":[],"passes":["441ee7a8-84a9-4ad4-b6a1-23b1574cc3d8"],"failures":[],"pending":[],"skipped":[],"duration":777,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"25e19204-9d18-4cf4-bb31-ffc6ee295d8b","title":"","fullFile":"cypress/e2e/10. Enrollment Service/02. My Programs/10.2.1 myPrograms.cy.js","file":"cypress/e2e/10. Enrollment Service/02. My Programs/10.2.1 myPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2ff1436c-6dbd-4639-8897-6f0165addc3b","title":"Get my progress successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/02. My Programs/10.2.1 myPrograms.cy.js","file":"cypress/e2e/10. Enrollment Service/02. My Programs/10.2.1 myPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my progress or not","fullTitle":"Get my progress successfully with status code 200 Checking if should be able Get my progress or not","timedOut":null,"duration":997,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/enrollment/myprogram\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my progress Response:\", response.body);\n    console.log(\"Get my progress Response:\", response.body);\n  } else {\n    cy.log(\"Get my progress failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8bbd4a65-beb7-4d04-b3fd-4cb41151f126","parentUUID":"2ff1436c-6dbd-4639-8897-6f0165addc3b","isHook":false,"skipped":false}],"suites":[],"passes":["8bbd4a65-beb7-4d04-b3fd-4cb41151f126"],"failures":[],"pending":[],"skipped":[],"duration":997,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"087f801a-cfca-48aa-bb77-5f63918a010e","title":"","fullFile":"cypress/e2e/10. Enrollment Service/03. My Assignments/10.03.3 myAssignments.cy.js","file":"cypress/e2e/10. Enrollment Service/03. My Assignments/10.03.3 myAssignments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2510361c-cf75-4692-b91c-26582fde5334","title":"Get my assignments successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/03. My Assignments/10.03.3 myAssignments.cy.js","file":"cypress/e2e/10. Enrollment Service/03. My Assignments/10.03.3 myAssignments.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my assignments or not","fullTitle":"Get my assignments successfully with status code 200 Checking if should be able Get my assignments or not","timedOut":null,"duration":1099,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/assignment/myassignments\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my assignments Response:\", response.body);\n    console.log(\"Get my assignments Response:\", response.body);\n  } else {\n    cy.log(\"Get my assignments failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"31cb8975-ebdf-42e0-baa9-10b51d73a4ca","parentUUID":"2510361c-cf75-4692-b91c-26582fde5334","isHook":false,"skipped":false}],"suites":[],"passes":["31cb8975-ebdf-42e0-baa9-10b51d73a4ca"],"failures":[],"pending":[],"skipped":[],"duration":1099,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e998ca13-ef9a-42d3-8cd8-c4f785e70bd4","title":"","fullFile":"cypress/e2e/10. Enrollment Service/04. Search My Assignment/10.04.1 searchMyAssignment.cy.js","file":"cypress/e2e/10. Enrollment Service/04. Search My Assignment/10.04.1 searchMyAssignment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a3a621cd-65f3-4ed5-a12d-59f6d11692a2","title":"Search my assignment successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/04. Search My Assignment/10.04.1 searchMyAssignment.cy.js","file":"cypress/e2e/10. Enrollment Service/04. Search My Assignment/10.04.1 searchMyAssignment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search my assignment or not","fullTitle":"Search my assignment successfully with status code 200 Checking if should be able Search my assignment or not","timedOut":null,"duration":1171,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/assignment/myassignments\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    category: \"\",\n    limit: 50,\n    page: 1,\n    query: \"\",\n    status: \"pending\",\n    type: \"\",\n    workshop: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2500);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Search my assignment Response:\", response.body);\n    console.log(\"Search my assignment Response:\", response.body);\n  } else {\n    cy.log(\"Search my assignment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"40ed8623-07bd-47ba-a284-6632f66aadd7","parentUUID":"a3a621cd-65f3-4ed5-a12d-59f6d11692a2","isHook":false,"skipped":false}],"suites":[],"passes":["40ed8623-07bd-47ba-a284-6632f66aadd7"],"failures":[],"pending":[],"skipped":[],"duration":1171,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"06f0d882-4e93-4aee-a50e-3cee80b878c3","title":"","fullFile":"cypress/e2e/10. Enrollment Service/05. My Enrollment Test/10.05.1 myEnrollmentTest.cy.js","file":"cypress/e2e/10. Enrollment Service/05. My Enrollment Test/10.05.1 myEnrollmentTest.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c55fac9e-3cfd-40de-8a2b-c0f2e126025d","title":"Get enrollment test successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/05. My Enrollment Test/10.05.1 myEnrollmentTest.cy.js","file":"cypress/e2e/10. Enrollment Service/05. My Enrollment Test/10.05.1 myEnrollmentTest.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get enrollment test or not","fullTitle":"Get enrollment test successfully with status code 200 Checking if should be able Get enrollment test or not","timedOut":null,"duration":630,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/enrollment/enrollment-test/mytests\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get enrollment test Response:\", response.body);\n    console.log(\"Get enrollment test Response:\", response.body);\n  } else {\n    cy.log(\"Get enrollment test failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fdea6535-d8a5-4d9c-950d-d79e85db7022","parentUUID":"c55fac9e-3cfd-40de-8a2b-c0f2e126025d","isHook":false,"skipped":false}],"suites":[],"passes":["fdea6535-d8a5-4d9c-950d-d79e85db7022"],"failures":[],"pending":[],"skipped":[],"duration":630,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"cc3114b8-8006-4fa2-ad5f-8d1292fa22e6","title":"","fullFile":"cypress/e2e/10. Enrollment Service/06. My Order Course/10.06.1 myOrderCourse.cy.js","file":"cypress/e2e/10. Enrollment Service/06. My Order Course/10.06.1 myOrderCourse.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"133639e6-a8b5-4eed-ab49-127283e39014","title":"Get my order course successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/06. My Order Course/10.06.1 myOrderCourse.cy.js","file":"cypress/e2e/10. Enrollment Service/06. My Order Course/10.06.1 myOrderCourse.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my order course or not","fullTitle":"Get my order course successfully with status code 200 Checking if should be able Get my order course or not","timedOut":null,"duration":587,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/order/myorder/course\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my order course Response:\", response.body);\n    console.log(\"Get my order course Response:\", response.body);\n  } else {\n    cy.log(\"Get my order course failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4852b630-1ab1-4721-a042-aaa88f86ddce","parentUUID":"133639e6-a8b5-4eed-ab49-127283e39014","isHook":false,"skipped":false}],"suites":[],"passes":["4852b630-1ab1-4721-a042-aaa88f86ddce"],"failures":[],"pending":[],"skipped":[],"duration":587,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"dd428425-2704-4e1d-8520-5d32e414614d","title":"","fullFile":"cypress/e2e/10. Enrollment Service/07. Dashboard/10.07.1 dashboardPortalData.cy.js","file":"cypress/e2e/10. Enrollment Service/07. Dashboard/10.07.1 dashboardPortalData.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"53ff70f5-dc2a-49a1-a699-653c78849a20","title":"Get dashboard data successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/07. Dashboard/10.07.1 dashboardPortalData.cy.js","file":"cypress/e2e/10. Enrollment Service/07. Dashboard/10.07.1 dashboardPortalData.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get dashboard data or not","fullTitle":"Get dashboard data successfully with status code 200 Checking if should be able Get dashboard data or not","timedOut":null,"duration":524,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/dashboard/portal\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    familyMember: {},\n    lastPasswordUpdate: {},\n    review: {},\n    bootcamp: {}\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get dashboard data Response:\", response.body);\n    console.log(\"Get dashboard data Response:\", response.body);\n  } else {\n    cy.log(\"Get dashboard data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"6fc17cac-e372-420b-a06b-2f82eabb861b","parentUUID":"53ff70f5-dc2a-49a1-a699-653c78849a20","isHook":false,"skipped":false}],"suites":[],"passes":["6fc17cac-e372-420b-a06b-2f82eabb861b"],"failures":[],"pending":[],"skipped":[],"duration":524,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6a51615f-2518-449c-9365-a8bbb062b95c","title":"","fullFile":"cypress/e2e/10. Enrollment Service/08. Leaderboard/10.08.1 leaderboardData.cy.js","file":"cypress/e2e/10. Enrollment Service/08. Leaderboard/10.08.1 leaderboardData.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"88b19943-2b82-404f-b798-e2d6b32c782c","title":"Get leaderboard data successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/08. Leaderboard/10.08.1 leaderboardData.cy.js","file":"cypress/e2e/10. Enrollment Service/08. Leaderboard/10.08.1 leaderboardData.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get leaderboard data or not","fullTitle":"Get leaderboard data successfully with status code 200 Checking if should be able Get leaderboard data or not","timedOut":null,"duration":682,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/progress/leaderboard\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get leaderboard data Response:\", response.body);\n    console.log(\"Get leaderboard data Response:\", response.body);\n  } else {\n    cy.log(\"Get leaderboard data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c4f59cb9-57cb-459e-9a19-58eda80bde54","parentUUID":"88b19943-2b82-404f-b798-e2d6b32c782c","isHook":false,"skipped":false}],"suites":[],"passes":["c4f59cb9-57cb-459e-9a19-58eda80bde54"],"failures":[],"pending":[],"skipped":[],"duration":682,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"99418acb-bcd8-42c1-a2ca-fdcf9476300d","title":"","fullFile":"cypress/e2e/10. Enrollment Service/09. Test Question/10.09.01 getTestQuestion.cy.js","file":"cypress/e2e/10. Enrollment Service/09. Test Question/10.09.01 getTestQuestion.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2796b642-782a-4060-8a0b-f40eb87d4b47","title":"Get test question successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/09. Test Question/10.09.01 getTestQuestion.cy.js","file":"cypress/e2e/10. Enrollment Service/09. Test Question/10.09.01 getTestQuestion.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get test question or not","fullTitle":"Get test question successfully with status code 200 Checking if should be able to Get test question or not","timedOut":null,"duration":915,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/enrollment/enrollment-test/getquestions/${questionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get test question successfully\");\n    console.log(\"Get test question successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get test question failed with status code:\", response.status);\n    console.log(`Get test question failed with status code ${response.status}`);\n    cy.log(`Get test question failed  ${response.body.error}`);\n    console.log(`Get test question failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"589921a4-ca89-4655-8411-2bfb3376c8c7","parentUUID":"2796b642-782a-4060-8a0b-f40eb87d4b47","isHook":false,"skipped":false}],"suites":[],"passes":["589921a4-ca89-4655-8411-2bfb3376c8c7"],"failures":[],"pending":[],"skipped":[],"duration":915,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5f304697-dcdd-40a7-9aa9-962c9acf033c","title":"","fullFile":"cypress/e2e/10. Enrollment Service/10. Submit Test Answer/10.10.01 submitTestAnswer.cy.js","file":"cypress/e2e/10. Enrollment Service/10. Submit Test Answer/10.10.01 submitTestAnswer.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"315c1fb0-542b-4c10-9199-765b56487745","title":"Submit test answer successfully with status code 200","fullFile":"cypress/e2e/10. Enrollment Service/10. Submit Test Answer/10.10.01 submitTestAnswer.cy.js","file":"cypress/e2e/10. Enrollment Service/10. Submit Test Answer/10.10.01 submitTestAnswer.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Submit test answer or not","fullTitle":"Submit test answer successfully with status code 200 Checking if should be able to Submit test answer or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/enrollment/enrollment-test/submit-answer/${questionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Submit test answer successfully\");\n    console.log(\"Submit test answer successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Submit test answer failed with status code:\", response.status);\n    console.log(`Submit test answer failed with status code ${response.status}`);\n    cy.log(`Submit test answer failed  ${response.body.error}`);\n    console.log(`Submit test answer failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"92e25f84-f318-45d5-9474-6b3fa3463c06","parentUUID":"315c1fb0-542b-4c10-9199-765b56487745","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["92e25f84-f318-45d5-9474-6b3fa3463c06"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e2abefbc-58fb-4de2-bd79-21d6ab85ac9c","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.1 User Register/1.01.1 userRegistration.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.1 User Register/1.01.1 userRegistration.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6acebaf9-b2a9-46db-838b-aff9caafaa80","title":"Register user to the portal with valid credential and get stats code 200","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.1 User Register/1.01.1 userRegistration.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.1 User Register/1.01.1 userRegistration.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to register user or not","fullTitle":"Register user to the portal with valid credential and get stats code 200 Checking if should be able to register user or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/register\",\n  body: {\n    firstName: faker.person.firstName(\"male\"),\n    lastName: faker.person.lastName(\"male\"),\n    phone: faker.phone.number(),\n    email: faker.internet.email(),\n    confirm: \"Ashraful186@\",\n    password: \"Ashraful186@\",\n    referredBy: null\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User register successfully\");\n    console.log(\"User register successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Register failed with status code:\", response.status);\n    console.log(`Register failed with status code ${response.status}`);\n    cy.log(`Register failed  ${response.body.error}`);\n    console.log(`Register failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"cd8700e9-5c52-4f88-9242-224fd9326d0a","parentUUID":"6acebaf9-b2a9-46db-838b-aff9caafaa80","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["cd8700e9-5c52-4f88-9242-224fd9326d0a"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"9b8089ff-c4fd-4328-b991-b2d010163d4c","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.2 User Login/1.01.2 userLogin.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.2 User Login/1.01.2 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"979ec2dd-7488-4f94-803b-1173c447c39c","title":"Login to the portal with valid credential and get stats code 200","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.2 User Login/1.01.2 userLogin.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.2 User Login/1.01.2 userLogin.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to login user","fullTitle":"Login to the portal with valid credential and get stats code 200 Checking if should be able to login user","timedOut":null,"duration":827,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/login\",\n  body: {\n    email: userEmail,\n    password: userPassword\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    const {\n      token,\n      user\n    } = response.body;\n    const studentToken = token;\n    const studentLoginID = user._id;\n    // Store token and login ID to fixtures\n    cy.writeFile(\"cypress/fixtures/studentToken.json\", {\n      studentLoginToken: studentToken\n    });\n    // cy.writeFile(\"cypress/fixtures/studentLoginID.json\", {\n    //   userId: studentLoginID,\n    // });\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"token\");\n    expect(response.body.success).to.eq(true);\n    expect(response.duration).to.be.lessThan(2000);\n    cy.log(\"User Token:\", studentToken);\n    cy.log(\"User ID:\", studentLoginID);\n    console.log(\"User Token:\", studentToken);\n    console.log(\"User ID:\", studentLoginID);\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Login failed with status:\", response.status);\n    cy.log(`Login failed  ${response.body.error}`);\n    cy.log(`Login failed with status code ${response.status}`);\n  }\n});","err":{},"uuid":"b29145df-d1f5-4b21-bff7-e992aab14430","parentUUID":"979ec2dd-7488-4f94-803b-1173c447c39c","isHook":false,"skipped":false}],"suites":[],"passes":["b29145df-d1f5-4b21-bff7-e992aab14430"],"failures":[],"pending":[],"skipped":[],"duration":827,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"24c76dca-e394-4311-aec2-a626429834ff","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.3 Verify User/1.01.3 verifyUser.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.3 Verify User/1.01.3 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0e904695-d65a-4645-be9f-1c90ae23a30a","title":"Verify user successfully with status code 200","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.3 Verify User/1.01.3 verifyUser.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.3 Verify User/1.01.3 verifyUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to verify user","fullTitle":"Verify user successfully with status code 200 Checking if should be able to verify user","timedOut":null,"duration":1150,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/verify\",\n  headers: {\n    Authorization: `Bearer ${studentToken}`\n  },\n  body: {}\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"User verified successfully\");\n    console.log(\"User verified successfully\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"6357b0f7-50a2-4d6a-b588-272e38fa8398","parentUUID":"0e904695-d65a-4645-be9f-1c90ae23a30a","isHook":false,"skipped":false}],"suites":[],"passes":["6357b0f7-50a2-4d6a-b588-272e38fa8398"],"failures":[],"pending":[],"skipped":[],"duration":1150,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"757f7ed7-1fd8-4903-ab64-4d0b1a308d90","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.4 Send OTP/1.01.4 sendOtp.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.4 Send OTP/1.01.4 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c1eee981-74f5-463b-9fe6-7f55e6a58587","title":"Send OTP to email successfully with status code 200","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.4 Send OTP/1.01.4 sendOtp.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.4 Send OTP/1.01.4 sendOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to send OTP to email","fullTitle":"Send OTP to email successfully with status code 200 Checking if should be able to send OTP to email","timedOut":null,"duration":878,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/sendotp\",\n  body: {\n    userId: userId,\n    channel: \"email\",\n    captchaToken: \"\"\n  }\n}).then(response => {\n  if (response.status === 200) {\n    cy.log(\"Send OTP successful\");\n    console.log(\"Send OTP successful\");\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(3000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"dcf4b7be-0700-4517-9e55-2b33ddcfb229","parentUUID":"c1eee981-74f5-463b-9fe6-7f55e6a58587","isHook":false,"skipped":false}],"suites":[],"passes":["dcf4b7be-0700-4517-9e55-2b33ddcfb229"],"failures":[],"pending":[],"skipped":[],"duration":878,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ffa6648c-5742-4422-8c09-c53419950dc1","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.5 Verify OTP/1.01.5 verifyOtp.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.5 Verify OTP/1.01.5 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"01ece8e8-cd97-497d-8778-6e617eed9d34","title":"Verify OTP with status code 200","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.5 Verify OTP/1.01.5 verifyOtp.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.5 Verify OTP/1.01.5 verifyOtp.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"should be able to verify","fullTitle":"Verify OTP with status code 200 should be able to verify","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"const otp = \"731258\";\ncy.request({\n  method: \"POST\",\n  url: \"/user/verifyotp\",\n  body: {\n    otp: otp,\n    channel: \"email\",\n    userId: studentID // Use student ID obtained from fixture\n  }\n}).then(response => {\n  // Check if the request was successful\n  if (response.status === 200) {\n    cy.log(\"OTP verification successful\");\n    console.log(\"OTP verification successful\");\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n  } else {\n    // Handle unsuccessful verification\n    cy.log(\"Verification failed with status:\", response.status);\n    cy.log(response.body);\n    console.log(\"Verification failed with status:\", response.status);\n    console.log(response.body);\n  }\n});","err":{},"uuid":"a7333752-75ee-4b85-8078-1b40c7c75e56","parentUUID":"01ece8e8-cd97-497d-8778-6e617eed9d34","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["a7333752-75ee-4b85-8078-1b40c7c75e56"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f1397ff5-b6f0-4551-a7e8-eadfb850f4bb","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.6 Forgot Password/1.01.6 forgotPassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.6 Forgot Password/1.01.6 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3058e63b-73fc-470c-aef7-59115aad3690","title":"Forgot password functionality if I forgot my password successfully with status code 200","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.6 Forgot Password/1.01.6 forgotPassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.6 Forgot Password/1.01.6 forgotPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if a user can use forgot password functionality in the browser or not","fullTitle":"Forgot password functionality if I forgot my password successfully with status code 200 Checking if a user can use forgot password functionality in the browser or not","timedOut":null,"duration":824,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/user/password/forgot\",\n  body: {\n    phone: studentNumber,\n    email: studentEmail,\n    channel: \"email\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"isOtpSend\", true);\n    cy.log(\"Forgot Password Response:\", response.body);\n    console.log(\"Forgot Password Response:\", response.body);\n  } else {\n    cy.log(\"Forgot password failed due to: \", response.body.error);\n  }\n});","err":{},"uuid":"6947ed00-d911-4100-9f1a-20885a55bd23","parentUUID":"3058e63b-73fc-470c-aef7-59115aad3690","isHook":false,"skipped":false}],"suites":[],"passes":["6947ed00-d911-4100-9f1a-20885a55bd23"],"failures":[],"pending":[],"skipped":[],"duration":824,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"26f251dd-88e6-4628-8d4d-f6da348a4d3a","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.7 Reset Password/1.01.7 resetPassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.7 Reset Password/1.01.7 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8c37a563-b7e8-4011-92e3-66cb4e3d9357","title":"Reset my password successfully with status code 200","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.7 Reset Password/1.01.7 resetPassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.7 Reset Password/1.01.7 resetPassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Reset my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":632,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/password/reset\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    email: studentEmail,\n    phone: studentNumber,\n    channel: \"email\",\n    otp: otp,\n    password: password\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.property(\"success\", true);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"59401a35-6672-421c-a193-a207068b5a20","parentUUID":"8c37a563-b7e8-4011-92e3-66cb4e3d9357","isHook":false,"skipped":false}],"suites":[],"passes":["59401a35-6672-421c-a193-a207068b5a20"],"failures":[],"pending":[],"skipped":[],"duration":632,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b313e062-c86c-45fc-847d-d38966f03e96","title":"","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.8 Change Password/1.01.8 changePassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.8 Change Password/1.01.8 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"00bbbb50-7757-491a-87f6-d9f259edff13","title":"Change my password successfully with status code 200","fullFile":"cypress/e2e/01. User Service/01. Auth/1.01.8 Change Password/1.01.8 changePassword.cy.js","file":"cypress/e2e/01. User Service/01. Auth/1.01.8 Change Password/1.01.8 changePassword.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if the user can reset their password or not","fullTitle":"Change my password successfully with status code 200 Checking if the user can reset their password or not","timedOut":null,"duration":802,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: \"/user/changepassword\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPassword: \"Ashraful186@\",\n    newPassword: \"Ashraful186@\",\n    confirmPassword: \"Ashraful186@\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Password Reset Response:\", response.body);\n    console.log(\"Password Reset Response:\", response.body);\n  } else {\n    cy.log(\"Reset password failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7b41dffd-7d86-4eef-9969-502483352abc","parentUUID":"00bbbb50-7757-491a-87f6-d9f259edff13","isHook":false,"skipped":false}],"suites":[],"passes":["7b41dffd-7d86-4eef-9969-502483352abc"],"failures":[],"pending":[],"skipped":[],"duration":802,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"87f37980-0d24-4000-b3d3-48581903f0ac","title":"","fullFile":"cypress/e2e/01. User Service/11. PresentationSlide/01 My Slides/01.11.01 getMySlides.cy.js","file":"cypress/e2e/01. User Service/11. PresentationSlide/01 My Slides/01.11.01 getMySlides.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"28bad33b-9bc9-4a30-8cf7-93d4d45432c9","title":"Get my slides successfully with status code 200","fullFile":"cypress/e2e/01. User Service/11. PresentationSlide/01 My Slides/01.11.01 getMySlides.cy.js","file":"cypress/e2e/01. User Service/11. PresentationSlide/01 My Slides/01.11.01 getMySlides.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get my slides or not","fullTitle":"Get my slides successfully with status code 200 Checking if should be able to Get my slides or not","timedOut":null,"duration":781,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/slide/myslides?page=${page}&limit=${limit}&query=${query}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get my slides successfully\");\n    console.log(\"Get my slides successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get my slides failed with status code:\", response.status);\n    console.log(`Get my slides failed with status code ${response.status}`);\n    cy.log(`Get my slides failed  ${response.body.error}`);\n    console.log(`Get my slides failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"c37569d4-9f88-4fef-b477-5a345678c19e","parentUUID":"28bad33b-9bc9-4a30-8cf7-93d4d45432c9","isHook":false,"skipped":false}],"suites":[],"passes":["c37569d4-9f88-4fef-b477-5a345678c19e"],"failures":[],"pending":[],"skipped":[],"duration":781,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"48d4f78f-2f56-478a-81fe-5477b4dd43e6","title":"","fullFile":"cypress/e2e/01. User Service/11. PresentationSlide/02. Single Slide/01.11.02 getSingleSlide.cy.js","file":"cypress/e2e/01. User Service/11. PresentationSlide/02. Single Slide/01.11.02 getSingleSlide.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2da3367a-cc9b-408d-9cfd-aaffdf85ee71","title":"Get single slide successfully with status code 200","fullFile":"cypress/e2e/01. User Service/11. PresentationSlide/02. Single Slide/01.11.02 getSingleSlide.cy.js","file":"cypress/e2e/01. User Service/11. PresentationSlide/02. Single Slide/01.11.02 getSingleSlide.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Get single slide or not","fullTitle":"Get single slide successfully with status code 200 Checking if should be able to Get single slide or not","timedOut":null,"duration":576,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/slide/single/${slideId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get single slide successfully\");\n    console.log(\"Get single slide successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get single slide failed with status code:\", response.status);\n    console.log(`Get single slide failed with status code ${response.status}`);\n    cy.log(`Get single slide failed  ${response.body.error}`);\n    console.log(`Get single slide failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"f4a1a11e-adce-4402-a788-d81a62c0f090","parentUUID":"2da3367a-cc9b-408d-9cfd-aaffdf85ee71","isHook":false,"skipped":false}],"suites":[],"passes":["f4a1a11e-adce-4402-a788-d81a62c0f090"],"failures":[],"pending":[],"skipped":[],"duration":576,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"faef7d41-38b9-4608-928e-7d174d1419bd","title":"","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.1 Course Content/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.1 Course Content/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d7f04292-3150-4d8b-9460-fed57624fbe0","title":"Get course content by category successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.1 Course Content/3.01.1 getCourseContent.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.1 Course Content/3.01.1 getCourseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get course data or not","fullTitle":"Get course content by category successfully with status code 200 Checking if should be able get course data or not","timedOut":null,"duration":1107,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getbycourse/${category}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course data Response:\", response.body);\n    console.log(\"Get course data Response:\", response.body);\n  } else {\n    cy.log(\"Get course data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7e816f3f-9b02-4569-aedd-949d233e6fe7","parentUUID":"d7f04292-3150-4d8b-9460-fed57624fbe0","isHook":false,"skipped":false}],"suites":[],"passes":["7e816f3f-9b02-4569-aedd-949d233e6fe7"],"failures":[],"pending":[],"skipped":[],"duration":1107,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"15aaceba-fa7c-4930-abf2-cd9d02d318ec","title":"","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.2 Content By Id/3.01.2 getContentById.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.2 Content By Id/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8a00740a-2f62-4a0b-bf91-90d18cb216d5","title":"Get content by content Id successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.2 Content By Id/3.01.2 getContentById.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.2 Content By Id/3.01.2 getContentById.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get content by content Id or not","fullTitle":"Get content by content Id successfully with status code 200 Checking if should be able get content by content Id or not","timedOut":null,"duration":707,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/getcontent/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course by course Id Response:\", response.body);\n    console.log(\"Get course data by course id Response:\", response.body);\n  } else {\n    cy.log(\"Get content by content Id failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"bd513225-1342-4e6a-8039-f04a723cb153","parentUUID":"8a00740a-2f62-4a0b-bf91-90d18cb216d5","isHook":false,"skipped":false}],"suites":[],"passes":["bd513225-1342-4e6a-8039-f04a723cb153"],"failures":[],"pending":[],"skipped":[],"duration":707,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3c4f5276-c554-4a01-af9d-b26d71614277","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.1 All Community Post/3.02.1 getAllCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.1 All Community Post/3.02.1 getAllCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a4def71a-0569-45e1-9e2e-5e329299427e","title":"Get all community post successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.1 All Community Post/3.02.1 getAllCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.1 All Community Post/3.02.1 getAllCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get all community post or not","fullTitle":"Get all community post successfully with status code 200 Checking if should be able get all community post or not","timedOut":null,"duration":732,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/getall\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    // \"page\": \"1\",\n    // \"limit\": \"10\",\n    // \"query\": \"\",\n    // \"tags\": [],\n    // \"user\": \"\",\n    // \"filterBy\": \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all community post Response:\", response.body);\n    console.log(\"Get all community post Response:\", response.body);\n  } else {\n    cy.log(\"Get all community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cc25bcf3-a6fc-4723-964a-34428fd969d7","parentUUID":"a4def71a-0569-45e1-9e2e-5e329299427e","isHook":false,"skipped":false}],"suites":[],"passes":["cc25bcf3-a6fc-4723-964a-34428fd969d7"],"failures":[],"pending":[],"skipped":[],"duration":732,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"984e6daa-8abf-4c07-a5f6-2f03bedae0ec","title":"","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.3 Lab Content/3.01.3 getLabContent.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.3 Lab Content/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d88edd29-6c23-42a1-b651-ea13b76c7e26","title":"Get Lab Content successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/01. Content Flow/3.01.3 Lab Content/3.01.3 getLabContent.cy.js","file":"cypress/e2e/03. Content Service/01. Content Flow/3.01.3 Lab Content/3.01.3 getLabContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Lab Content or not","fullTitle":"Get Lab Content successfully with status code 200 Checking if should be able get Lab Content or not","timedOut":null,"duration":1202,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/labcontent\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get lab content Response:\", response.body);\n    console.log(\"Get lab content Response:\", response.body);\n  } else {\n    cy.log(\"Get lab content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d352c89b-84fd-41e8-9323-15e0b423cab7","parentUUID":"d88edd29-6c23-42a1-b651-ea13b76c7e26","isHook":false,"skipped":false}],"suites":[],"passes":["d352c89b-84fd-41e8-9323-15e0b423cab7"],"failures":[],"pending":[],"skipped":[],"duration":1202,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"30e430b9-8348-4fca-8eca-9d992b0d35a6","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.2 Create Community Post/3.02.2 createCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.2 Create Community Post/3.02.2 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7cb40562-822e-407e-a3e9-c4f89d9b4a8f","title":"Create community post successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.2 Create Community Post/3.02.2 createCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.2 Create Community Post/3.02.2 createCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able create community post or not","fullTitle":"Create community post successfully with status code 200 Checking if should be able create community post or not","timedOut":null,"duration":965,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    title: \"Mobile App Api Testing\",\n    description: \"community post for mobile app api testing\",\n    attachments: [],\n    tags: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/communityPostId.json\", {\n      community_postId: response.body.post._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create community post Response:\", response.body);\n    console.log(\"Create community post Response:\", response.body);\n  } else {\n    cy.log(\"Create community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c7cc313f-e37b-4b4d-b258-e9a2ccd62bf7","parentUUID":"7cb40562-822e-407e-a3e9-c4f89d9b4a8f","isHook":false,"skipped":false}],"suites":[],"passes":["c7cc313f-e37b-4b4d-b258-e9a2ccd62bf7"],"failures":[],"pending":[],"skipped":[],"duration":965,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a3bf271d-a0a7-484f-b1bc-e05a27a9f5f1","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.3 Single Community Post/3.02.3 getSingleCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.3 Single Community Post/3.02.3 getSingleCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6798226d-c3ae-4e62-bd1f-e8f13bdb1d1e","title":"Get single community post successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.3 Single Community Post/3.02.3 getSingleCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.3 Single Community Post/3.02.3 getSingleCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get single community post or not","fullTitle":"Get single community post successfully with status code 200 Checking if should be able get single community post or not","timedOut":null,"duration":616,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/content/community/post/${communityPostId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get single community post Response:\", response.body);\n    console.log(\"Get single community post Response:\", response.body);\n  } else {\n    cy.log(\"Get single community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"cc18d67b-0301-471a-b205-ba309d8db096","parentUUID":"6798226d-c3ae-4e62-bd1f-e8f13bdb1d1e","isHook":false,"skipped":false}],"suites":[],"passes":["cc18d67b-0301-471a-b205-ba309d8db096"],"failures":[],"pending":[],"skipped":[],"duration":616,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6f65a779-1745-4b34-b819-a8cd6182e097","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.4 Edit Community Post/3.02.4 editCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.4 Edit Community Post/3.02.4 editCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8ea070c3-3862-41d3-b664-ebd5aa91c40d","title":"Edit community post successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.4 Edit Community Post/3.02.4 editCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.4 Edit Community Post/3.02.4 editCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Edit community post or not","fullTitle":"Edit community post successfully with status code 200 Checking if should be able Edit community post or not","timedOut":null,"duration":683,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/content/community/post/edit/${communityPostId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    title: \"Community post testing for edit\",\n    description: \"Description text\",\n    tags: \"#app\",\n    attachments: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Edit community post Response:\", response.body);\n    console.log(\"Edit community post Response:\", response.body);\n  } else {\n    cy.log(\"Edit community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c68fafa8-2559-498f-95ab-00cff6cb7f58","parentUUID":"8ea070c3-3862-41d3-b664-ebd5aa91c40d","isHook":false,"skipped":false}],"suites":[],"passes":["c68fafa8-2559-498f-95ab-00cff6cb7f58"],"failures":[],"pending":[],"skipped":[],"duration":683,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"1dab3daf-8cb7-452a-9113-f1f6fc213768","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.5 Save Community Post/3.02.5 saveCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.5 Save Community Post/3.02.5 saveCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"977f9608-83b6-415a-861a-c2aee4c00ce3","title":"Save community post successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.5 Save Community Post/3.02.5 saveCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.5 Save Community Post/3.02.5 saveCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Save community post or not","fullTitle":"Save community post successfully with status code 200 Checking if should be able Save community post or not","timedOut":null,"duration":581,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/option/save\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    post: communityPostId,\n    action: \"save\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Save community post Response:\", response.body);\n    console.log(\"Save community post Response:\", response.body);\n  } else {\n    cy.log(\"Save community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e2bf971d-1d67-4a2d-9fa8-07900ff686be","parentUUID":"977f9608-83b6-415a-861a-c2aee4c00ce3","isHook":false,"skipped":false}],"suites":[],"passes":["e2bf971d-1d67-4a2d-9fa8-07900ff686be"],"failures":[],"pending":[],"skipped":[],"duration":581,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"05d83e20-3438-4a52-ad64-b7adcc0d1f14","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.6 Community Post Reaction/3.02.6 communityPostReaction.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.6 Community Post Reaction/3.02.6 communityPostReaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7e051cbb-5fe2-4e36-9a68-69c07a6fa89a","title":"Community post reaction successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.6 Community Post Reaction/3.02.6 communityPostReaction.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.6 Community Post Reaction/3.02.6 communityPostReaction.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Community post reaction or not","fullTitle":"Community post reaction successfully with status code 200 Checking if should be able Community post reaction or not","timedOut":null,"duration":634,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/content/community/post/react/${communityPostId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    symbol: \"😀\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Community post reaction Response:\", response.body);\n    console.log(\"Community post reaction Response:\", response.body);\n  } else {\n    cy.log(\"Community post reaction failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a22924a1-ec2e-45b0-8de3-f02cd55ad3d1","parentUUID":"7e051cbb-5fe2-4e36-9a68-69c07a6fa89a","isHook":false,"skipped":false}],"suites":[],"passes":["a22924a1-ec2e-45b0-8de3-f02cd55ad3d1"],"failures":[],"pending":[],"skipped":[],"duration":634,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e1c62daf-886c-4039-ab24-11579e384975","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.7 Report Community Post/3.02.7 reportCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.7 Report Community Post/3.02.7 reportCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7976a422-0eeb-4188-ba89-2a9b3f954239","title":"Report community post successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.7 Report Community Post/3.02.7 reportCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.7 Report Community Post/3.02.7 reportCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Report community post or not","fullTitle":"Report community post successfully with status code 200 Checking if should be able Report community post or not","timedOut":null,"duration":606,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/content/community/post/option/save\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    post: communityPostId,\n    action: \"report\",\n    reportReason: \"spam\",\n    note: \"note\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Report community post Response:\", response.body);\n    console.log(\"Report community post Response:\", response.body);\n  } else {\n    cy.log(\"Report community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c3113853-09b3-4a72-9f19-ea5fa325a695","parentUUID":"7976a422-0eeb-4188-ba89-2a9b3f954239","isHook":false,"skipped":false}],"suites":[],"passes":["c3113853-09b3-4a72-9f19-ea5fa325a695"],"failures":[],"pending":[],"skipped":[],"duration":606,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"aa334bf2-2633-48e1-b206-154cd0ac3a3b","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.8 Community Top Contributor/3.02.8 communityTopContributor.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.8 Community Top Contributor/3.02.8 communityTopContributor.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b10dee06-880f-4396-bd72-93f1d58cc616","title":"Get Community top contribute successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.8 Community Top Contributor/3.02.8 communityTopContributor.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.8 Community Top Contributor/3.02.8 communityTopContributor.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get Community top contribute or not","fullTitle":"Get Community top contribute successfully with status code 200 Checking if should be able Get Community top contribute or not","timedOut":null,"duration":568,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/content/community/top-users\",\n  headers: {\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get Community top contribute Response:\", response.body);\n    console.log(\"Get Community top contribute Response:\", response.body);\n  } else {\n    cy.log(\"Get Community top contribute failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"67cafdaf-7202-4527-b4ab-efb500b476ed","parentUUID":"b10dee06-880f-4396-bd72-93f1d58cc616","isHook":false,"skipped":false}],"suites":[],"passes":["67cafdaf-7202-4527-b4ab-efb500b476ed"],"failures":[],"pending":[],"skipped":[],"duration":568,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"15722938-62e7-4270-8ab9-6aea8eaf8499","title":"","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.9 Delete Community Post/3.02.9 deleteCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.9 Delete Community Post/3.02.9 deleteCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"31dfc2aa-4b49-4c1a-b3cd-d13ceeb3669b","title":"Delete community post successfully with status code 200","fullFile":"cypress/e2e/03. Content Service/02. Community Flow/3.02.9 Delete Community Post/3.02.9 deleteCommunityPost.cy.js","file":"cypress/e2e/03. Content Service/02. Community Flow/3.02.9 Delete Community Post/3.02.9 deleteCommunityPost.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete community post or not","fullTitle":"Delete community post successfully with status code 200 Checking if should be able Delete community post or not","timedOut":null,"duration":632,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/content/community/post/delete/${communityPostId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete community post Response:\", response.body);\n    console.log(\"Delete community post Response:\", response.body);\n  } else {\n    cy.log(\"Delete community post failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"62f5f644-c1d3-4514-8e0e-f015877efe93","parentUUID":"31dfc2aa-4b49-4c1a-b3cd-d13ceeb3669b","isHook":false,"skipped":false}],"suites":[],"passes":["62f5f644-c1d3-4514-8e0e-f015877efe93"],"failures":[],"pending":[],"skipped":[],"duration":632,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0b670687-4378-47a9-a762-3c1e539c5703","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5154230b-6592-46d6-805f-b7ecdf04b423","title":"Get all programs successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.1 All Programs/4.01.1 allPrograms.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all programs or not","fullTitle":"Get all programs successfully with status code 200 Checking if should be able Get all programs or not","timedOut":null,"duration":791,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/organization/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPage: \"1\",\n    limit: \"10\",\n    type: type\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all programs Response:\", response.body);\n    console.log(\"Get all programs Response:\", response.body);\n  } else {\n    cy.log(\"Get all programs failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7cdf4b33-6597-40ec-b966-b2729664b8df","parentUUID":"5154230b-6592-46d6-805f-b7ecdf04b423","isHook":false,"skipped":false}],"suites":[],"passes":["7cdf4b33-6597-40ec-b966-b2729664b8df"],"failures":[],"pending":[],"skipped":[],"duration":791,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f6aa2b80-0906-4cf2-a188-f5f1646e3090","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c0734fdc-b16a-41eb-b993-11fa5662f8b3","title":"Get all Courses successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.2 All Courses/4.01.2 allCourses.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all Courses or not","fullTitle":"Get all Courses successfully with status code 200 Checking if should be able Get all Courses or not","timedOut":null,"duration":717,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/organization/${slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    currentPage: \"1\",\n    limit: \"10\",\n    type: type\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all Courses Response:\", response.body);\n    console.log(\"Get all Courses Response:\", response.body);\n  } else {\n    cy.log(\"Get all Courses failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"2f7f23ce-f329-44e8-beb8-5716ccccac88","parentUUID":"c0734fdc-b16a-41eb-b993-11fa5662f8b3","isHook":false,"skipped":false}],"suites":[],"passes":["2f7f23ce-f329-44e8-beb8-5716ccccac88"],"failures":[],"pending":[],"skipped":[],"duration":717,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6b08b69a-d35f-4f44-89d7-fe6412cf0476","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2f5bcb51-a91d-453b-8da3-848b79bb93fa","title":"Get course content successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.3 Course Content/4.01.3 courseContent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course content or not","fullTitle":"Get course content successfully with status code 200 Checking if should be able Get course content or not","timedOut":null,"duration":865,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/content/${programSlug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course content Response:\", response.body);\n    console.log(\"Get course content Response:\", response.body);\n  } else {\n    cy.log(\"Get course content failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"29c9e04e-83d6-4d20-8068-821720424f1b","parentUUID":"2f5bcb51-a91d-453b-8da3-848b79bb93fa","isHook":false,"skipped":false}],"suites":[],"passes":["29c9e04e-83d6-4d20-8068-821720424f1b"],"failures":[],"pending":[],"skipped":[],"duration":865,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6e05ccab-4537-4182-9d6e-bff974324803","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"3f642676-6b9d-47dd-8d37-0f2d0c8fd6a1","title":"Get single bootcamps details successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.4 Single Bootcamps Details/4.01.4 singleBootcampsDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get single bootcamps details or not","fullTitle":"Get single bootcamps details successfully with status code 200 Checking if should be able Get single bootcamps details or not","timedOut":null,"duration":975,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/single/${program_slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get single bootcamps details Response:\", response.body);\n    console.log(\"Get single bootcamps details Response:\", response.body);\n  } else {\n    cy.log(\"Get single bootcamps details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"78e15454-b880-49b1-bea7-b1857668333d","parentUUID":"3f642676-6b9d-47dd-8d37-0f2d0c8fd6a1","isHook":false,"skipped":false}],"suites":[],"passes":["78e15454-b880-49b1-bea7-b1857668333d"],"failures":[],"pending":[],"skipped":[],"duration":975,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"71c7528b-90dd-4db5-b7f1-4b1114892ec6","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"de1158fb-63f2-40e4-8754-8a646ec2d6af","title":"Get course details successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.5 Course Details v2/4.01.5 courseDetailsV2.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course details or not","fullTitle":"Get course details successfully with status code 200 Checking if should be able Get course details or not","timedOut":null,"duration":753,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/contentv2/${program_slug}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course details Response:\", response.body);\n    console.log(\"Get course details Response:\", response.body);\n  } else {\n    cy.log(\"Get course details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"98cbc101-1598-4e94-b472-043cc8144ed3","parentUUID":"de1158fb-63f2-40e4-8754-8a646ec2d6af","isHook":false,"skipped":false}],"suites":[],"passes":["98cbc101-1598-4e94-b472-043cc8144ed3"],"failures":[],"pending":[],"skipped":[],"duration":753,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0781d32e-373f-4572-8ad3-f91858e09172","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e6e6fd10-df88-472f-9446-def1daa89ae2","title":"Get course roadmap data successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.6 Course Roadmap/4.01.6 courseRoadmap.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get course roadmap data or not","fullTitle":"Get course roadmap data successfully with status code 200 Checking if should be able Get course roadmap data or not","timedOut":null,"duration":718,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/roadmap/find/${courseId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get course roadmap data Response:\", response.body);\n    console.log(\"Get course roadmap data Response:\", response.body);\n  } else {\n    cy.log(\"Get course roadmap data failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"56e3e1f5-0794-4828-a196-37e3979f9e3a","parentUUID":"e6e6fd10-df88-472f-9446-def1daa89ae2","isHook":false,"skipped":false}],"suites":[],"passes":["56e3e1f5-0794-4828-a196-37e3979f9e3a"],"failures":[],"pending":[],"skipped":[],"duration":718,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ee649624-6221-4c32-b414-9f3dbb952251","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"7e2d8697-2282-41f9-a691-d3e3fb84ff9c","title":"Get reviews categories successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.7 Reviews Categories/4.01.7 reviewsCategories.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get reviews categories or not","fullTitle":"Get reviews categories successfully with status code 200 Checking if should be able Get reviews categories or not","timedOut":null,"duration":747,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/review/get/${course_id}?fields[]=categories&page=1&limit=10`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get reviews categories Response:\", response.body);\n    console.log(\"Get reviews categories Response:\", response.body);\n  } else {\n    cy.log(\"Get reviews categories failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"10571bf5-eda0-46cb-9567-8ac252bec7b9","parentUUID":"7e2d8697-2282-41f9-a691-d3e3fb84ff9c","isHook":false,"skipped":false}],"suites":[],"passes":["10571bf5-eda0-46cb-9567-8ac252bec7b9"],"failures":[],"pending":[],"skipped":[],"duration":747,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e9123a54-9eee-4f87-a68d-72b2c94ba9b8","title":"","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"1271880c-89f0-47f3-bfb9-265f4ffb636a","title":"Get student reviews course successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","file":"cypress/e2e/04. Program Service/01. Programs/4.01.8 Course Student Reviews/4.01.8 courseStudentReviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able get Get student reviews course or not","fullTitle":"Get student reviews course successfully with status code 200 Checking if should be able get Get student reviews course or not","timedOut":null,"duration":705,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/course/review/get/${course_id}?fields[]=reviews&&page=1&limit=10&category=student`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get student reviews course Response:\", response.body);\n    console.log(\"Get student reviews course Response:\", response.body);\n  } else {\n    cy.log(\"Get student reviews course failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"55f5cbf5-5f6c-43de-8074-6f48987510d2","parentUUID":"1271880c-89f0-47f3-bfb9-265f4ffb636a","isHook":false,"skipped":false}],"suites":[],"passes":["55f5cbf5-5f6c-43de-8074-6f48987510d2"],"failures":[],"pending":[],"skipped":[],"duration":705,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"6aa76635-aaf0-4b0d-a955-968afa33b8e4","title":"","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b246bfaf-6a4b-4180-840b-331da1c52d0d","title":"Get chapter by category successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.1 Chapter By Category/4.02.1 chapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get chapter by category or not","fullTitle":"Get chapter by category successfully with status code 200 Checking if should be able Get chapter by category or not","timedOut":null,"duration":938,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/course/chapterv2/get/${program_slug}/${categoryId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    parent: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get chapter by category Response:\", response.body);\n    console.log(\"Get chapter by category Response:\", response.body);\n  } else {\n    cy.log(\"Get chapter by category failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b8102cc5-5737-449b-ab22-76c54adf7856","parentUUID":"b246bfaf-6a4b-4180-840b-331da1c52d0d","isHook":false,"skipped":false}],"suites":[],"passes":["b8102cc5-5737-449b-ab22-76c54adf7856"],"failures":[],"pending":[],"skipped":[],"duration":938,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"eb1a3205-6a08-4c79-9d4c-ff11eccab85e","title":"","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"86a219d2-d35c-4c19-ad45-4a4f8e7d59d2","title":"Get preview chapter successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.2 Preview Chapter/4.02.2 previewChapter.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get preview chapter or not","fullTitle":"Get preview chapter successfully with status code 200 Checking if should be able Get preview chapter or not","timedOut":null,"duration":820,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/course/chapterv2/preview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    courseId: \"64fcb957b0cf6e9ae43d126d\",\n    fields: [\"chapters\", \"categories\", \"totalDuration\", \"totalChapter\", \"totalLesson\"]\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get preview chapter Response:\", response.body);\n    console.log(\"Get preview chapter Response:\", response.body);\n  } else {\n    cy.log(\"Get preview chapter failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"6bebe23d-61e7-4321-b480-632ac2e3d1c1","parentUUID":"86a219d2-d35c-4c19-ad45-4a4f8e7d59d2","isHook":false,"skipped":false}],"suites":[],"passes":["6bebe23d-61e7-4321-b480-632ac2e3d1c1"],"failures":[],"pending":[],"skipped":[],"duration":820,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e3fe0d7c-e45a-434e-9d0f-01de46f075c9","title":"","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6d4dbc61-d29f-4964-a800-4553219666a5","title":"Get preview chapter by category successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","file":"cypress/e2e/04. Program Service/02. Chapter/4.02.3 Preview Chapter By Category/4.02.4 previewChapterByCategory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get preview chapter by category or not","fullTitle":"Get preview chapter by category successfully with status code 200 Checking if should be able Get preview chapter by category or not","timedOut":null,"duration":657,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/course/chapterv2/preview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    courseId: \"64fcb957b0cf6e9ae43d126d\",\n    fields: [\"chapters\"],\n    categoryId: \"65eb5eaff6d7cc3e14e90cd7\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get preview chapter by category Response:\", response.body);\n    console.log(\"Get preview chapter by category Response:\", response.body);\n  } else {\n    cy.log(\"Get preview chapter by category failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9f8c0417-dbc2-488c-bd34-e50d20a64a45","parentUUID":"6d4dbc61-d29f-4964-a800-4553219666a5","isHook":false,"skipped":false}],"suites":[],"passes":["9f8c0417-dbc2-488c-bd34-e50d20a64a45"],"failures":[],"pending":[],"skipped":[],"duration":657,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d37221a4-dc72-48de-ab9c-b334415e649b","title":"","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"276f9b44-ca1b-4fba-9a35-9bd0ec9d4b09","title":"Get my workshop successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.1 My Workshop/4.03.1 myWorkshop.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my workshop or not","fullTitle":"Get my workshop successfully with status code 200 Checking if should be able Get my workshop or not","timedOut":null,"duration":890,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/workshop\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my workshop Response:\", response.body);\n    console.log(\"Get my workshop Response:\", response.body);\n  } else {\n    cy.log(\"Get my workshop failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"57156bf2-ad99-4482-9c47-167731cb4c64","parentUUID":"276f9b44-ca1b-4fba-9a35-9bd0ec9d4b09","isHook":false,"skipped":false}],"suites":[],"passes":["57156bf2-ad99-4482-9c47-167731cb4c64"],"failures":[],"pending":[],"skipped":[],"duration":890,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"45ae505e-b230-4d21-a9d9-03d6d3d5e56b","title":"","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"645dbc45-679b-4835-a28d-60098053eb1e","title":"Get my labs successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.2 My Labs/4.03.2 myLabs.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my labs or not","fullTitle":"Get my labs successfully with status code 200 Checking if should be able Get my labs or not","timedOut":null,"duration":917,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/lab\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my labs Response:\", response.body);\n    console.log(\"Get my labs Response:\", response.body);\n  } else {\n    cy.log(\"Get my labs failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"78a0a124-66cd-4911-91ee-d3b27dd37e50","parentUUID":"645dbc45-679b-4835-a28d-60098053eb1e","isHook":false,"skipped":false}],"suites":[],"passes":["78a0a124-66cd-4911-91ee-d3b27dd37e50"],"failures":[],"pending":[],"skipped":[],"duration":917,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5dc8da1f-0149-40a1-bb29-3e4bf0b2f410","title":"","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6a0cd3f4-1cee-4123-a341-c001544e75df","title":"Get my interviews successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","file":"cypress/e2e/04. Program Service/03. Workshop/4.03.3 My Interviews/4.03.3 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my interviews or not","fullTitle":"Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not","timedOut":null,"duration":908,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/interview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my interviews Response:\", response.body);\n    console.log(\"Get my interviews Response:\", response.body);\n  } else {\n    cy.log(\"Get my interviews failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"16095949-a1a6-4d84-ba10-c2963abbfdc5","parentUUID":"6a0cd3f4-1cee-4123-a341-c001544e75df","isHook":false,"skipped":false}],"suites":[],"passes":["16095949-a1a6-4d84-ba10-c2963abbfdc5"],"failures":[],"pending":[],"skipped":[],"duration":908,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b81cd08d-0b9e-4558-898e-b0b9afb94ae8","title":"","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.1 Create Show N Tell/4.05.1 createShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.1 Create Show N Tell/4.05.1 createShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"4b3cb2bd-e0f8-4d28-9385-9628b40521f2","title":"Create show n tell successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.1 Create Show N Tell/4.05.1 createShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.1 Create Show N Tell/4.05.1 createShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create show n tell or not","fullTitle":"Create show n tell successfully with status code 200 Checking if should be able Create show n tell or not","timedOut":null,"duration":848,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/show-tell/add\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    title: \"Sample Title 2\",\n    agenda: \"Sample Agenda\",\n    date: \"2024-09-21T13:52:03+06:00\",\n    attachments: [\"\"],\n    users: [\"662882ef82d3120019fade53\", \"662776ef82d3120019fa94ec\"],\n    notifications: [{\n      timeBefore: 15,\n      methods: [\"inbox\"],\n      chatGroups: []\n    }],\n    creator: \"64ef676669eaf6370c11429c\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/showNTellID.json\", {\n      snt_id: response.body.item._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create show n tell Response:\", response.body);\n    console.log(\"Create show n tell Response:\", response.body);\n  } else {\n    cy.log(\"Create show n tell failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"dab38d83-2115-4824-96f8-0bbcc6822470","parentUUID":"4b3cb2bd-e0f8-4d28-9385-9628b40521f2","isHook":false,"skipped":false}],"suites":[],"passes":["dab38d83-2115-4824-96f8-0bbcc6822470"],"failures":[],"pending":[],"skipped":[],"duration":848,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"65802728-2c9a-4b62-81d6-24b8cdb5f2aa","title":"","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.2 Update Show N Tell/4.05.2 updateShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.2 Update Show N Tell/4.05.2 updateShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"25318c73-e1be-43eb-a805-ae0f2ae71d9f","title":"Update show n tell successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.2 Update Show N Tell/4.05.2 updateShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.2 Update Show N Tell/4.05.2 updateShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update show n tell or not","fullTitle":"Update show n tell successfully with status code 200 Checking if should be able Update show n tell or not","timedOut":null,"duration":914,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/show-tell/update/${snt_id}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    title: \"Updated Title 3\",\n    agenda: \"Updated Agenda\",\n    date: \"2024-09-21T13:52:03+06:00\",\n    users: [\"662882ef82d3120019fade53\", \"662776ef82d3120019fa94ec\"],\n    attachments: [\"\"],\n    notifications: [{\n      timeBefore: 15,\n      methods: [\"inbox\"],\n      chatGroups: []\n    }]\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update show n tell Response:\", response.body);\n    console.log(\"Update show n tell Response:\", response.body);\n  } else {\n    cy.log(\"Update show n tell failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ee3a6760-1042-49dc-8f55-2f66d2793443","parentUUID":"25318c73-e1be-43eb-a805-ae0f2ae71d9f","isHook":false,"skipped":false}],"suites":[],"passes":["ee3a6760-1042-49dc-8f55-2f66d2793443"],"failures":[],"pending":[],"skipped":[],"duration":914,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7751d296-d0c6-4554-b4e9-0e185cb85ef5","title":"","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.3 My Show N Tell/4.05.3 myShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.3 My Show N Tell/4.05.3 myShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"66acdc63-ee18-455e-a5ef-65bb70a93924","title":"Get my show n tell successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.3 My Show N Tell/4.05.3 myShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.3 My Show N Tell/4.05.3 myShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my show n tell or not","fullTitle":"Get my show n tell successfully with status code 200 Checking if should be able Get my show n tell or not","timedOut":null,"duration":830,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/show-tell/myshows\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my show n tell Response:\", response.body);\n    console.log(\"Get my show n tell Response:\", response.body);\n  } else {\n    cy.log(\"Get my show n tell failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a4e8b6be-9ee2-443c-bcbe-0423c0fdb3df","parentUUID":"66acdc63-ee18-455e-a5ef-65bb70a93924","isHook":false,"skipped":false}],"suites":[],"passes":["a4e8b6be-9ee2-443c-bcbe-0423c0fdb3df"],"failures":[],"pending":[],"skipped":[],"duration":830,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"3875e6eb-b114-4a4b-9579-98695f65553d","title":"","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.4 Delete Show N Tell/4.05.4 deleteShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.4 Delete Show N Tell/4.05.4 deleteShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"38327a85-91e1-4afe-a95e-8fc601293e01","title":"Delete show n tell successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.4 Delete Show N Tell/4.05.4 deleteShowNTell.cy.js","file":"cypress/e2e/04. Program Service/05. Show N Tell/4.05.4 Delete Show N Tell/4.05.4 deleteShowNTell.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete show n tell or not","fullTitle":"Delete show n tell successfully with status code 200 Checking if should be able Delete show n tell or not","timedOut":null,"duration":832,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/show-tell/delete/${snt_id}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Delete show n tell Response:\", response.body);\n    console.log(\"Delete show n tell Response:\", response.body);\n  } else {\n    cy.log(\"Delete show n tell failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"746e4564-3226-4fb3-9b61-661f09aad59a","parentUUID":"38327a85-91e1-4afe-a95e-8fc601293e01","isHook":false,"skipped":false}],"suites":[],"passes":["746e4564-3226-4fb3-9b61-661f09aad59a"],"failures":[],"pending":[],"skipped":[],"duration":832,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c955a911-61bf-4cc9-95d0-384370255eca","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.1 My Interviews/4.06.1 myInterviews.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.1 My Interviews/4.06.1 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bc705b90-a496-4666-8207-1a09603ce002","title":"Get my interviews successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.1 My Interviews/4.06.1 myInterviews.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.1 My Interviews/4.06.1 myInterviews.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my interviews or not","fullTitle":"Get my interviews successfully with status code 200 Checking if should be able Get my interviews or not","timedOut":null,"duration":925,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/workshop/myworkshop/interview\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my interviews Response:\", response.body);\n    console.log(\"Get my interviews Response:\", response.body);\n  } else {\n    cy.log(\"Get my interviews failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a11833d1-a04f-438a-99a9-cc084ca10097","parentUUID":"bc705b90-a496-4666-8207-1a09603ce002","isHook":false,"skipped":false}],"suites":[],"passes":["a11833d1-a04f-438a-99a9-cc084ca10097"],"failures":[],"pending":[],"skipped":[],"duration":925,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"5deb9e49-9ea1-4f82-b949-007cade46e9f","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.2 Submit Answer/4.06.2 submitAnswer.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.2 Submit Answer/4.06.2 submitAnswer.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0be69a99-9629-4c32-8649-a0695e1d5ac4","title":"Submit interview answer successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.2 Submit Answer/4.06.2 submitAnswer.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.2 Submit Answer/4.06.2 submitAnswer.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Submit interview answer or not","fullTitle":"Submit interview answer successfully with status code 200 Checking if should be able Submit interview answer or not","timedOut":null,"duration":798,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: \"/interview/submit-answer\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    interview: \"66bc64f18a5075001979c83e\",\n    video: \"Interview question answer testing\",\n    audio: \"\",\n    question: \"66a45d333992e3001996d0a9\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Submit interview answer Response:\", response.body);\n    console.log(\"Submit interview answer Response:\", response.body);\n  } else {\n    cy.log(\"Submit interview answer failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c6b517de-1220-4b96-b5be-a000a7797f8c","parentUUID":"0be69a99-9629-4c32-8649-a0695e1d5ac4","isHook":false,"skipped":false}],"suites":[],"passes":["c6b517de-1220-4b96-b5be-a000a7797f8c"],"failures":[],"pending":[],"skipped":[],"duration":798,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e43ffb84-f02c-45e2-b1db-5be808048460","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.3 Final Submission/4.06.3 finalSubmission.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.3 Final Submission/4.06.3 finalSubmission.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"31875cf7-f724-4346-81f5-8a328950c724","title":"Submit final submission successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.3 Final Submission/4.06.3 finalSubmission.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.3 Final Submission/4.06.3 finalSubmission.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Submit final submission or not","fullTitle":"Submit final submission successfully with status code 200 Checking if should be able Submit final submission or not","timedOut":null,"duration":685,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/interview/finalsubmission\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Submit final submission Response:\", response.body);\n    console.log(\"Submit final submission Response:\", response.body);\n  } else {\n    cy.log(\"Submit final submission failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"04884dda-d275-42b3-b670-782583c790d0","parentUUID":"31875cf7-f724-4346-81f5-8a328950c724","isHook":false,"skipped":false}],"suites":[],"passes":["04884dda-d275-42b3-b670-782583c790d0"],"failures":[],"pending":[],"skipped":[],"duration":685,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b7c0eec5-da3c-45e8-8129-4156bb6073c8","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.4 Interview Question/4.06.4 interviewQuestion.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.4 Interview Question/4.06.4 interviewQuestion.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bcff1957-f154-42df-a68e-cfd61a2bb4f0","title":"Get interview question successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.4 Interview Question/4.06.4 interviewQuestion.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.4 Interview Question/4.06.4 interviewQuestion.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get interview question or not","fullTitle":"Get interview question successfully with status code 200 Checking if should be able Get interview question or not","timedOut":null,"duration":676,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/interview/answer/${interviewId}/${questionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get interview question Response:\", response.body);\n    console.log(\"Get interview question Response:\", response.body);\n  } else {\n    cy.log(\"Get interview question failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4f91220f-b679-457e-8030-fd61160c79a7","parentUUID":"bcff1957-f154-42df-a68e-cfd61a2bb4f0","isHook":false,"skipped":false}],"suites":[],"passes":["4f91220f-b679-457e-8030-fd61160c79a7"],"failures":[],"pending":[],"skipped":[],"duration":676,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d771ab49-20ff-4936-9dca-4dd05930e5c6","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.5 Interview Comment/4.06.5 interviewComment.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.5 Interview Comment/4.06.5 interviewComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"02dd5773-0571-451e-9efe-8363473c450c","title":"Post interview comment successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.5 Interview Comment/4.06.5 interviewComment.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.5 Interview Comment/4.06.5 interviewComment.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Post interview comment or not","fullTitle":"Post interview comment successfully with status code 200 Checking if should be able Post interview comment or not","timedOut":null,"duration":1592,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/interview/review/comment/${submissionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Post interview comment Response:\", response.body);\n    console.log(\"Post interview comment Response:\", response.body);\n  } else {\n    cy.log(\"Post interview comment failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"978583b1-e6cb-4eb3-9b72-9bc75ae61546","parentUUID":"02dd5773-0571-451e-9efe-8363473c450c","isHook":false,"skipped":false}],"suites":[],"passes":["978583b1-e6cb-4eb3-9b72-9bc75ae61546"],"failures":[],"pending":[],"skipped":[],"duration":1592,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"022d9858-b148-406b-bf2d-b98479645308","title":"","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.6 Share Interview/4.06.6 shareInterview.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.6 Share Interview/4.06.6 shareInterview.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0873b4d1-abfe-4684-b776-d97bdae1d35f","title":"Share interview successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/06. Interviews/4.06.6 Share Interview/4.06.6 shareInterview.cy.js","file":"cypress/e2e/04. Program Service/06. Interviews/4.06.6 Share Interview/4.06.6 shareInterview.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Share interview or not","fullTitle":"Share interview successfully with status code 200 Checking if should be able Share interview or not","timedOut":null,"duration":678,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/interview/share/${submissionId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Share interview Response:\", response.body);\n    console.log(\"Share interview Response:\", response.body);\n  } else {\n    cy.log(\"Share interview failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"77a7275c-175d-4837-87a6-75cecae10398","parentUUID":"0873b4d1-abfe-4684-b776-d97bdae1d35f","isHook":false,"skipped":false}],"suites":[],"passes":["77a7275c-175d-4837-87a6-75cecae10398"],"failures":[],"pending":[],"skipped":[],"duration":678,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"784e2003-f032-4766-853b-7d86c53b8a2d","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.1 Create Activity/4.08.1 createActivity.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.1 Create Activity/4.08.1 createActivity.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5c9d90b3-ff94-48dd-a338-354bcc9bfb99","title":"Create activity successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.1 Create Activity/4.08.1 createActivity.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.1 Create Activity/4.08.1 createActivity.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create activity or not","fullTitle":"Create activity successfully with status code 200 Checking if should be able Create activity or not","timedOut":null,"duration":809,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/communication/shout\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  body: {\n    title: \"Title\",\n    category: \"day2day\",\n    description: \"nothing to hide\",\n    attachments: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 201) {\n    // Assertions\n    expect(response.status).to.eq(201);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create activity Response:\", response.body);\n    console.log(\"Create activity Response:\", response.body);\n  } else {\n    cy.log(\"Create activity failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8f7e70de-7c22-40a3-8376-dc05ebde6027","parentUUID":"5c9d90b3-ff94-48dd-a338-354bcc9bfb99","isHook":false,"skipped":false}],"suites":[],"passes":["8f7e70de-7c22-40a3-8376-dc05ebde6027"],"failures":[],"pending":[],"skipped":[],"duration":809,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"eee54105-cfd8-4538-a52a-5190025e941c","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.2 Update Activity/4.08.2 updateActivity.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.2 Update Activity/4.08.2 updateActivity.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2b9bc1a9-857d-404f-9f42-5862986d2c2b","title":"Update Activity successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.2 Update Activity/4.08.2 updateActivity.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.2 Update Activity/4.08.2 updateActivity.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update Activity or not","fullTitle":"Update Activity successfully with status code 200 Checking if should be able Update Activity or not","timedOut":null,"duration":619,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/communication/update/${activityId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    title: \"Update communication\",\n    category: \"day2day\",\n    description: \"No Change\",\n    attachments: \"\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update Activity Response:\", response.body);\n    console.log(\"Update Activity Response:\", response.body);\n  } else {\n    cy.log(\"Update Activity failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"eed35b97-cf62-4e9f-b503-32f89e810bb1","parentUUID":"2b9bc1a9-857d-404f-9f42-5862986d2c2b","isHook":false,"skipped":false}],"suites":[],"passes":["eed35b97-cf62-4e9f-b503-32f89e810bb1"],"failures":[],"pending":[],"skipped":[],"duration":619,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"437b7f71-ddf6-490a-8334-bf80d84ba073","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.3 Day2day Activities/4.08.3 dayToDayActivities.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.3 Day2day Activities/4.08.3 dayToDayActivities.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cfb72e1c-1937-4572-aeb1-f428f56cf865","title":"Day to day activities successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.3 Day2day Activities/4.08.3 dayToDayActivities.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.3 Day2day Activities/4.08.3 dayToDayActivities.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Day to day activities or not","fullTitle":"Day to day activities successfully with status code 200 Checking if should be able Day to day activities or not","timedOut":null,"duration":836,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/communication/myshout/day2day?page=1&limit=8`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Day to day activities Response:\", response.body);\n    console.log(\"Day to day activities Response:\", response.body);\n  } else {\n    cy.log(\"Day to day activities failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b1977875-e147-4580-a44a-f65abf45c26c","parentUUID":"cfb72e1c-1937-4572-aeb1-f428f56cf865","isHook":false,"skipped":false}],"suites":[],"passes":["b1977875-e147-4580-a44a-f65abf45c26c"],"failures":[],"pending":[],"skipped":[],"duration":836,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c1aa5484-65c8-4662-9012-a50d107a8c38","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.4 My Issues/4.08.4 myIssues.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.4 My Issues/4.08.4 myIssues.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"acfc01da-6dad-4ec4-9e77-060e1b058e97","title":"Get my issues successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.4 My Issues/4.08.4 myIssues.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.4 My Issues/4.08.4 myIssues.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to get my issues or not","fullTitle":"Get my issues successfully with status code 200 Checking if should be able to get my issues or not","timedOut":null,"duration":1045,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/communication/mypost/issues\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Get Issues successfully\");\n    console.log(\"Get Issues successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Get my issues failed with status code:\", response.status);\n    console.log(`Get my issues failed with status code ${response.status}`);\n    cy.log(`Get my issues failed  ${response.body.error}`);\n    console.log(`Get my issues failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"45ee4824-148f-4bc8-ab07-0a4583b6b3d8","parentUUID":"acfc01da-6dad-4ec4-9e77-060e1b058e97","isHook":false,"skipped":false}],"suites":[],"passes":["45ee4824-148f-4bc8-ab07-0a4583b6b3d8"],"failures":[],"pending":[],"skipped":[],"duration":1045,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f6e1c27b-619a-4abc-8f52-7b13b423fc60","title":"","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.5 Post My Issue/4.08.5 postMyIssue.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.5 Post My Issue/4.08.5 postMyIssue.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"4989aa04-a0ee-47e9-b677-8580dc400d6d","title":"Create my issue post successfully with status code 200","fullFile":"cypress/e2e/04. Program Service/08. Communication/4.08.5 Post My Issue/4.08.5 postMyIssue.cy.js","file":"cypress/e2e/04. Program Service/08. Communication/4.08.5 Post My Issue/4.08.5 postMyIssue.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able to Create my issue post or not","fullTitle":"Create my issue post successfully with status code 200 Checking if should be able to Create my issue post or not","timedOut":null,"duration":815,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/communication/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollmentId\n  },\n  body: {\n    title: \"test\",\n    date: \"2024-12-20T18:00:00.000Z\",\n    description: \"fasdasd\",\n    category: \"issues\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"Issue posted successfully\");\n    console.log(\"Issue posted successfully\");\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"response.body\", JSON.stringify(response.body, null, 1));\n  } else {\n    cy.log(\"Create my issue post failed with status code:\", response.status);\n    console.log(`Create my issue post failed with status code ${response.status}`);\n    cy.log(`Create my issue post failed  ${response.body.error}`);\n    console.log(`Create my issue post failed  ${response.body.error}`);\n  }\n});","err":{},"uuid":"c16c6785-d1b1-44b8-94e7-4360c3daa287","parentUUID":"4989aa04-a0ee-47e9-b677-8580dc400d6d","isHook":false,"skipped":false}],"suites":[],"passes":["c16c6785-d1b1-44b8-94e7-4360c3daa287"],"failures":[],"pending":[],"skipped":[],"duration":815,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4ca93ae9-ad1b-4efb-928c-2a9e8a533908","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.1 Send Message/6.03.1 sendMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.1 Send Message/6.03.1 sendMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"d9735590-8e4d-49b9-bc26-9442c55799c8","title":"Send chat message with status code 200","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.1 Send Message/6.03.1 sendMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.1 Send Message/6.03.1 sendMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Send chat message or not","fullTitle":"Send chat message with status code 200 Checking if should be able Send chat message or not","timedOut":null,"duration":872,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/chat/sendmessage/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    text: \"Your message here\",\n    files: []\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/messageId.json\", {\n      messageId: response.body.message._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Send chat message Response:\", response.body);\n  } else {\n    cy.log(\"Send chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3c2b2314-f9be-4cd2-bec0-d67b18fd6696","parentUUID":"d9735590-8e4d-49b9-bc26-9442c55799c8","isHook":false,"skipped":false}],"suites":[],"passes":["3c2b2314-f9be-4cd2-bec0-d67b18fd6696"],"failures":[],"pending":[],"skipped":[],"duration":872,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ccfe68be-3723-4c3f-9002-b8f8a30fec0d","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.2 Update Message/6.03.2 updateMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.2 Update Message/6.03.2 updateMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"47932f16-9388-4ca3-93a8-efe9c9195b5f","title":"Update chat message with status code 200","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.2 Update Message/6.03.2 updateMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.2 Update Message/6.03.2 updateMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update chat message or not","fullTitle":"Update chat message with status code 200 Checking if should be able Update chat message or not","timedOut":null,"duration":831,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/update/message/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    text: \"Updated message text\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update chat message Response:\", response.body);\n  } else {\n    cy.log(\"Update chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"00045880-f37e-42b2-9445-215bc94f5f0c","parentUUID":"47932f16-9388-4ca3-93a8-efe9c9195b5f","isHook":false,"skipped":false}],"suites":[],"passes":["00045880-f37e-42b2-9445-215bc94f5f0c"],"failures":[],"pending":[],"skipped":[],"duration":831,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f3c0ade1-432d-4bd1-adf0-2faef02d1804","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.3 Fetch Chat Message/6.03.3 fetchChatMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.3 Fetch Chat Message/6.03.3 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bc6704e5-0c98-48bb-85fc-4c7a0a063816","title":"Fetch the chat message with status code 200","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.3 Fetch Chat Message/6.03.3 fetchChatMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.3 Fetch Chat Message/6.03.3 fetchChatMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch the chat message or not","fullTitle":"Fetch the chat message with status code 200 Checking if should be able Fetch the chat message or not","timedOut":null,"duration":680,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/messages`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    page: 1,\n    chat: chatId,\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch the chat message Response:\", response.body);\n  } else {\n    cy.log(\"Fetch the chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"88735457-0595-43fd-9697-c652a6f51aa8","parentUUID":"bc6704e5-0c98-48bb-85fc-4c7a0a063816","isHook":false,"skipped":false}],"suites":[],"passes":["88735457-0595-43fd-9697-c652a6f51aa8"],"failures":[],"pending":[],"skipped":[],"duration":680,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"54e2da0c-f89d-477c-89ff-d21609cc36c9","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.4 Fetch Chat Image/6.03.4 fetchChatImage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.4 Fetch Chat Image/6.03.4 fetchChatImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"fb2e4b48-8a81-4f5c-bba2-68a27958c73f","title":"Fetch chat image with status code 200","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.4 Fetch Chat Image/6.03.4 fetchChatImage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.4 Fetch Chat Image/6.03.4 fetchChatImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch chat image or not","fullTitle":"Fetch chat image with status code 200 Checking if should be able Fetch chat image or not","timedOut":null,"duration":658,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/media/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    limit: 1,\n    type: \"image\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch chat image Response:\", response.body);\n  } else {\n    cy.log(\"Fetch chat image failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"869bdca4-afab-4670-a796-71e49d6e3ff9","parentUUID":"fb2e4b48-8a81-4f5c-bba2-68a27958c73f","isHook":false,"skipped":false}],"suites":[],"passes":["869bdca4-afab-4670-a796-71e49d6e3ff9"],"failures":[],"pending":[],"skipped":[],"duration":658,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2c320326-60bc-47c4-8053-21d3220661f8","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.5 Emoji Reaction Toggle/6.03.5 emojiReactionToggle.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.5 Emoji Reaction Toggle/6.03.5 emojiReactionToggle.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"30ddad95-f4ea-4603-a310-547ea6738289","title":"Emoji reaction toggle with status code 200","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.5 Emoji Reaction Toggle/6.03.5 emojiReactionToggle.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.5 Emoji Reaction Toggle/6.03.5 emojiReactionToggle.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Emoji reaction toggle or not","fullTitle":"Emoji reaction toggle with status code 200 Checking if should be able Emoji reaction toggle or not","timedOut":null,"duration":676,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/chat/react/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    symbol: \"😍\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Emoji reaction toggle Response:\", response.body);\n  } else {\n    cy.log(\"Emoji reaction toggle failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1b02550c-7e4a-41be-b824-f3a8f5ccd6ec","parentUUID":"30ddad95-f4ea-4603-a310-547ea6738289","isHook":false,"skipped":false}],"suites":[],"passes":["1b02550c-7e4a-41be-b824-f3a8f5ccd6ec"],"failures":[],"pending":[],"skipped":[],"duration":676,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7c5aaffe-d23a-4678-a3bc-134ff311a381","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.6 Fetch Chat Voice/6.03.6 fetchChatVoice.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.6 Fetch Chat Voice/6.03.6 fetchChatVoice.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"75d88f87-5648-4b74-882c-4642f7b50d5e","title":"Fetch chat image with status code 200","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.6 Fetch Chat Voice/6.03.6 fetchChatVoice.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.6 Fetch Chat Voice/6.03.6 fetchChatVoice.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Fetch chat image or not","fullTitle":"Fetch chat image with status code 200 Checking if should be able Fetch chat image or not","timedOut":null,"duration":652,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/media/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    limit: 1,\n    type: \"voice\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Fetch chat image Response:\", response.body);\n  } else {\n    cy.log(\"Fetch chat image failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"30709f5c-7ac8-48cc-ae1b-d2012d51ce3f","parentUUID":"75d88f87-5648-4b74-882c-4642f7b50d5e","isHook":false,"skipped":false}],"suites":[],"passes":["30709f5c-7ac8-48cc-ae1b-d2012d51ce3f"],"failures":[],"pending":[],"skipped":[],"duration":652,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"aa55b449-a64d-4c19-9bf7-2178a6e876f1","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.7 Update Message Status/6.03.7 updateMessageStatus.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.7 Update Message Status/6.03.7 updateMessageStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e2159b16-8039-48cf-a895-e828ba0f3acc","title":"Update message status with status code 200","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.7 Update Message Status/6.03.7 updateMessageStatus.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.7 Update Message Status/6.03.7 updateMessageStatus.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update message status or not","fullTitle":"Update message status with status code 200 Checking if should be able Update message status or not","timedOut":null,"duration":0,"state":"pending","speed":null,"pass":false,"fail":false,"pending":true,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/update-status/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    status: \"delivered\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update message status Response:\", response.body);\n  } else {\n    cy.log(\"Update message status failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"223f90b7-3e44-462f-8065-31da7660a3b0","parentUUID":"e2159b16-8039-48cf-a895-e828ba0f3acc","isHook":false,"skipped":false}],"suites":[],"passes":[],"failures":[],"pending":["223f90b7-3e44-462f-8065-31da7660a3b0"],"skipped":[],"duration":0,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4fcf8467-d7f0-4b43-bb63-6a53c9208000","title":"","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.8 Delete Message/6.03.8 deleteMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.8 Delete Message/6.03.8 deleteMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e6df4946-f10d-4530-8597-8a04125927bb","title":"Delete chat message with status code 200","fullFile":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.8 Delete Message/6.03.8 deleteMessage.cy.js","file":"cypress/e2e/06. Chat Service/03. Chat Message/6.03.8 Delete Message/6.03.8 deleteMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Delete chat message or not","fullTitle":"Delete chat message with status code 200 Checking if should be able Delete chat message or not","timedOut":null,"duration":638,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/chat/delete/message/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    symbol: \"😍\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Delete chat message Response:\", response.body);\n  } else {\n    cy.log(\"Delete chat message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e02247f5-b770-48b9-ae2d-b4719cfc2a24","parentUUID":"e6df4946-f10d-4530-8597-8a04125927bb","isHook":false,"skipped":false}],"suites":[],"passes":["e02247f5-b770-48b9-ae2d-b4719cfc2a24"],"failures":[],"pending":[],"skipped":[],"duration":638,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"e0cd93cf-ba36-46d0-82f8-c659b087df4d","title":"","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.1 Pin or Unpin Message/6.07.1 pinOrUnpinMessage.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.1 Pin or Unpin Message/6.07.1 pinOrUnpinMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"96abe669-c3f9-4bcd-b8f7-c1c3b0bdab5e","title":"Pin or Unpin message successfully with status code 200","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.1 Pin or Unpin Message/6.07.1 pinOrUnpinMessage.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.1 Pin or Unpin Message/6.07.1 pinOrUnpinMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Pin or Unpin message or not","fullTitle":"Pin or Unpin message successfully with status code 200 Checking if should be able Pin or Unpin message or not","timedOut":null,"duration":673,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/pin/${messageId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Pin or Unpin message Response:\", response.body);\n    console.log(\"Pin or Unpin message Response:\", response.body);\n  } else {\n    cy.log(\"Pin or Unpin message failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5c05dc6a-15da-44c0-b0bc-b1065bffa3cc","parentUUID":"96abe669-c3f9-4bcd-b8f7-c1c3b0bdab5e","isHook":false,"skipped":false}],"suites":[],"passes":["5c05dc6a-15da-44c0-b0bc-b1065bffa3cc"],"failures":[],"pending":[],"skipped":[],"duration":673,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"71faca69-3014-466e-ade9-5152f841b0fa","title":"","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.2 Pinned Message/6.07.2 pinnedMessage.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.2 Pinned Message/6.07.2 pinnedMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9176605c-cb29-4550-99db-35039b286806","title":"Get thread messages successfully with status code 200","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.2 Pinned Message/6.07.2 pinnedMessage.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.2 Pinned Message/6.07.2 pinnedMessage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get thread messages or not","fullTitle":"Get thread messages successfully with status code 200 Checking if should be able Get thread messages or not","timedOut":null,"duration":630,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/chat/fetchpinned/${chatId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get thread messages Response:\", response.body);\n    console.log(\"Get thread messages Response:\", response.body);\n  } else {\n    cy.log(\"Get thread messages failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3c92561b-58c3-432a-8849-6e0a92b8eadc","parentUUID":"9176605c-cb29-4550-99db-35039b286806","isHook":false,"skipped":false}],"suites":[],"passes":["3c92561b-58c3-432a-8849-6e0a92b8eadc"],"failures":[],"pending":[],"skipped":[],"duration":630,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"d6460994-4bb2-4c79-b1c8-f1c0c06f4bbf","title":"","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.3 Favorite or Unfavorite/6.07.3 favoriteOrUnfavorite.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.3 Favorite or Unfavorite/6.07.3 favoriteOrUnfavorite.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0c501801-6ff0-4015-aec2-b92c9bbc8e3a","title":"Favorite or unfavorite chat with status code 200","fullFile":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.3 Favorite or Unfavorite/6.07.3 favoriteOrUnfavorite.cy.js","file":"cypress/e2e/06. Chat Service/07. Chat Action/6.07.3 Favorite or Unfavorite/6.07.3 favoriteOrUnfavorite.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Favorite or unfavorite chat or not","fullTitle":"Favorite or unfavorite chat with status code 200 Checking if should be able Favorite or unfavorite chat or not","timedOut":null,"duration":620,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PUT\",\n  url: `/chat/favourite`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    chat: chatId,\n    isFavourite: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(7000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Favorite or unfavorite chat Response:\", response.body);\n  } else {\n    cy.log(\"Favorite or unfavorite chat failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"c80e41f1-4c63-43a4-8ce5-4617a7fd6966","parentUUID":"0c501801-6ff0-4015-aec2-b92c9bbc8e3a","isHook":false,"skipped":false}],"suites":[],"passes":["c80e41f1-4c63-43a4-8ce5-4617a7fd6966"],"failures":[],"pending":[],"skipped":[],"duration":620,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"144eefd5-dfe0-440f-8d56-0d0e6a7f1528","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.1 Create Crowd/6.08.1 createCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.1 Create Crowd/6.08.1 createCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"dd795e32-9b74-43f0-8760-e1b97f520279","title":"Create crowd with status code 200","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.1 Create Crowd/6.08.1 createCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.1 Create Crowd/6.08.1 createCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create crowd or not","fullTitle":"Create crowd with status code 200 Checking if should be able Create crowd or not","timedOut":null,"duration":690,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/channel/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    name: faker.person.fullName,\n    description: \"It's description\",\n    users: [\"64ef676669eaf6370c11429c\", \"650e70e7165fc20019352988\"],\n    isReadOnly: false,\n    isPublic: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/crowdId.json\", {\n      crowdId: response.body.chat._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Create crowd Response:\", response.body);\n  } else {\n    cy.log(\"Create crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9ec48714-1957-4914-8995-d0d6e544aad6","parentUUID":"dd795e32-9b74-43f0-8760-e1b97f520279","isHook":false,"skipped":false}],"suites":[],"passes":["9ec48714-1957-4914-8995-d0d6e544aad6"],"failures":[],"pending":[],"skipped":[],"duration":690,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"38c75e85-dba3-44b2-bf13-86f1e2fba7ad","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.2 Add User To Crowd/6.08.2 addUserToCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.2 Add User To Crowd/6.08.2 addUserToCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ee9b2cda-aca3-4557-b671-58350902de63","title":"Add user to crowd with status code 200","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.2 Add User To Crowd/6.08.2 addUserToCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.2 Add User To Crowd/6.08.2 addUserToCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add user to crowd or not","fullTitle":"Add user to crowd with status code 200 Checking if should be able Add user to crowd or not","timedOut":null,"duration":631,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/adduser/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    user: memberId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Add user to crowd Response:\", response.body);\n  } else {\n    cy.log(\"Add user to crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"9291f7c9-2193-4ede-8647-fa21e9ffecdc","parentUUID":"ee9b2cda-aca3-4557-b671-58350902de63","isHook":false,"skipped":false}],"suites":[],"passes":["9291f7c9-2193-4ede-8647-fa21e9ffecdc"],"failures":[],"pending":[],"skipped":[],"duration":631,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7628ea24-d547-43d8-b97d-6a4bee7ff0d1","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.3 Update Crowd Avatar/6.08.3 updateCrowdAvatar.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.3 Update Crowd Avatar/6.08.3 updateCrowdAvatar.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"6112c1a0-c117-492d-a404-dc70112c48d4","title":"Update crowd avatar with status code 200","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.3 Update Crowd Avatar/6.08.3 updateCrowdAvatar.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.3 Update Crowd Avatar/6.08.3 updateCrowdAvatar.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update crowd avatar or not","fullTitle":"Update crowd avatar with status code 200 Checking if should be able Update crowd avatar or not","timedOut":null,"duration":577,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/update/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    avatar: \"https://ts4uportal-all-files-upload.nyc3.digitaloceanspaces.com/undefined/1733208057920-avatar.JPEG\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update crowd avatar Response:\", response.body);\n  } else {\n    cy.log(\"Update crowd avatar failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b8766fd9-0ae1-44b4-a6e0-e7ba38d760e3","parentUUID":"6112c1a0-c117-492d-a404-dc70112c48d4","isHook":false,"skipped":false}],"suites":[],"passes":["b8766fd9-0ae1-44b4-a6e0-e7ba38d760e3"],"failures":[],"pending":[],"skipped":[],"duration":577,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"b308a6c6-2287-4727-b0af-8e1bef582bbb","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.4 Update Crowd Details/6.08.4 updateCrowdDetails.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.4 Update Crowd Details/6.08.4 updateCrowdDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5faf955c-08a5-40a5-a884-799eb7ea22c5","title":"Update crowd details with status code 200","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.4 Update Crowd Details/6.08.4 updateCrowdDetails.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.4 Update Crowd Details/6.08.4 updateCrowdDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update crowd details or not","fullTitle":"Update crowd details with status code 200 Checking if should be able Update crowd details or not","timedOut":null,"duration":683,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/update/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    name: \"Channel no 2\",\n    description: \"Nothing\",\n    isReadOnly: false,\n    isPublic: true\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update crowd details Response:\", response.body);\n  } else {\n    cy.log(\"Update crowd details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"be5ad2ce-c883-4ba6-9d43-6c89668f9617","parentUUID":"5faf955c-08a5-40a5-a884-799eb7ea22c5","isHook":false,"skipped":false}],"suites":[],"passes":["be5ad2ce-c883-4ba6-9d43-6c89668f9617"],"failures":[],"pending":[],"skipped":[],"duration":683,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"27ec1c7e-3052-41ff-b6ac-9031e0822014","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.5 Crowd Members/6.08.5 crowdMembers.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.5 Crowd Members/6.08.5 crowdMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9896c3ca-a3a8-4aab-96c2-5132b7edfa0a","title":"Get crowd members with status code 200","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.5 Crowd Members/6.08.5 crowdMembers.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.5 Crowd Members/6.08.5 crowdMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get crowd members or not","fullTitle":"Get crowd members with status code 200 Checking if should be able Get crowd members or not","timedOut":null,"duration":631,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    const user = response.body.results.find(item => item.user._id === targetUserId);\n    cy.writeFile(\"cypress/fixtures/crowdMember.json\", {\n      crowdMember: user\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Get crowd members Response:\", response.body);\n  } else {\n    cy.log(\"Get crowd members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"ee33abf8-c5db-41b8-89b6-c0469b3fa9fe","parentUUID":"9896c3ca-a3a8-4aab-96c2-5132b7edfa0a","isHook":false,"skipped":false}],"suites":[],"passes":["ee33abf8-c5db-41b8-89b6-c0469b3fa9fe"],"failures":[],"pending":[],"skipped":[],"duration":631,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4cc20b67-473e-4933-9b91-5487dfd7c018","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.6 Search Crowd Members/6.06.6 searchCrowdMembers.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.6 Search Crowd Members/6.06.6 searchCrowdMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ba0ea259-777b-4513-a8a2-edeb3def5e8d","title":"Search chat members with status code 200","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.6 Search Crowd Members/6.06.6 searchCrowdMembers.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.6 Search Crowd Members/6.06.6 searchCrowdMembers.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Search chat members or not","fullTitle":"Search chat members with status code 200 Checking if should be able Search chat members or not","timedOut":null,"duration":595,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: `/chat/members/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    query: \"anonno\",\n    limit: 5\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Search chat members Response:\", response.body);\n  } else {\n    cy.log(\"Search chat members failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"3f40d8f5-5c6c-460a-9f78-fbe62dc455a9","parentUUID":"ba0ea259-777b-4513-a8a2-edeb3def5e8d","isHook":false,"skipped":false}],"suites":[],"passes":["3f40d8f5-5c6c-460a-9f78-fbe62dc455a9"],"failures":[],"pending":[],"skipped":[],"duration":595,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"f730c97a-14f6-45d8-a7e1-c4245d64c182","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.7 Remove User From Crowd/6.08.7 removeMemberFromChannel.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.7 Remove User From Crowd/6.08.7 removeMemberFromChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"cbee3c06-1e6d-4f8c-bc3f-6c5544039fa7","title":"Remove member from crowd with status code 200","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.7 Remove User From Crowd/6.08.7 removeMemberFromChannel.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.7 Remove User From Crowd/6.08.7 removeMemberFromChannel.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Remove member from crowd or not","fullTitle":"Remove member from crowd with status code 200 Checking if should be able Remove member from crowd or not","timedOut":null,"duration":557,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/remove-user/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    member: crowdMember\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Remove member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Remove member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"105336b7-fb2b-4e30-9b6e-62214d44f4dc","parentUUID":"cbee3c06-1e6d-4f8c-bc3f-6c5544039fa7","isHook":false,"skipped":false}],"suites":[],"passes":["105336b7-fb2b-4e30-9b6e-62214d44f4dc"],"failures":[],"pending":[],"skipped":[],"duration":557,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"516144e2-57b1-4fdf-b0ce-91d90228bea4","title":"","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.8 Leave From Crowd/6.08.8 leaveFromCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.8 Leave From Crowd/6.08.8 leaveFromCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f27841c3-7473-4280-997b-c0548660d907","title":"Leave from crowd with status code 200","fullFile":"cypress/e2e/06. Chat Service/08. Channel/6.08.8 Leave From Crowd/6.08.8 leaveFromCrowd.cy.js","file":"cypress/e2e/06. Chat Service/08. Channel/6.08.8 Leave From Crowd/6.08.8 leaveFromCrowd.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Leave from crowd or not","fullTitle":"Leave from crowd with status code 200 Checking if should be able Leave from crowd or not","timedOut":null,"duration":1021,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/chat/channel/leave/${crowdId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Leave from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Leave from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"d915ec38-f7f4-416f-bf5a-a0aebffb9f8b","parentUUID":"f27841c3-7473-4280-997b-c0548660d907","isHook":false,"skipped":false}],"suites":[],"passes":["d915ec38-f7f4-416f-bf5a-a0aebffb9f8b"],"failures":[],"pending":[],"skipped":[],"duration":1021,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"89eec09c-2c25-4663-99d8-368c8b903f00","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.1 Update Member Role/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.1 Update Member Role/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2aeba066-cd1b-4d92-a2d0-2aa333c2852a","title":"Update member role with status code 200","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.1 Update Member Role/6.07.1 updateMemberRole.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.1 Update Member Role/6.07.1 updateMemberRole.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update member role or not","fullTitle":"Update member role with status code 200 Checking if should be able Update member role or not","timedOut":null,"duration":703,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n    // Organization: organizationId,\n  },\n  body: {\n    member: memberId,\n    role: \"moderator\",\n    chat: chatId,\n    actionType: \"role\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Update member role Response:\", response.body);\n  } else {\n    cy.log(\"Update member role failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1f161a92-e56f-4047-87a6-a1d524b4827c","parentUUID":"2aeba066-cd1b-4d92-a2d0-2aa333c2852a","isHook":false,"skipped":false}],"suites":[],"passes":["1f161a92-e56f-4047-87a6-a1d524b4827c"],"failures":[],"pending":[],"skipped":[],"duration":703,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"2e5c4493-8d98-4124-931a-51f08877ae6b","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.2 Mute Member/6.09.2 muteMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.2 Mute Member/6.09.2 muteMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"a8dcd30a-fde9-413e-8114-79dd77c7d053","title":"Mute member from crowd with status code 200","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.2 Mute Member/6.09.2 muteMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.2 Mute Member/6.09.2 muteMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Mute member from crowd or not","fullTitle":"Mute member from crowd with status code 200 Checking if should be able Mute member from crowd or not","timedOut":null,"duration":666,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    member: member,\n    selectedOption: 1,\n    date: null,\n    note: \"Nothing\",\n    chat: chatId,\n    actionType: \"mute\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Mute member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Mute member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"6b0e6135-ba91-4f65-8b40-e368441ee80e","parentUUID":"a8dcd30a-fde9-413e-8114-79dd77c7d053","isHook":false,"skipped":false}],"suites":[],"passes":["6b0e6135-ba91-4f65-8b40-e368441ee80e"],"failures":[],"pending":[],"skipped":[],"duration":666,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"7c9ba854-3233-44e1-85bd-780d750371db","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.3 Unmute Member/6.09.3 unmuteMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.3 Unmute Member/6.09.3 unmuteMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"f24fb573-eea2-4d73-9862-443ee819c1d7","title":"Unmute member from crowd with status code 200","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.3 Unmute Member/6.09.3 unmuteMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.3 Unmute Member/6.09.3 unmuteMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Unmute member from crowd or not","fullTitle":"Unmute member from crowd with status code 200 Checking if should be able Unmute member from crowd or not","timedOut":null,"duration":664,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    member: member,\n    selectedOption: 1,\n    date: null,\n    note: \"Nothing\",\n    chat: chatId,\n    actionType: \"unmute\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Unmute member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Unmute member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5a271449-ec2b-4166-aa2d-f3bc54c2cf23","parentUUID":"f24fb573-eea2-4d73-9862-443ee819c1d7","isHook":false,"skipped":false}],"suites":[],"passes":["5a271449-ec2b-4166-aa2d-f3bc54c2cf23"],"failures":[],"pending":[],"skipped":[],"duration":664,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"cab6b239-5b8d-4736-839c-7a31772bd34d","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.4 Block Member/6.09.4 blockMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.4 Block Member/6.09.4 blockMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0157cb5c-4fbd-465c-b1ba-b92331a5263f","title":"Block member from crowd with status code 200","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.4 Block Member/6.09.4 blockMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.4 Block Member/6.09.4 blockMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Block member from crowd or not","fullTitle":"Block member from crowd with status code 200 Checking if should be able Block member from crowd or not","timedOut":null,"duration":667,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    member: member,\n    chat: chatId,\n    actionType: \"block\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Block member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Block member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"a528a593-fdd3-409d-bf3c-07b67813440f","parentUUID":"0157cb5c-4fbd-465c-b1ba-b92331a5263f","isHook":false,"skipped":false}],"suites":[],"passes":["a528a593-fdd3-409d-bf3c-07b67813440f"],"failures":[],"pending":[],"skipped":[],"duration":667,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4f293ab5-566d-44a7-bcf1-b70606c4f0fa","title":"","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.5 Unblock Member/6.09.5 unblockMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.5 Unblock Member/6.09.5 unblockMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"2d02ba1b-96c4-4d99-9e3a-352848a44ec3","title":"Unblock member from crowd with status code 200","fullFile":"cypress/e2e/06. Chat Service/09. Member Action/6.09.5 Unblock Member/6.09.5 unblockMember.cy.js","file":"cypress/e2e/06. Chat Service/09. Member Action/6.09.5 Unblock Member/6.09.5 unblockMember.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Unblock member from crowd or not","fullTitle":"Unblock member from crowd with status code 200 Checking if should be able Unblock member from crowd or not","timedOut":null,"duration":682,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/chat/member/update\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    member: member,\n    chat: chatId,\n    actionType: \"Unblock\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(3000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    console.log(\"Unblock member from crowd Response:\", response.body);\n  } else {\n    cy.log(\"Unblock member from crowd failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fa717d4b-bce9-4df6-a8bc-f6add9e7e808","parentUUID":"2d02ba1b-96c4-4d99-9e3a-352848a44ec3","isHook":false,"skipped":false}],"suites":[],"passes":["fa717d4b-bce9-4df6-a8bc-f6add9e7e808"],"failures":[],"pending":[],"skipped":[],"duration":682,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c40a37bd-1b7b-4f1e-ac5b-01aef92e81d0","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.1 Create Event/8.01.1 createEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.1 Create Event/8.01.1 createEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"bef5c240-2a81-43c7-ae91-1c602c30dd7f","title":"Create a calendar event successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.1 Create Event/8.01.1 createEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.1 Create Event/8.01.1 createEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Create a calendar event or not","fullTitle":"Create a calendar event successfully with status code 200 Checking if should be able Create a calendar event or not","timedOut":null,"duration":826,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/calendar/event/create\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  body: {\n    title: \"create a new event\",\n    start: \"2024-07-15T04:34:00.000Z\",\n    end: \"2024-07-15T05:04:00.000Z\",\n    agenda: \"Ffff\",\n    description: \"Ffff\",\n    actionItems: \"Fff\",\n    followUp: \"Ffff\",\n    notifications: [{\n      timeBefore: \"5\",\n      methods: [\"push\"],\n      chatGroups: []\n    }, {\n      timeBefore: 15,\n      methods: [\"push\"],\n      chatGroups: []\n    }],\n    meetingLink: \"\",\n    eventColor: \"gray\",\n    eventType: \"reviewMeeting\",\n    attachments: [],\n    invitations: [\"6527902f122aa03f94d8576e\", \"64ef676669eaf6370c11429c\"],\n    isAllDay: false,\n    timeRange: {\n      disabledEditTimeRange: false,\n      turnOn: false,\n      repeatIteration: 1,\n      repeatPeriod: \"week\",\n      repeatDays: [1]\n    },\n    timeZone: \"Asia/Dhaka\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    cy.writeFile(\"cypress/fixtures/eventId.json\", {\n      event_id: response.body.event._id\n    });\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Create a calendar event Response:\", response.body);\n    console.log(\"Create a calendar event Response:\", response.body);\n  } else {\n    cy.log(\"Create a calendar event failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5cc49a18-c764-4c43-a6e3-f768454e3148","parentUUID":"bef5c240-2a81-43c7-ae91-1c602c30dd7f","isHook":false,"skipped":false}],"suites":[],"passes":["5cc49a18-c764-4c43-a6e3-f768454e3148"],"failures":[],"pending":[],"skipped":[],"duration":826,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"0a7bcaa0-fbfa-4191-9419-05bcce83715a","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.2 Edit Event/8.01.2 editEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.2 Edit Event/8.01.2 editEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"9e243213-b229-4891-986e-8ac082ae4921","title":"Update calender event successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.2 Edit Event/8.01.2 editEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.2 Edit Event/8.01.2 editEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update calender event or not","fullTitle":"Update calender event successfully with status code 200 Checking if should be able Update calender event or not","timedOut":null,"duration":649,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/update/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    title: \"Update event\",\n    start: \"2024-07-15T04:34:00.000Z\",\n    end: \"2024-07-15T05:04:00.000Z\",\n    agenda: \"Ffff\",\n    description: \"Ffff\",\n    actionItems: \"Fff\",\n    followUp: \"Ffff\",\n    notifications: [{\n      timeBefore: \"5\",\n      methods: [\"push\"],\n      chatGroups: []\n    }, {\n      timeBefore: 15,\n      methods: [\"push\"],\n      chatGroups: []\n    }],\n    meetingLink: \"\",\n    eventColor: \"gray\",\n    eventType: \"reviewMeeting\",\n    attachments: [],\n    invitations: [\"663eeccc2e9c740019d33425\", \"6633d94abac9199ca01635a4\"],\n    isAllDay: false,\n    timeRange: {\n      disabledEditTimeRange: false,\n      turnOn: false,\n      repeatIteration: 1,\n      repeatPeriod: \"week\",\n      repeatDays: [1]\n    },\n    timeZone: \"Asia/Dhaka\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update calender event Response:\", response.body);\n    console.log(\"Update calender event Response:\", response.body);\n  } else {\n    cy.log(\"Update calender event failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8129f7ca-c7fd-46d5-a892-5fb847dec6a1","parentUUID":"9e243213-b229-4891-986e-8ac082ae4921","isHook":false,"skipped":false}],"suites":[],"passes":["8129f7ca-c7fd-46d5-a892-5fb847dec6a1"],"failures":[],"pending":[],"skipped":[],"duration":649,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"91bd5b9c-f279-43cc-9d45-3444f27bb222","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.3 My Events/8.01.3 myEvents.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.3 My Events/8.01.3 myEvents.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b693721a-e073-4569-8bf6-2ec82f598ab4","title":"Get my events successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.3 My Events/8.01.3 myEvents.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.3 My Events/8.01.3 myEvents.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get my events or not","fullTitle":"Get my events successfully with status code 200 Checking if should be able Get my events or not","timedOut":null,"duration":960,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/calendar/event/myevents\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Organization: organizationId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get my events Response:\", response.body);\n    console.log(\"Get my events Response:\", response.body);\n  } else {\n    cy.log(\"Get my events failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"e38ba383-b949-40a2-b351-fe7fcd29b617","parentUUID":"b693721a-e073-4569-8bf6-2ec82f598ab4","isHook":false,"skipped":false}],"suites":[],"passes":["e38ba383-b949-40a2-b351-fe7fcd29b617"],"failures":[],"pending":[],"skipped":[],"duration":960,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"24677761-135f-42bc-95d3-0b02e610937e","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.4 Event Details/8.01.4 eventDetails.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.4 Event Details/8.01.4 eventDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"8fd6f5d4-9679-4156-944a-5a4b1ff36153","title":"Get event details successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.4 Event Details/8.01.4 eventDetails.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.4 Event Details/8.01.4 eventDetails.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get event details or not","fullTitle":"Get event details successfully with status code 200 Checking if should be able Get event details or not","timedOut":null,"duration":627,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/calendar/event/details/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get event details Response:\", response.body);\n    console.log(\"Get event details Response:\", response.body);\n  } else {\n    cy.log(\"Get event details failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"4647e7f0-cd6a-4d1f-9d38-0e94db9a9bc1","parentUUID":"8fd6f5d4-9679-4156-944a-5a4b1ff36153","isHook":false,"skipped":false}],"suites":[],"passes":["4647e7f0-cd6a-4d1f-9d38-0e94db9a9bc1"],"failures":[],"pending":[],"skipped":[],"duration":627,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"68568128-f253-4b35-8e8d-dac117a8fb96","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.5 Delete Event/8.01.5 deleteEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.5 Delete Event/8.01.5 deleteEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"90398479-287c-4ea2-b0cc-fd11de8b9584","title":"Event delete successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.5 Delete Event/8.01.5 deleteEvent.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.5 Delete Event/8.01.5 deleteEvent.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Event delete or not","fullTitle":"Event delete successfully with status code 200 Checking if should be able Event delete or not","timedOut":null,"duration":637,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"DELETE\",\n  url: `/calendar/event/delete/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Event delete Response:\", response.body);\n    console.log(\"Event delete Response:\", response.body);\n  } else {\n    cy.log(\"Event delete failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b86dec54-a290-49bc-a5e8-bc77471b85bc","parentUUID":"90398479-287c-4ea2-b0cc-fd11de8b9584","isHook":false,"skipped":false}],"suites":[],"passes":["b86dec54-a290-49bc-a5e8-bc77471b85bc"],"failures":[],"pending":[],"skipped":[],"duration":637,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"c73800c7-dc04-487e-a609-2127227ef522","title":"","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.6 Event History/8.01.6 eventHistory.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.6 Event History/8.01.6 eventHistory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"732483b1-9872-4292-b6e9-d011ff1f4304","title":"Get event history successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/01. Events/8.01.6 Event History/8.01.6 eventHistory.cy.js","file":"cypress/e2e/08. Calendar Service/01. Events/8.01.6 Event History/8.01.6 eventHistory.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get event history or not","fullTitle":"Get event history successfully with status code 200 Checking if should be able Get event history or not","timedOut":null,"duration":707,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"POST\",\n  url: \"/history/getHistory\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    itemId: eventId\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get event history Response:\", response.body);\n    console.log(\"Get event history Response:\", response.body);\n  } else {\n    cy.log(\"Get event history failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"b1ecc2e2-435d-417e-b072-c61a930e18c8","parentUUID":"732483b1-9872-4292-b6e9-d011ff1f4304","isHook":false,"skipped":false}],"suites":[],"passes":["b1ecc2e2-435d-417e-b072-c61a930e18c8"],"failures":[],"pending":[],"skipped":[],"duration":707,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4f8fbe46-53ec-4275-98f0-a2ff39283211","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.1 Add User/8.02.1 addUser.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.1 Add User/8.02.1 addUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"0389d772-0154-4d28-9185-4f1d5ff9ced0","title":"Add invitation user successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.1 Add User/8.02.1 addUser.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.1 Add User/8.02.1 addUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Add invitation user or not","fullTitle":"Add invitation user successfully with status code 200 Checking if should be able Add invitation user or not","timedOut":null,"duration":680,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"add\",\n    user: \"650e70e7165fc20019352988\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Add invitation user Response:\", response.body);\n    console.log(\"Add invitation user Response:\", response.body);\n  } else {\n    cy.log(\"Add invitation user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"aa488aaa-4fea-4ff5-a20d-603493af45f5","parentUUID":"0389d772-0154-4d28-9185-4f1d5ff9ced0","isHook":false,"skipped":false}],"suites":[],"passes":["aa488aaa-4fea-4ff5-a20d-603493af45f5"],"failures":[],"pending":[],"skipped":[],"duration":680,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"12dfa5c2-3e4a-4ffd-98aa-308acc79c348","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.2 Remove User/8.02.2 removeUser.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.2 Remove User/8.02.2 removeUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b58ded86-2a28-4faf-8c2e-53dcb1df6765","title":"Remove invitation user successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.2 Remove User/8.02.2 removeUser.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.2 Remove User/8.02.2 removeUser.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Remove invitation user or not","fullTitle":"Remove invitation user successfully with status code 200 Checking if should be able Remove invitation user or not","timedOut":null,"duration":601,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"remove\",\n    user: \"650e70e7165fc20019352988\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Remove invitation user Response:\", response.body);\n    console.log(\"Remove invitation user Response:\", response.body);\n  } else {\n    cy.log(\"Remove invitation user failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"89705971-e55e-4636-a515-2180c84e61e1","parentUUID":"b58ded86-2a28-4faf-8c2e-53dcb1df6765","isHook":false,"skipped":false}],"suites":[],"passes":["89705971-e55e-4636-a515-2180c84e61e1"],"failures":[],"pending":[],"skipped":[],"duration":601,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"363faf07-df94-4be2-9e9d-9b4f9d599767","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.3 Proposed New Event Time/8.02.3 proposedNewEventTime.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.3 Proposed New Event Time/8.02.3 proposedNewEventTime.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"218b37ed-657b-4de3-8aaf-608b7886f800","title":"Proposed new event time successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.3 Proposed New Event Time/8.02.3 proposedNewEventTime.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.3 Proposed New Event Time/8.02.3 proposedNewEventTime.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Proposed new event time or not","fullTitle":"Proposed new event time successfully with status code 200 Checking if should be able Proposed new event time or not","timedOut":null,"duration":661,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"status\",\n    status: \"proposedTime\",\n    participantId: \"674d62885889530019c2cb10\",\n    proposedTime: {\n      start: \"2024-12-05T07:30:59.535Z\",\n      end: \"2024-12-05T15:45:59.535Z\"\n    }\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Proposed new event time Response:\", response.body);\n    console.log(\"Proposed new event time Response:\", response.body);\n  } else {\n    cy.log(\"Proposed new event time failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"5caac4ab-cd39-4275-8a85-ac3f17bcba2e","parentUUID":"218b37ed-657b-4de3-8aaf-608b7886f800","isHook":false,"skipped":false}],"suites":[],"passes":["5caac4ab-cd39-4275-8a85-ac3f17bcba2e"],"failures":[],"pending":[],"skipped":[],"duration":661,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"03d770c8-badb-4cde-9a87-dc9b40e873d4","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.4 Accept Invitaiton/8.02.4 acceptInvitation.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.4 Accept Invitaiton/8.02.4 acceptInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"65cd06ab-9f23-4bae-8532-b9e7495d26cc","title":"Accept invitation successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.4 Accept Invitaiton/8.02.4 acceptInvitation.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.4 Accept Invitaiton/8.02.4 acceptInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Accept invitation or not","fullTitle":"Accept invitation successfully with status code 200 Checking if should be able Accept invitation or not","timedOut":null,"duration":667,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"status\",\n    participantId: participantId,\n    status: \"accepted\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Accept invitation Response:\", response.body);\n    console.log(\"Accept invitation Response:\", response.body);\n  } else {\n    cy.log(\"Accept invitation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"fcecb8cf-fb5e-43c7-af3c-4625421ffd74","parentUUID":"65cd06ab-9f23-4bae-8532-b9e7495d26cc","isHook":false,"skipped":false}],"suites":[],"passes":["fcecb8cf-fb5e-43c7-af3c-4625421ffd74"],"failures":[],"pending":[],"skipped":[],"duration":667,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"bb3dcf54-f406-49d7-9e38-cd196064cc40","title":"","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.5 Deny Invitation/8.02.5 denyInvitation.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.5 Deny Invitation/8.02.5 denyInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"e4186a24-07f2-492e-bcce-ca7094f9dd23","title":"Denied invitation successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.5 Deny Invitation/8.02.5 denyInvitation.cy.js","file":"cypress/e2e/08. Calendar Service/02. Invitation/8.02.5 Deny Invitation/8.02.5 denyInvitation.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Denied invitation or not","fullTitle":"Denied invitation successfully with status code 200 Checking if should be able Denied invitation or not","timedOut":null,"duration":804,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/event/invitation/${eventId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    action: \"status\",\n    participantId: participantId,\n    status: \"denied\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Denied invitation Response:\", response.body);\n    console.log(\"Denied invitation Response:\", response.body);\n  } else {\n    cy.log(\"Denied invitation failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"8f5e4f2b-02b6-484c-bc07-93498f70f00a","parentUUID":"e4186a24-07f2-492e-bcce-ca7094f9dd23","isHook":false,"skipped":false}],"suites":[],"passes":["8f5e4f2b-02b6-484c-bc07-93498f70f00a"],"failures":[],"pending":[],"skipped":[],"duration":804,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"69aaa873-1707-4e75-afab-1bf938b07771","title":"","fullFile":"cypress/e2e/08. Calendar Service/03. Calendar Config/01. Holidays/8.03.1 holidays.cy.js","file":"cypress/e2e/08. Calendar Service/03. Calendar Config/01. Holidays/8.03.1 holidays.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"ad43085d-0636-4c00-a75f-16a42560fcde","title":"Calender config holidays successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/03. Calendar Config/01. Holidays/8.03.1 holidays.cy.js","file":"cypress/e2e/08. Calendar Service/03. Calendar Config/01. Holidays/8.03.1 holidays.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Calender config holidays or not","fullTitle":"Calender config holidays successfully with status code 200 Checking if should be able Calender config holidays or not","timedOut":null,"duration":659,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/calendar/config/type/${type}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Calender config holidays Response:\", response.body);\n    console.log(\"Calender config holidays Response:\", response.body);\n  } else {\n    cy.log(\"Calender config holidays failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"7a3e60c1-5f1c-452a-a708-1e52da4db809","parentUUID":"ad43085d-0636-4c00-a75f-16a42560fcde","isHook":false,"skipped":false}],"suites":[],"passes":["7a3e60c1-5f1c-452a-a708-1e52da4db809"],"failures":[],"pending":[],"skipped":[],"duration":659,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ef6ac515-b642-43f8-8b12-0bfd1d578f26","title":"","fullFile":"cypress/e2e/08. Calendar Service/03. Calendar Config/02. Weekends/8.03.2 weekends.cy.js","file":"cypress/e2e/08. Calendar Service/03. Calendar Config/02. Weekends/8.03.2 weekends.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"46b2366f-864f-4a81-960c-9565644db6ff","title":"Calender config weekends successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/03. Calendar Config/02. Weekends/8.03.2 weekends.cy.js","file":"cypress/e2e/08. Calendar Service/03. Calendar Config/02. Weekends/8.03.2 weekends.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Calender config weekends or not","fullTitle":"Calender config weekends successfully with status code 200 Checking if should be able Calender config weekends or not","timedOut":null,"duration":756,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/calendar/config/type/${type}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`,\n    Enrollment: enrollment\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Calender config weekends Response:\", response.body);\n    console.log(\"Calender config weekends Response:\", response.body);\n  } else {\n    cy.log(\"Calender config weekends failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"0dedf7a1-cc95-4e06-a987-a5746b75fcf0","parentUUID":"46b2366f-864f-4a81-960c-9565644db6ff","isHook":false,"skipped":false}],"suites":[],"passes":["0dedf7a1-cc95-4e06-a987-a5746b75fcf0"],"failures":[],"pending":[],"skipped":[],"duration":756,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"dbd0b903-8356-42a7-8d5f-cdf0ad13fec5","title":"","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.1 Get All Schedule/8.04.1 getAllSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.1 Get All Schedule/8.04.1 getAllSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"438c5451-dd4e-46cc-aad3-6584dbb6a8dd","title":"Get all availability schedule successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.1 Get All Schedule/8.04.1 getAllSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.1 Get All Schedule/8.04.1 getAllSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Get all availability schedule or not","fullTitle":"Get all availability schedule successfully with status code 200 Checking if should be able Get all availability schedule or not","timedOut":null,"duration":510,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: \"/calendar/schedule/all\",\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    // expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Get all availability schedule Response:\", response.body);\n    console.log(\"Get all availability schedule Response:\", response.body);\n  } else {\n    cy.log(\"Get all availability schedule failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"1a555496-7f21-4dc0-9ca2-856a9c136eb6","parentUUID":"438c5451-dd4e-46cc-aad3-6584dbb6a8dd","isHook":false,"skipped":false}],"suites":[],"passes":["1a555496-7f21-4dc0-9ca2-856a9c136eb6"],"failures":[],"pending":[],"skipped":[],"duration":510,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"ca928e31-db28-4fe3-a7a9-3bb91c34d40d","title":"","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.2 Find Schedule/8.04.2 findSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.2 Find Schedule/8.04.2 findSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"5655c977-adce-44d9-bf99-70c5bbee359e","title":"Find user availability schedule successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.2 Find Schedule/8.04.2 findSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.2 Find Schedule/8.04.2 findSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Find user availability schedule or not","fullTitle":"Find user availability schedule successfully with status code 200 Checking if should be able Find user availability schedule or not","timedOut":null,"duration":543,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"GET\",\n  url: `/calendar/schedule/find/${user_id}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Find user availability schedule Response:\", response.body);\n    console.log(\"Find user availability schedule Response:\", response.body);\n  } else {\n    cy.log(\"Find user availability schedule failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"42ad909f-5488-43cd-8758-a3028ac41abd","parentUUID":"5655c977-adce-44d9-bf99-70c5bbee359e","isHook":false,"skipped":false}],"suites":[],"passes":["42ad909f-5488-43cd-8758-a3028ac41abd"],"failures":[],"pending":[],"skipped":[],"duration":543,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"4afb4e81-6bd4-4a4e-8f21-32de10f211e0","title":"","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.3 Update Schedule/8.04.3 updateSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.3 Update Schedule/8.04.3 updateSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"eb022b0f-bc92-4fb7-8119-423a358cefc2","title":"Update availability schedule successfully with status code 200","fullFile":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.3 Update Schedule/8.04.3 updateSchedule.cy.js","file":"cypress/e2e/08. Calendar Service/04. Schedule/8.04.3 Update Schedule/8.04.3 updateSchedule.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Checking if should be able Update availability schedule or not","fullTitle":"Update availability schedule successfully with status code 200 Checking if should be able Update availability schedule or not","timedOut":null,"duration":585,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"cy.request({\n  method: \"PATCH\",\n  url: `/calendar/schedule/update/${scheduleId}`,\n  headers: {\n    Authorization: `Bearer ${accessToken}`\n  },\n  body: {\n    availability: [{\n      _id: \"658b2e0f0e8b2153646d05bc\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"afb05a2be5ee3e2490d9b7fc\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }],\n      wday: \"monday\"\n    }, {\n      _id: \"658bf962f89a3a7314b913fb\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"56cf6f89fc420b7fc338a311\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }, {\n        _id: \"86c2a8e4e52f361c8ae7d9b0\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }],\n      wday: \"tuesday\"\n    }, {\n      _id: \"658bf962f89a3a7314b913ff\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"6665390cd456da0019e7c49f\",\n        from: \"09:00\",\n        to: \"17:00\"\n      }],\n      wday: \"wednesday\"\n    }, {\n      _id: \"658bf962f89a3a7314b91403\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"6665390cd456da0019e7c49f\",\n        from: \"20:00\",\n        to: \"17:00\"\n      }],\n      wday: \"thursday\"\n    }, {\n      _id: \"658bf962f89a3a7314b91407\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"fc95e353f3852ce30e59161e\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }, {\n        _id: \"56cf6f89fc420b7fc338a311\",\n        from: \"11:00\",\n        to: \"12:00\"\n      }],\n      wday: \"friday\"\n    }, {\n      _id: \"66a4aa543102ed0019b4eaee\",\n      type: \"wady\",\n      intervals: [{\n        _id: \"66a4aa543102ed0019b4eaef\",\n        from: \"09:00\",\n        to: \"15:00\"\n      }],\n      wday: \"saturday\"\n    }],\n    name: \"Ashik’s Time\",\n    timeZone: \"Asia/Dhaka\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  if (response.status === 200) {\n    // Assertions\n    expect(response.status).to.eq(200);\n    expect(response.duration).to.be.lessThan(2000);\n    expect(response.body).to.have.property(\"success\", true);\n    // Log the response for debugging\n    cy.log(\"response.body\", JSON.stringify(response.body, null, 1));\n    cy.log(\"Update availability schedule Response:\", response.body);\n    console.log(\"Update availability schedule Response:\", response.body);\n  } else {\n    cy.log(\"Update availability schedule failed with status code: \", response.status);\n    cy.log(response.body.error);\n  }\n});","err":{},"uuid":"14bb4344-1c6d-4d9c-a05a-c32bf476ab99","parentUUID":"eb022b0f-bc92-4fb7-8119-423a358cefc2","isHook":false,"skipped":false}],"suites":[],"passes":["14bb4344-1c6d-4d9c-a05a-c32bf476ab99"],"failures":[],"pending":[],"skipped":[],"duration":585,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000},{"uuid":"a427135c-9e8a-4f59-8259-c2605ac2a544","title":"","fullFile":"cypress/e2e/01. User Service/02. Update Image/1.02.1 updateImage.cy.js","file":"cypress/e2e/01. User Service/02. Update Image/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"b3f52798-9ca0-448f-b29b-d70073eaca46","title":"Update Profile Picture API","fullFile":"cypress/e2e/01. User Service/02. Update Image/1.02.1 updateImage.cy.js","file":"cypress/e2e/01. User Service/02. Update Image/1.02.1 updateImage.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Should successfully update the profile picture","fullTitle":"Update Profile Picture API Should successfully update the profile picture","timedOut":null,"duration":1950,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const imagePath = \"/images/image1.png\";\ncy.fixture(imagePath, \"binary\").then(Cypress.Blob.binaryStringToBlob).then(blob => {\n  const formData = new FormData();\n  formData.append(\"image\", blob, \"image1.png\");\n  // Send PATCH request with FormData\n  return cy.request({\n    method: \"PATCH\",\n    url: \"/user/updateimage\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: formData,\n    failOnStatusCode: false\n  });\n}).then(response => {\n  if (response.status === 200) {\n    expect(response.status).to.eq(200);\n    cy.log(\"Profile picture updated successfully\");\n    //   cy.log(JSON.stringify(response.body, null, 2));\n  } else {\n    cy.log(\"Profile picture update failed with status code: \", response.status);\n    cy.log(response.body.error || \"Unknown error\");\n  }\n});","err":{},"uuid":"24c65de8-6cb2-4d4e-a7b6-7cbfe59bd385","parentUUID":"b3f52798-9ca0-448f-b29b-d70073eaca46","isHook":false,"skipped":false}],"suites":[],"passes":["24c65de8-6cb2-4d4e-a7b6-7cbfe59bd385"],"failures":[],"pending":[],"skipped":[],"duration":1950,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":true,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"BootcampsHub Landing page API Automation documentation","embeddedScreenshots":true,"inlineAssets":true,"saveAllAttempts":true,"ignoreVideos":false,"videoOnFailOnly":false,"quiet":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
HTML result: ["/Users/anonno/Desktop/Anonno/bootcampshub-portal-api-automation/cypress/reports/html/index.html",null]
done
